:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualShaderNodeIntConstant.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualShaderNodeIntConstant:

VisualShaderNodeIntConstant
===========================

**Inherits:** :ref:`VisualShaderNodeConstant<class_VisualShaderNodeConstant>` **<** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

A scalar integer constant to be used within the visual shader graph.

Description
-----------

Translated to ``int`` in the shader language.

Properties
----------

+-----------------------+----------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`constant<class_VisualShaderNodeIntConstant_property_constant>` | ``0`` |
+-----------------------+----------------------------------------------------------------------+-------+

Property Descriptions
---------------------

.. _class_VisualShaderNodeIntConstant_property_constant:

- :ref:`int<class_int>` **constant**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_constant(value) |
+-----------+---------------------+
| *Getter*  | get_constant()      |
+-----------+---------------------+

An integer constant which represents a state of this node.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
