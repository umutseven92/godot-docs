:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ConcavePolygonShape3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ConcavePolygonShape3D:

ConcavePolygonShape3D
=====================

**Inherits:** :ref:`Shape3D<class_Shape3D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Concave polygon shape.

Description
-----------

Concave polygon shape resource, which can be set into a :ref:`PhysicsBody3D<class_PhysicsBody3D>` or area. This shape is created by feeding a list of triangles.

**Note:** When used for collision, ``ConcavePolygonShape3D`` is intended to work with static :ref:`PhysicsBody3D<class_PhysicsBody3D>` nodes like :ref:`StaticBody3D<class_StaticBody3D>` and will not work with :ref:`CharacterBody3D<class_CharacterBody3D>` or :ref:`RigidDynamicBody3D<class_RigidDynamicBody3D>` with a mode other than Static.

Tutorials
---------

- `3D Physics Tests Demo <https://godotengine.org/asset-library/asset/675>`__

Properties
----------

+-------------------------+------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`backface_collision<class_ConcavePolygonShape3D_property_backface_collision>` | ``false`` |
+-------------------------+------------------------------------------------------------------------------------+-----------+

Methods
-------

+-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`get_faces<class_ConcavePolygonShape3D_method_get_faces>` **(** **)** |const|                                                   |
+-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`set_faces<class_ConcavePolygonShape3D_method_set_faces>` **(** :ref:`PackedVector3Array<class_PackedVector3Array>` faces **)** |
+-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_ConcavePolygonShape3D_property_backface_collision:

- :ref:`bool<class_bool>` **backface_collision**

+-----------+---------------------------------------+
| *Default* | ``false``                             |
+-----------+---------------------------------------+
| *Setter*  | set_backface_collision_enabled(value) |
+-----------+---------------------------------------+
| *Getter*  | is_backface_collision_enabled()       |
+-----------+---------------------------------------+

If set to ``true``, collisions occur on both sides of the concave shape faces. Otherwise they occur only along the face normals.

Method Descriptions
-------------------

.. _class_ConcavePolygonShape3D_method_get_faces:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **get_faces** **(** **)** |const|

Returns the faces (an array of triangles).

----

.. _class_ConcavePolygonShape3D_method_set_faces:

- void **set_faces** **(** :ref:`PackedVector3Array<class_PackedVector3Array>` faces **)**

Sets the faces (an array of triangles).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
