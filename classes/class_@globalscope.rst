:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the @GlobalScope.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_@GlobalScope:

@GlobalScope
============

Global scope constants and variables.

Description
-----------

Global scope constants and variables. This is all that resides in the globals, constants regarding error codes, keycodes, property hints, etc.

Singletons are also documented here, since they can be accessed from anywhere.

Properties
----------

+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`AudioServer<class_AudioServer>`                         | :ref:`AudioServer<class_@GlobalScope_property_AudioServer>`                         |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`CameraServer<class_CameraServer>`                       | :ref:`CameraServer<class_@GlobalScope_property_CameraServer>`                       |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`ClassDB<class_ClassDB>`                                 | :ref:`ClassDB<class_@GlobalScope_property_ClassDB>`                                 |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`DisplayServer<class_DisplayServer>`                     | :ref:`DisplayServer<class_@GlobalScope_property_DisplayServer>`                     |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`Engine<class_Engine>`                                   | :ref:`Engine<class_@GlobalScope_property_Engine>`                                   |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`EngineDebugger<class_EngineDebugger>`                   | :ref:`EngineDebugger<class_@GlobalScope_property_EngineDebugger>`                   |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`Geometry2D<class_Geometry2D>`                           | :ref:`Geometry2D<class_@GlobalScope_property_Geometry2D>`                           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`Geometry3D<class_Geometry3D>`                           | :ref:`Geometry3D<class_@GlobalScope_property_Geometry3D>`                           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`GodotSharp<class_GodotSharp>`                           | :ref:`GodotSharp<class_@GlobalScope_property_GodotSharp>`                           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`IP<class_IP>`                                           | :ref:`IP<class_@GlobalScope_property_IP>`                                           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`Input<class_Input>`                                     | :ref:`Input<class_@GlobalScope_property_Input>`                                     |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`InputMap<class_InputMap>`                               | :ref:`InputMap<class_@GlobalScope_property_InputMap>`                               |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`JavaClassWrapper<class_JavaClassWrapper>`               | :ref:`JavaClassWrapper<class_@GlobalScope_property_JavaClassWrapper>`               |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`JavaScript<class_JavaScript>`                           | :ref:`JavaScript<class_@GlobalScope_property_JavaScript>`                           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`Marshalls<class_Marshalls>`                             | :ref:`Marshalls<class_@GlobalScope_property_Marshalls>`                             |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`NativeExtensionManager<class_NativeExtensionManager>`   | :ref:`NativeExtensionManager<class_@GlobalScope_property_NativeExtensionManager>`   |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`NavigationMeshGenerator<class_NavigationMeshGenerator>` | :ref:`NavigationMeshGenerator<class_@GlobalScope_property_NavigationMeshGenerator>` |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`NavigationServer2D<class_NavigationServer2D>`           | :ref:`NavigationServer2D<class_@GlobalScope_property_NavigationServer2D>`           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`NavigationServer3D<class_NavigationServer3D>`           | :ref:`NavigationServer3D<class_@GlobalScope_property_NavigationServer3D>`           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`OS<class_OS>`                                           | :ref:`OS<class_@GlobalScope_property_OS>`                                           |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`Performance<class_Performance>`                         | :ref:`Performance<class_@GlobalScope_property_Performance>`                         |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`PhysicsServer2D<class_PhysicsServer2D>`                 | :ref:`PhysicsServer2D<class_@GlobalScope_property_PhysicsServer2D>`                 |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`PhysicsServer3D<class_PhysicsServer3D>`                 | :ref:`PhysicsServer3D<class_@GlobalScope_property_PhysicsServer3D>`                 |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`ProjectSettings<class_ProjectSettings>`                 | :ref:`ProjectSettings<class_@GlobalScope_property_ProjectSettings>`                 |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`RenderingServer<class_RenderingServer>`                 | :ref:`RenderingServer<class_@GlobalScope_property_RenderingServer>`                 |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`ResourceLoader<class_ResourceLoader>`                   | :ref:`ResourceLoader<class_@GlobalScope_property_ResourceLoader>`                   |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`ResourceSaver<class_ResourceSaver>`                     | :ref:`ResourceSaver<class_@GlobalScope_property_ResourceSaver>`                     |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`ResourceUID<class_ResourceUID>`                         | :ref:`ResourceUID<class_@GlobalScope_property_ResourceUID>`                         |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`TextServerManager<class_TextServerManager>`             | :ref:`TextServerManager<class_@GlobalScope_property_TextServerManager>`             |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`Time<class_Time>`                                       | :ref:`Time<class_@GlobalScope_property_Time>`                                       |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`TranslationServer<class_TranslationServer>`             | :ref:`TranslationServer<class_@GlobalScope_property_TranslationServer>`             |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`VisualScriptCustomNodes<class_VisualScriptCustomNodes>` | :ref:`VisualScriptCustomNodes<class_@GlobalScope_property_VisualScriptCustomNodes>` |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :ref:`XRServer<class_XRServer>`                               | :ref:`XRServer<class_@GlobalScope_property_XRServer>`                               |
+---------------------------------------------------------------+-------------------------------------------------------------------------------------+

Methods
-------

+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`abs<class_@GlobalScope_method_abs>` **(** :ref:`Variant<class_Variant>` x **)**                                                                                                                                                     |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`absf<class_@GlobalScope_method_absf>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`absi<class_@GlobalScope_method_absi>` **(** :ref:`int<class_int>` x **)**                                                                                                                                                           |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`acos<class_@GlobalScope_method_acos>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`asin<class_@GlobalScope_method_asin>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`atan<class_@GlobalScope_method_atan>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`atan2<class_@GlobalScope_method_atan2>` **(** :ref:`float<class_float>` y, :ref:`float<class_float>` x **)**                                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`bytes2var<class_@GlobalScope_method_bytes2var>` **(** :ref:`PackedByteArray<class_PackedByteArray>` bytes **)**                                                                                                                     |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`bytes2var_with_objects<class_@GlobalScope_method_bytes2var_with_objects>` **(** :ref:`PackedByteArray<class_PackedByteArray>` bytes **)**                                                                                           |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`ceil<class_@GlobalScope_method_ceil>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`clamp<class_@GlobalScope_method_clamp>` **(** :ref:`Variant<class_Variant>` value, :ref:`Variant<class_Variant>` min, :ref:`Variant<class_Variant>` max **)**                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`clampf<class_@GlobalScope_method_clampf>` **(** :ref:`float<class_float>` value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**                                                                                 |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`clampi<class_@GlobalScope_method_clampi>` **(** :ref:`int<class_int>` value, :ref:`int<class_int>` min, :ref:`int<class_int>` max **)**                                                                                             |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`cos<class_@GlobalScope_method_cos>` **(** :ref:`float<class_float>` angle_rad **)**                                                                                                                                                 |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`cosh<class_@GlobalScope_method_cosh>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`db2linear<class_@GlobalScope_method_db2linear>` **(** :ref:`float<class_float>` db **)**                                                                                                                                            |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`deg2rad<class_@GlobalScope_method_deg2rad>` **(** :ref:`float<class_float>` deg **)**                                                                                                                                               |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`ease<class_@GlobalScope_method_ease>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` curve **)**                                                                                                                      |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                     | :ref:`error_string<class_@GlobalScope_method_error_string>` **(** :ref:`int<class_int>` error **)**                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`exp<class_@GlobalScope_method_exp>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                         |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`floor<class_@GlobalScope_method_floor>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                     |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`fmod<class_@GlobalScope_method_fmod>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**                                                                                                                          |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`fposmod<class_@GlobalScope_method_fposmod>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**                                                                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`hash<class_@GlobalScope_method_hash>` **(** :ref:`Variant<class_Variant>` variable **)**                                                                                                                                            |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>`                     | :ref:`instance_from_id<class_@GlobalScope_method_instance_from_id>` **(** :ref:`int<class_int>` instance_id **)**                                                                                                                         |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`inverse_lerp<class_@GlobalScope_method_inverse_lerp>` **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`is_equal_approx<class_@GlobalScope_method_is_equal_approx>` **(** :ref:`float<class_float>` a, :ref:`float<class_float>` b **)**                                                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`is_inf<class_@GlobalScope_method_is_inf>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                   |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`is_instance_id_valid<class_@GlobalScope_method_is_instance_id_valid>` **(** :ref:`int<class_int>` id **)**                                                                                                                          |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`is_instance_valid<class_@GlobalScope_method_is_instance_valid>` **(** :ref:`Variant<class_Variant>` instance **)**                                                                                                                  |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`is_nan<class_@GlobalScope_method_is_nan>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                   |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`is_zero_approx<class_@GlobalScope_method_is_zero_approx>` **(** :ref:`float<class_float>` x **)**                                                                                                                                   |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`lerp<class_@GlobalScope_method_lerp>` **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**                                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`lerp_angle<class_@GlobalScope_method_lerp_angle>` **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`linear2db<class_@GlobalScope_method_linear2db>` **(** :ref:`float<class_float>` lin **)**                                                                                                                                           |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`log<class_@GlobalScope_method_log>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                         |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`max<class_@GlobalScope_method_max>` **(** ... **)** |vararg|                                                                                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`maxf<class_@GlobalScope_method_maxf>` **(** :ref:`float<class_float>` a, :ref:`float<class_float>` b **)**                                                                                                                          |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`maxi<class_@GlobalScope_method_maxi>` **(** :ref:`int<class_int>` a, :ref:`int<class_int>` b **)**                                                                                                                                  |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`min<class_@GlobalScope_method_min>` **(** ... **)** |vararg|                                                                                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`minf<class_@GlobalScope_method_minf>` **(** :ref:`float<class_float>` a, :ref:`float<class_float>` b **)**                                                                                                                          |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`mini<class_@GlobalScope_method_mini>` **(** :ref:`int<class_int>` a, :ref:`int<class_int>` b **)**                                                                                                                                  |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`move_toward<class_@GlobalScope_method_move_toward>` **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` delta **)**                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`nearest_po2<class_@GlobalScope_method_nearest_po2>` **(** :ref:`int<class_int>` value **)**                                                                                                                                         |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`posmod<class_@GlobalScope_method_posmod>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)**                                                                                                                              |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`pow<class_@GlobalScope_method_pow>` **(** :ref:`float<class_float>` base, :ref:`float<class_float>` exp **)**                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`print<class_@GlobalScope_method_print>` **(** ... **)** |vararg|                                                                                                                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`print_verbose<class_@GlobalScope_method_print_verbose>` **(** ... **)** |vararg|                                                                                                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`printerr<class_@GlobalScope_method_printerr>` **(** ... **)** |vararg|                                                                                                                                                              |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`printraw<class_@GlobalScope_method_printraw>` **(** ... **)** |vararg|                                                                                                                                                              |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`prints<class_@GlobalScope_method_prints>` **(** ... **)** |vararg|                                                                                                                                                                  |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`printt<class_@GlobalScope_method_printt>` **(** ... **)** |vararg|                                                                                                                                                                  |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`push_error<class_@GlobalScope_method_push_error>` **(** ... **)** |vararg|                                                                                                                                                          |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`push_warning<class_@GlobalScope_method_push_warning>` **(** ... **)** |vararg|                                                                                                                                                      |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`rad2deg<class_@GlobalScope_method_rad2deg>` **(** :ref:`float<class_float>` rad **)**                                                                                                                                               |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedInt64Array<class_PackedInt64Array>` | :ref:`rand_from_seed<class_@GlobalScope_method_rand_from_seed>` **(** :ref:`int<class_int>` seed **)**                                                                                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`randf<class_@GlobalScope_method_randf>` **(** **)**                                                                                                                                                                                 |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`randf_range<class_@GlobalScope_method_randf_range>` **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to **)**                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`randi<class_@GlobalScope_method_randi>` **(** **)**                                                                                                                                                                                 |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`randi_range<class_@GlobalScope_method_randi_range>` **(** :ref:`int<class_int>` from, :ref:`int<class_int>` to **)**                                                                                                                |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`randomize<class_@GlobalScope_method_randomize>` **(** **)**                                                                                                                                                                         |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`range_lerp<class_@GlobalScope_method_range_lerp>` **(** :ref:`float<class_float>` value, :ref:`float<class_float>` istart, :ref:`float<class_float>` istop, :ref:`float<class_float>` ostart, :ref:`float<class_float>` ostop **)** |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`range_step_decimals<class_@GlobalScope_method_range_step_decimals>` **(** :ref:`float<class_float>` x **)**                                                                                                                         |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`rid_allocate_id<class_@GlobalScope_method_rid_allocate_id>` **(** **)**                                                                                                                                                             |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                           | :ref:`rid_from_int64<class_@GlobalScope_method_rid_from_int64>` **(** :ref:`int<class_int>` base **)**                                                                                                                                    |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`round<class_@GlobalScope_method_round>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                     |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`seed<class_@GlobalScope_method_seed>` **(** :ref:`int<class_int>` base **)**                                                                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`sign<class_@GlobalScope_method_sign>` **(** :ref:`Variant<class_Variant>` x **)**                                                                                                                                                   |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`signf<class_@GlobalScope_method_signf>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                     |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`signi<class_@GlobalScope_method_signi>` **(** :ref:`int<class_int>` x **)**                                                                                                                                                         |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`sin<class_@GlobalScope_method_sin>` **(** :ref:`float<class_float>` angle_rad **)**                                                                                                                                                 |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`sinh<class_@GlobalScope_method_sinh>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`smoothstep<class_@GlobalScope_method_smoothstep>` **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` x **)**                                                                             |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`snapped<class_@GlobalScope_method_snapped>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` step **)**                                                                                                                 |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`sqrt<class_@GlobalScope_method_sqrt>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`step_decimals<class_@GlobalScope_method_step_decimals>` **(** :ref:`float<class_float>` x **)**                                                                                                                                     |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                     | :ref:`str<class_@GlobalScope_method_str>` **(** ... **)** |vararg|                                                                                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`str2var<class_@GlobalScope_method_str2var>` **(** :ref:`String<class_String>` string **)**                                                                                                                                          |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`tan<class_@GlobalScope_method_tan>` **(** :ref:`float<class_float>` angle_rad **)**                                                                                                                                                 |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`tanh<class_@GlobalScope_method_tanh>` **(** :ref:`float<class_float>` x **)**                                                                                                                                                       |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`typeof<class_@GlobalScope_method_typeof>` **(** :ref:`Variant<class_Variant>` variable **)**                                                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedByteArray<class_PackedByteArray>`   | :ref:`var2bytes<class_@GlobalScope_method_var2bytes>` **(** :ref:`Variant<class_Variant>` variable **)**                                                                                                                                  |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedByteArray<class_PackedByteArray>`   | :ref:`var2bytes_with_objects<class_@GlobalScope_method_var2bytes_with_objects>` **(** :ref:`Variant<class_Variant>` variable **)**                                                                                                        |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                     | :ref:`var2str<class_@GlobalScope_method_var2str>` **(** :ref:`Variant<class_Variant>` variable **)**                                                                                                                                      |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                   | :ref:`weakref<class_@GlobalScope_method_weakref>` **(** :ref:`Variant<class_Variant>` obj **)**                                                                                                                                           |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`wrapf<class_@GlobalScope_method_wrapf>` **(** :ref:`float<class_float>` value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**                                                                                   |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`wrapi<class_@GlobalScope_method_wrapi>` **(** :ref:`int<class_int>` value, :ref:`int<class_int>` min, :ref:`int<class_int>` max **)**                                                                                               |
+-------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_@GlobalScope_Side:

.. _class_@GlobalScope_constant_SIDE_LEFT:

.. _class_@GlobalScope_constant_SIDE_TOP:

.. _class_@GlobalScope_constant_SIDE_RIGHT:

.. _class_@GlobalScope_constant_SIDE_BOTTOM:

enum **Side**:

- **SIDE_LEFT** = **0** --- Left side, usually used for :ref:`Control<class_Control>` or :ref:`StyleBox<class_StyleBox>`-derived classes.

- **SIDE_TOP** = **1** --- Top side, usually used for :ref:`Control<class_Control>` or :ref:`StyleBox<class_StyleBox>`-derived classes.

- **SIDE_RIGHT** = **2** --- Right side, usually used for :ref:`Control<class_Control>` or :ref:`StyleBox<class_StyleBox>`-derived classes.

- **SIDE_BOTTOM** = **3** --- Bottom side, usually used for :ref:`Control<class_Control>` or :ref:`StyleBox<class_StyleBox>`-derived classes.

----

.. _enum_@GlobalScope_Corner:

.. _class_@GlobalScope_constant_CORNER_TOP_LEFT:

.. _class_@GlobalScope_constant_CORNER_TOP_RIGHT:

.. _class_@GlobalScope_constant_CORNER_BOTTOM_RIGHT:

.. _class_@GlobalScope_constant_CORNER_BOTTOM_LEFT:

enum **Corner**:

- **CORNER_TOP_LEFT** = **0** --- Top-left corner.

- **CORNER_TOP_RIGHT** = **1** --- Top-right corner.

- **CORNER_BOTTOM_RIGHT** = **2** --- Bottom-right corner.

- **CORNER_BOTTOM_LEFT** = **3** --- Bottom-left corner.

----

.. _enum_@GlobalScope_Orientation:

.. _class_@GlobalScope_constant_VERTICAL:

.. _class_@GlobalScope_constant_HORIZONTAL:

enum **Orientation**:

- **VERTICAL** = **1** --- General vertical alignment, usually used for :ref:`Separator<class_Separator>`, :ref:`ScrollBar<class_ScrollBar>`, :ref:`Slider<class_Slider>`, etc.

- **HORIZONTAL** = **0** --- General horizontal alignment, usually used for :ref:`Separator<class_Separator>`, :ref:`ScrollBar<class_ScrollBar>`, :ref:`Slider<class_Slider>`, etc.

----

.. _enum_@GlobalScope_ClockDirection:

.. _class_@GlobalScope_constant_CLOCKWISE:

.. _class_@GlobalScope_constant_COUNTERCLOCKWISE:

enum **ClockDirection**:

- **CLOCKWISE** = **0**

- **COUNTERCLOCKWISE** = **1**

----

.. _enum_@GlobalScope_HAlign:

.. _class_@GlobalScope_constant_HALIGN_LEFT:

.. _class_@GlobalScope_constant_HALIGN_CENTER:

.. _class_@GlobalScope_constant_HALIGN_RIGHT:

.. _class_@GlobalScope_constant_HALIGN_FILL:

enum **HAlign**:

- **HALIGN_LEFT** = **0** --- Horizontal left alignment, usually for text-derived classes.

- **HALIGN_CENTER** = **1** --- Horizontal center alignment, usually for text-derived classes.

- **HALIGN_RIGHT** = **2** --- Horizontal right alignment, usually for text-derived classes.

- **HALIGN_FILL** = **3** --- Expand row to fit width, usually for text-derived classes.

----

.. _enum_@GlobalScope_VAlign:

.. _class_@GlobalScope_constant_VALIGN_TOP:

.. _class_@GlobalScope_constant_VALIGN_CENTER:

.. _class_@GlobalScope_constant_VALIGN_BOTTOM:

enum **VAlign**:

- **VALIGN_TOP** = **0** --- Vertical top alignment, usually for text-derived classes.

- **VALIGN_CENTER** = **1** --- Vertical center alignment, usually for text-derived classes.

- **VALIGN_BOTTOM** = **2** --- Vertical bottom alignment, usually for text-derived classes.

----

.. _enum_@GlobalScope_InlineAlign:

.. _class_@GlobalScope_constant_INLINE_ALIGN_TOP_TO:

.. _class_@GlobalScope_constant_INLINE_ALIGN_CENTER_TO:

.. _class_@GlobalScope_constant_INLINE_ALIGN_BOTTOM_TO:

.. _class_@GlobalScope_constant_INLINE_ALIGN_TO_TOP:

.. _class_@GlobalScope_constant_INLINE_ALIGN_TO_CENTER:

.. _class_@GlobalScope_constant_INLINE_ALIGN_TO_BASELINE:

.. _class_@GlobalScope_constant_INLINE_ALIGN_TO_BOTTOM:

.. _class_@GlobalScope_constant_INLINE_ALIGN_TOP:

.. _class_@GlobalScope_constant_INLINE_ALIGN_CENTER:

.. _class_@GlobalScope_constant_INLINE_ALIGN_BOTTOM:

enum **InlineAlign**:

- **INLINE_ALIGN_TOP_TO** = **0** --- Aligns the top of the inline object (e.g. image, table) to the position of the text specified by ``INLINE_ALIGN_TO_*`` constant.

- **INLINE_ALIGN_CENTER_TO** = **1** --- Aligns the center of the inline object (e.g. image, table) to the position of the text specified by ``INLINE_ALIGN_TO_*`` constant.

- **INLINE_ALIGN_BOTTOM_TO** = **2** --- Aligns the bottom of the inline object (e.g. image, table) to the position of the text specified by ``INLINE_ALIGN_TO_*`` constant.

- **INLINE_ALIGN_TO_TOP** = **0** --- Aligns the position of the inline object (e.g. image, table) specified by ``INLINE_ALIGN_*_TO`` constant to the top of the text.

- **INLINE_ALIGN_TO_CENTER** = **4** --- Aligns the position of the inline object (e.g. image, table) specified by ``INLINE_ALIGN_*_TO`` constant to the center of the text.

- **INLINE_ALIGN_TO_BASELINE** = **8** --- Aligns the position of the inline object (e.g. image, table) specified by ``INLINE_ALIGN_*_TO`` constant to the baseline of the text.

- **INLINE_ALIGN_TO_BOTTOM** = **12** --- Aligns inline object (e.g. image, table) to the bottom of the text.

- **INLINE_ALIGN_TOP** = **0** --- Aligns top of the inline object (e.g. image, table) to the top of the text. Equvalent to ``INLINE_ALIGN_TOP_TO | INLINE_ALIGN_TO_TOP``.

- **INLINE_ALIGN_CENTER** = **5** --- Aligns center of the inline object (e.g. image, table) to the center of the text. Equvalent to ``INLINE_ALIGN_CENTER_TO | INLINE_ALIGN_TO_CENTER``.

- **INLINE_ALIGN_BOTTOM** = **14** --- Aligns bottom of the inline object (e.g. image, table) to the bottom of the text. Equvalent to ``INLINE_ALIGN_BOTTOM_TO | INLINE_ALIGN_TO_BOTTOM``.

----

.. _enum_@GlobalScope_Key:

.. _class_@GlobalScope_constant_KEY_ESCAPE:

.. _class_@GlobalScope_constant_KEY_TAB:

.. _class_@GlobalScope_constant_KEY_BACKTAB:

.. _class_@GlobalScope_constant_KEY_BACKSPACE:

.. _class_@GlobalScope_constant_KEY_ENTER:

.. _class_@GlobalScope_constant_KEY_KP_ENTER:

.. _class_@GlobalScope_constant_KEY_INSERT:

.. _class_@GlobalScope_constant_KEY_DELETE:

.. _class_@GlobalScope_constant_KEY_PAUSE:

.. _class_@GlobalScope_constant_KEY_PRINT:

.. _class_@GlobalScope_constant_KEY_SYSREQ:

.. _class_@GlobalScope_constant_KEY_CLEAR:

.. _class_@GlobalScope_constant_KEY_HOME:

.. _class_@GlobalScope_constant_KEY_END:

.. _class_@GlobalScope_constant_KEY_LEFT:

.. _class_@GlobalScope_constant_KEY_UP:

.. _class_@GlobalScope_constant_KEY_RIGHT:

.. _class_@GlobalScope_constant_KEY_DOWN:

.. _class_@GlobalScope_constant_KEY_PAGEUP:

.. _class_@GlobalScope_constant_KEY_PAGEDOWN:

.. _class_@GlobalScope_constant_KEY_SHIFT:

.. _class_@GlobalScope_constant_KEY_CTRL:

.. _class_@GlobalScope_constant_KEY_META:

.. _class_@GlobalScope_constant_KEY_ALT:

.. _class_@GlobalScope_constant_KEY_CAPSLOCK:

.. _class_@GlobalScope_constant_KEY_NUMLOCK:

.. _class_@GlobalScope_constant_KEY_SCROLLLOCK:

.. _class_@GlobalScope_constant_KEY_F1:

.. _class_@GlobalScope_constant_KEY_F2:

.. _class_@GlobalScope_constant_KEY_F3:

.. _class_@GlobalScope_constant_KEY_F4:

.. _class_@GlobalScope_constant_KEY_F5:

.. _class_@GlobalScope_constant_KEY_F6:

.. _class_@GlobalScope_constant_KEY_F7:

.. _class_@GlobalScope_constant_KEY_F8:

.. _class_@GlobalScope_constant_KEY_F9:

.. _class_@GlobalScope_constant_KEY_F10:

.. _class_@GlobalScope_constant_KEY_F11:

.. _class_@GlobalScope_constant_KEY_F12:

.. _class_@GlobalScope_constant_KEY_F13:

.. _class_@GlobalScope_constant_KEY_F14:

.. _class_@GlobalScope_constant_KEY_F15:

.. _class_@GlobalScope_constant_KEY_F16:

.. _class_@GlobalScope_constant_KEY_KP_MULTIPLY:

.. _class_@GlobalScope_constant_KEY_KP_DIVIDE:

.. _class_@GlobalScope_constant_KEY_KP_SUBTRACT:

.. _class_@GlobalScope_constant_KEY_KP_PERIOD:

.. _class_@GlobalScope_constant_KEY_KP_ADD:

.. _class_@GlobalScope_constant_KEY_KP_0:

.. _class_@GlobalScope_constant_KEY_KP_1:

.. _class_@GlobalScope_constant_KEY_KP_2:

.. _class_@GlobalScope_constant_KEY_KP_3:

.. _class_@GlobalScope_constant_KEY_KP_4:

.. _class_@GlobalScope_constant_KEY_KP_5:

.. _class_@GlobalScope_constant_KEY_KP_6:

.. _class_@GlobalScope_constant_KEY_KP_7:

.. _class_@GlobalScope_constant_KEY_KP_8:

.. _class_@GlobalScope_constant_KEY_KP_9:

.. _class_@GlobalScope_constant_KEY_SUPER_L:

.. _class_@GlobalScope_constant_KEY_SUPER_R:

.. _class_@GlobalScope_constant_KEY_MENU:

.. _class_@GlobalScope_constant_KEY_HYPER_L:

.. _class_@GlobalScope_constant_KEY_HYPER_R:

.. _class_@GlobalScope_constant_KEY_HELP:

.. _class_@GlobalScope_constant_KEY_DIRECTION_L:

.. _class_@GlobalScope_constant_KEY_DIRECTION_R:

.. _class_@GlobalScope_constant_KEY_BACK:

.. _class_@GlobalScope_constant_KEY_FORWARD:

.. _class_@GlobalScope_constant_KEY_STOP:

.. _class_@GlobalScope_constant_KEY_REFRESH:

.. _class_@GlobalScope_constant_KEY_VOLUMEDOWN:

.. _class_@GlobalScope_constant_KEY_VOLUMEMUTE:

.. _class_@GlobalScope_constant_KEY_VOLUMEUP:

.. _class_@GlobalScope_constant_KEY_BASSBOOST:

.. _class_@GlobalScope_constant_KEY_BASSUP:

.. _class_@GlobalScope_constant_KEY_BASSDOWN:

.. _class_@GlobalScope_constant_KEY_TREBLEUP:

.. _class_@GlobalScope_constant_KEY_TREBLEDOWN:

.. _class_@GlobalScope_constant_KEY_MEDIAPLAY:

.. _class_@GlobalScope_constant_KEY_MEDIASTOP:

.. _class_@GlobalScope_constant_KEY_MEDIAPREVIOUS:

.. _class_@GlobalScope_constant_KEY_MEDIANEXT:

.. _class_@GlobalScope_constant_KEY_MEDIARECORD:

.. _class_@GlobalScope_constant_KEY_HOMEPAGE:

.. _class_@GlobalScope_constant_KEY_FAVORITES:

.. _class_@GlobalScope_constant_KEY_SEARCH:

.. _class_@GlobalScope_constant_KEY_STANDBY:

.. _class_@GlobalScope_constant_KEY_OPENURL:

.. _class_@GlobalScope_constant_KEY_LAUNCHMAIL:

.. _class_@GlobalScope_constant_KEY_LAUNCHMEDIA:

.. _class_@GlobalScope_constant_KEY_LAUNCH0:

.. _class_@GlobalScope_constant_KEY_LAUNCH1:

.. _class_@GlobalScope_constant_KEY_LAUNCH2:

.. _class_@GlobalScope_constant_KEY_LAUNCH3:

.. _class_@GlobalScope_constant_KEY_LAUNCH4:

.. _class_@GlobalScope_constant_KEY_LAUNCH5:

.. _class_@GlobalScope_constant_KEY_LAUNCH6:

.. _class_@GlobalScope_constant_KEY_LAUNCH7:

.. _class_@GlobalScope_constant_KEY_LAUNCH8:

.. _class_@GlobalScope_constant_KEY_LAUNCH9:

.. _class_@GlobalScope_constant_KEY_LAUNCHA:

.. _class_@GlobalScope_constant_KEY_LAUNCHB:

.. _class_@GlobalScope_constant_KEY_LAUNCHC:

.. _class_@GlobalScope_constant_KEY_LAUNCHD:

.. _class_@GlobalScope_constant_KEY_LAUNCHE:

.. _class_@GlobalScope_constant_KEY_LAUNCHF:

.. _class_@GlobalScope_constant_KEY_UNKNOWN:

.. _class_@GlobalScope_constant_KEY_SPACE:

.. _class_@GlobalScope_constant_KEY_EXCLAM:

.. _class_@GlobalScope_constant_KEY_QUOTEDBL:

.. _class_@GlobalScope_constant_KEY_NUMBERSIGN:

.. _class_@GlobalScope_constant_KEY_DOLLAR:

.. _class_@GlobalScope_constant_KEY_PERCENT:

.. _class_@GlobalScope_constant_KEY_AMPERSAND:

.. _class_@GlobalScope_constant_KEY_APOSTROPHE:

.. _class_@GlobalScope_constant_KEY_PARENLEFT:

.. _class_@GlobalScope_constant_KEY_PARENRIGHT:

.. _class_@GlobalScope_constant_KEY_ASTERISK:

.. _class_@GlobalScope_constant_KEY_PLUS:

.. _class_@GlobalScope_constant_KEY_COMMA:

.. _class_@GlobalScope_constant_KEY_MINUS:

.. _class_@GlobalScope_constant_KEY_PERIOD:

.. _class_@GlobalScope_constant_KEY_SLASH:

.. _class_@GlobalScope_constant_KEY_0:

.. _class_@GlobalScope_constant_KEY_1:

.. _class_@GlobalScope_constant_KEY_2:

.. _class_@GlobalScope_constant_KEY_3:

.. _class_@GlobalScope_constant_KEY_4:

.. _class_@GlobalScope_constant_KEY_5:

.. _class_@GlobalScope_constant_KEY_6:

.. _class_@GlobalScope_constant_KEY_7:

.. _class_@GlobalScope_constant_KEY_8:

.. _class_@GlobalScope_constant_KEY_9:

.. _class_@GlobalScope_constant_KEY_COLON:

.. _class_@GlobalScope_constant_KEY_SEMICOLON:

.. _class_@GlobalScope_constant_KEY_LESS:

.. _class_@GlobalScope_constant_KEY_EQUAL:

.. _class_@GlobalScope_constant_KEY_GREATER:

.. _class_@GlobalScope_constant_KEY_QUESTION:

.. _class_@GlobalScope_constant_KEY_AT:

.. _class_@GlobalScope_constant_KEY_A:

.. _class_@GlobalScope_constant_KEY_B:

.. _class_@GlobalScope_constant_KEY_C:

.. _class_@GlobalScope_constant_KEY_D:

.. _class_@GlobalScope_constant_KEY_E:

.. _class_@GlobalScope_constant_KEY_F:

.. _class_@GlobalScope_constant_KEY_G:

.. _class_@GlobalScope_constant_KEY_H:

.. _class_@GlobalScope_constant_KEY_I:

.. _class_@GlobalScope_constant_KEY_J:

.. _class_@GlobalScope_constant_KEY_K:

.. _class_@GlobalScope_constant_KEY_L:

.. _class_@GlobalScope_constant_KEY_M:

.. _class_@GlobalScope_constant_KEY_N:

.. _class_@GlobalScope_constant_KEY_O:

.. _class_@GlobalScope_constant_KEY_P:

.. _class_@GlobalScope_constant_KEY_Q:

.. _class_@GlobalScope_constant_KEY_R:

.. _class_@GlobalScope_constant_KEY_S:

.. _class_@GlobalScope_constant_KEY_T:

.. _class_@GlobalScope_constant_KEY_U:

.. _class_@GlobalScope_constant_KEY_V:

.. _class_@GlobalScope_constant_KEY_W:

.. _class_@GlobalScope_constant_KEY_X:

.. _class_@GlobalScope_constant_KEY_Y:

.. _class_@GlobalScope_constant_KEY_Z:

.. _class_@GlobalScope_constant_KEY_BRACKETLEFT:

.. _class_@GlobalScope_constant_KEY_BACKSLASH:

.. _class_@GlobalScope_constant_KEY_BRACKETRIGHT:

.. _class_@GlobalScope_constant_KEY_ASCIICIRCUM:

.. _class_@GlobalScope_constant_KEY_UNDERSCORE:

.. _class_@GlobalScope_constant_KEY_QUOTELEFT:

.. _class_@GlobalScope_constant_KEY_BRACELEFT:

.. _class_@GlobalScope_constant_KEY_BAR:

.. _class_@GlobalScope_constant_KEY_BRACERIGHT:

.. _class_@GlobalScope_constant_KEY_ASCIITILDE:

.. _class_@GlobalScope_constant_KEY_NOBREAKSPACE:

.. _class_@GlobalScope_constant_KEY_EXCLAMDOWN:

.. _class_@GlobalScope_constant_KEY_CENT:

.. _class_@GlobalScope_constant_KEY_STERLING:

.. _class_@GlobalScope_constant_KEY_CURRENCY:

.. _class_@GlobalScope_constant_KEY_YEN:

.. _class_@GlobalScope_constant_KEY_BROKENBAR:

.. _class_@GlobalScope_constant_KEY_SECTION:

.. _class_@GlobalScope_constant_KEY_DIAERESIS:

.. _class_@GlobalScope_constant_KEY_COPYRIGHT:

.. _class_@GlobalScope_constant_KEY_ORDFEMININE:

.. _class_@GlobalScope_constant_KEY_GUILLEMOTLEFT:

.. _class_@GlobalScope_constant_KEY_NOTSIGN:

.. _class_@GlobalScope_constant_KEY_HYPHEN:

.. _class_@GlobalScope_constant_KEY_REGISTERED:

.. _class_@GlobalScope_constant_KEY_MACRON:

.. _class_@GlobalScope_constant_KEY_DEGREE:

.. _class_@GlobalScope_constant_KEY_PLUSMINUS:

.. _class_@GlobalScope_constant_KEY_TWOSUPERIOR:

.. _class_@GlobalScope_constant_KEY_THREESUPERIOR:

.. _class_@GlobalScope_constant_KEY_ACUTE:

.. _class_@GlobalScope_constant_KEY_MU:

.. _class_@GlobalScope_constant_KEY_PARAGRAPH:

.. _class_@GlobalScope_constant_KEY_PERIODCENTERED:

.. _class_@GlobalScope_constant_KEY_CEDILLA:

.. _class_@GlobalScope_constant_KEY_ONESUPERIOR:

.. _class_@GlobalScope_constant_KEY_MASCULINE:

.. _class_@GlobalScope_constant_KEY_GUILLEMOTRIGHT:

.. _class_@GlobalScope_constant_KEY_ONEQUARTER:

.. _class_@GlobalScope_constant_KEY_ONEHALF:

.. _class_@GlobalScope_constant_KEY_THREEQUARTERS:

.. _class_@GlobalScope_constant_KEY_QUESTIONDOWN:

.. _class_@GlobalScope_constant_KEY_AGRAVE:

.. _class_@GlobalScope_constant_KEY_AACUTE:

.. _class_@GlobalScope_constant_KEY_ACIRCUMFLEX:

.. _class_@GlobalScope_constant_KEY_ATILDE:

.. _class_@GlobalScope_constant_KEY_ADIAERESIS:

.. _class_@GlobalScope_constant_KEY_ARING:

.. _class_@GlobalScope_constant_KEY_AE:

.. _class_@GlobalScope_constant_KEY_CCEDILLA:

.. _class_@GlobalScope_constant_KEY_EGRAVE:

.. _class_@GlobalScope_constant_KEY_EACUTE:

.. _class_@GlobalScope_constant_KEY_ECIRCUMFLEX:

.. _class_@GlobalScope_constant_KEY_EDIAERESIS:

.. _class_@GlobalScope_constant_KEY_IGRAVE:

.. _class_@GlobalScope_constant_KEY_IACUTE:

.. _class_@GlobalScope_constant_KEY_ICIRCUMFLEX:

.. _class_@GlobalScope_constant_KEY_IDIAERESIS:

.. _class_@GlobalScope_constant_KEY_ETH:

.. _class_@GlobalScope_constant_KEY_NTILDE:

.. _class_@GlobalScope_constant_KEY_OGRAVE:

.. _class_@GlobalScope_constant_KEY_OACUTE:

.. _class_@GlobalScope_constant_KEY_OCIRCUMFLEX:

.. _class_@GlobalScope_constant_KEY_OTILDE:

.. _class_@GlobalScope_constant_KEY_ODIAERESIS:

.. _class_@GlobalScope_constant_KEY_MULTIPLY:

.. _class_@GlobalScope_constant_KEY_OOBLIQUE:

.. _class_@GlobalScope_constant_KEY_UGRAVE:

.. _class_@GlobalScope_constant_KEY_UACUTE:

.. _class_@GlobalScope_constant_KEY_UCIRCUMFLEX:

.. _class_@GlobalScope_constant_KEY_UDIAERESIS:

.. _class_@GlobalScope_constant_KEY_YACUTE:

.. _class_@GlobalScope_constant_KEY_THORN:

.. _class_@GlobalScope_constant_KEY_SSHARP:

.. _class_@GlobalScope_constant_KEY_DIVISION:

.. _class_@GlobalScope_constant_KEY_YDIAERESIS:

enum **Key**:

- **KEY_ESCAPE** = **16777217** --- Escape key.

- **KEY_TAB** = **16777218** --- Tab key.

- **KEY_BACKTAB** = **16777219** --- Shift + Tab key.

- **KEY_BACKSPACE** = **16777220** --- Backspace key.

- **KEY_ENTER** = **16777221** --- Return key (on the main keyboard).

- **KEY_KP_ENTER** = **16777222** --- Enter key on the numeric keypad.

- **KEY_INSERT** = **16777223** --- Insert key.

- **KEY_DELETE** = **16777224** --- Delete key.

- **KEY_PAUSE** = **16777225** --- Pause key.

- **KEY_PRINT** = **16777226** --- Print Screen key.

- **KEY_SYSREQ** = **16777227** --- System Request key.

- **KEY_CLEAR** = **16777228** --- Clear key.

- **KEY_HOME** = **16777229** --- Home key.

- **KEY_END** = **16777230** --- End key.

- **KEY_LEFT** = **16777231** --- Left arrow key.

- **KEY_UP** = **16777232** --- Up arrow key.

- **KEY_RIGHT** = **16777233** --- Right arrow key.

- **KEY_DOWN** = **16777234** --- Down arrow key.

- **KEY_PAGEUP** = **16777235** --- Page Up key.

- **KEY_PAGEDOWN** = **16777236** --- Page Down key.

- **KEY_SHIFT** = **16777237** --- Shift key.

- **KEY_CTRL** = **16777238** --- Control key.

- **KEY_META** = **16777239** --- Meta key.

- **KEY_ALT** = **16777240** --- Alt key.

- **KEY_CAPSLOCK** = **16777241** --- Caps Lock key.

- **KEY_NUMLOCK** = **16777242** --- Num Lock key.

- **KEY_SCROLLLOCK** = **16777243** --- Scroll Lock key.

- **KEY_F1** = **16777244** --- F1 key.

- **KEY_F2** = **16777245** --- F2 key.

- **KEY_F3** = **16777246** --- F3 key.

- **KEY_F4** = **16777247** --- F4 key.

- **KEY_F5** = **16777248** --- F5 key.

- **KEY_F6** = **16777249** --- F6 key.

- **KEY_F7** = **16777250** --- F7 key.

- **KEY_F8** = **16777251** --- F8 key.

- **KEY_F9** = **16777252** --- F9 key.

- **KEY_F10** = **16777253** --- F10 key.

- **KEY_F11** = **16777254** --- F11 key.

- **KEY_F12** = **16777255** --- F12 key.

- **KEY_F13** = **16777256** --- F13 key.

- **KEY_F14** = **16777257** --- F14 key.

- **KEY_F15** = **16777258** --- F15 key.

- **KEY_F16** = **16777259** --- F16 key.

- **KEY_KP_MULTIPLY** = **16777345** --- Multiply (\*) key on the numeric keypad.

- **KEY_KP_DIVIDE** = **16777346** --- Divide (/) key on the numeric keypad.

- **KEY_KP_SUBTRACT** = **16777347** --- Subtract (-) key on the numeric keypad.

- **KEY_KP_PERIOD** = **16777348** --- Period (.) key on the numeric keypad.

- **KEY_KP_ADD** = **16777349** --- Add (+) key on the numeric keypad.

- **KEY_KP_0** = **16777350** --- Number 0 on the numeric keypad.

- **KEY_KP_1** = **16777351** --- Number 1 on the numeric keypad.

- **KEY_KP_2** = **16777352** --- Number 2 on the numeric keypad.

- **KEY_KP_3** = **16777353** --- Number 3 on the numeric keypad.

- **KEY_KP_4** = **16777354** --- Number 4 on the numeric keypad.

- **KEY_KP_5** = **16777355** --- Number 5 on the numeric keypad.

- **KEY_KP_6** = **16777356** --- Number 6 on the numeric keypad.

- **KEY_KP_7** = **16777357** --- Number 7 on the numeric keypad.

- **KEY_KP_8** = **16777358** --- Number 8 on the numeric keypad.

- **KEY_KP_9** = **16777359** --- Number 9 on the numeric keypad.

- **KEY_SUPER_L** = **16777260** --- Left Super key (Windows key).

- **KEY_SUPER_R** = **16777261** --- Right Super key (Windows key).

- **KEY_MENU** = **16777262** --- Context menu key.

- **KEY_HYPER_L** = **16777263** --- Left Hyper key.

- **KEY_HYPER_R** = **16777264** --- Right Hyper key.

- **KEY_HELP** = **16777265** --- Help key.

- **KEY_DIRECTION_L** = **16777266** --- Left Direction key.

- **KEY_DIRECTION_R** = **16777267** --- Right Direction key.

- **KEY_BACK** = **16777280** --- Media back key. Not to be confused with the Back button on an Android device.

- **KEY_FORWARD** = **16777281** --- Media forward key.

- **KEY_STOP** = **16777282** --- Media stop key.

- **KEY_REFRESH** = **16777283** --- Media refresh key.

- **KEY_VOLUMEDOWN** = **16777284** --- Volume down key.

- **KEY_VOLUMEMUTE** = **16777285** --- Mute volume key.

- **KEY_VOLUMEUP** = **16777286** --- Volume up key.

- **KEY_BASSBOOST** = **16777287** --- Bass Boost key.

- **KEY_BASSUP** = **16777288** --- Bass up key.

- **KEY_BASSDOWN** = **16777289** --- Bass down key.

- **KEY_TREBLEUP** = **16777290** --- Treble up key.

- **KEY_TREBLEDOWN** = **16777291** --- Treble down key.

- **KEY_MEDIAPLAY** = **16777292** --- Media play key.

- **KEY_MEDIASTOP** = **16777293** --- Media stop key.

- **KEY_MEDIAPREVIOUS** = **16777294** --- Previous song key.

- **KEY_MEDIANEXT** = **16777295** --- Next song key.

- **KEY_MEDIARECORD** = **16777296** --- Media record key.

- **KEY_HOMEPAGE** = **16777297** --- Home page key.

- **KEY_FAVORITES** = **16777298** --- Favorites key.

- **KEY_SEARCH** = **16777299** --- Search key.

- **KEY_STANDBY** = **16777300** --- Standby key.

- **KEY_OPENURL** = **16777301** --- Open URL / Launch Browser key.

- **KEY_LAUNCHMAIL** = **16777302** --- Launch Mail key.

- **KEY_LAUNCHMEDIA** = **16777303** --- Launch Media key.

- **KEY_LAUNCH0** = **16777304** --- Launch Shortcut 0 key.

- **KEY_LAUNCH1** = **16777305** --- Launch Shortcut 1 key.

- **KEY_LAUNCH2** = **16777306** --- Launch Shortcut 2 key.

- **KEY_LAUNCH3** = **16777307** --- Launch Shortcut 3 key.

- **KEY_LAUNCH4** = **16777308** --- Launch Shortcut 4 key.

- **KEY_LAUNCH5** = **16777309** --- Launch Shortcut 5 key.

- **KEY_LAUNCH6** = **16777310** --- Launch Shortcut 6 key.

- **KEY_LAUNCH7** = **16777311** --- Launch Shortcut 7 key.

- **KEY_LAUNCH8** = **16777312** --- Launch Shortcut 8 key.

- **KEY_LAUNCH9** = **16777313** --- Launch Shortcut 9 key.

- **KEY_LAUNCHA** = **16777314** --- Launch Shortcut A key.

- **KEY_LAUNCHB** = **16777315** --- Launch Shortcut B key.

- **KEY_LAUNCHC** = **16777316** --- Launch Shortcut C key.

- **KEY_LAUNCHD** = **16777317** --- Launch Shortcut D key.

- **KEY_LAUNCHE** = **16777318** --- Launch Shortcut E key.

- **KEY_LAUNCHF** = **16777319** --- Launch Shortcut F key.

- **KEY_UNKNOWN** = **33554431** --- Unknown key.

- **KEY_SPACE** = **32** --- Space key.

- **KEY_EXCLAM** = **33** --- ! key.

- **KEY_QUOTEDBL** = **34** --- " key.

- **KEY_NUMBERSIGN** = **35** --- # key.

- **KEY_DOLLAR** = **36** --- $ key.

- **KEY_PERCENT** = **37** --- % key.

- **KEY_AMPERSAND** = **38** --- & key.

- **KEY_APOSTROPHE** = **39** --- ' key.

- **KEY_PARENLEFT** = **40** --- ( key.

- **KEY_PARENRIGHT** = **41** --- ) key.

- **KEY_ASTERISK** = **42** --- \* key.

- **KEY_PLUS** = **43** --- + key.

- **KEY_COMMA** = **44** --- , key.

- **KEY_MINUS** = **45** --- - key.

- **KEY_PERIOD** = **46** --- . key.

- **KEY_SLASH** = **47** --- / key.

- **KEY_0** = **48** --- Number 0.

- **KEY_1** = **49** --- Number 1.

- **KEY_2** = **50** --- Number 2.

- **KEY_3** = **51** --- Number 3.

- **KEY_4** = **52** --- Number 4.

- **KEY_5** = **53** --- Number 5.

- **KEY_6** = **54** --- Number 6.

- **KEY_7** = **55** --- Number 7.

- **KEY_8** = **56** --- Number 8.

- **KEY_9** = **57** --- Number 9.

- **KEY_COLON** = **58** --- : key.

- **KEY_SEMICOLON** = **59** --- ; key.

- **KEY_LESS** = **60** --- < key.

- **KEY_EQUAL** = **61** --- = key.

- **KEY_GREATER** = **62** --- > key.

- **KEY_QUESTION** = **63** --- ? key.

- **KEY_AT** = **64** --- @ key.

- **KEY_A** = **65** --- A key.

- **KEY_B** = **66** --- B key.

- **KEY_C** = **67** --- C key.

- **KEY_D** = **68** --- D key.

- **KEY_E** = **69** --- E key.

- **KEY_F** = **70** --- F key.

- **KEY_G** = **71** --- G key.

- **KEY_H** = **72** --- H key.

- **KEY_I** = **73** --- I key.

- **KEY_J** = **74** --- J key.

- **KEY_K** = **75** --- K key.

- **KEY_L** = **76** --- L key.

- **KEY_M** = **77** --- M key.

- **KEY_N** = **78** --- N key.

- **KEY_O** = **79** --- O key.

- **KEY_P** = **80** --- P key.

- **KEY_Q** = **81** --- Q key.

- **KEY_R** = **82** --- R key.

- **KEY_S** = **83** --- S key.

- **KEY_T** = **84** --- T key.

- **KEY_U** = **85** --- U key.

- **KEY_V** = **86** --- V key.

- **KEY_W** = **87** --- W key.

- **KEY_X** = **88** --- X key.

- **KEY_Y** = **89** --- Y key.

- **KEY_Z** = **90** --- Z key.

- **KEY_BRACKETLEFT** = **91** --- [ key.

- **KEY_BACKSLASH** = **92** --- \\ key.

- **KEY_BRACKETRIGHT** = **93** --- ] key.

- **KEY_ASCIICIRCUM** = **94** --- ^ key.

- **KEY_UNDERSCORE** = **95** --- \_ key.

- **KEY_QUOTELEFT** = **96** --- ` key.

- **KEY_BRACELEFT** = **123** --- { key.

- **KEY_BAR** = **124** --- | key.

- **KEY_BRACERIGHT** = **125** --- } key.

- **KEY_ASCIITILDE** = **126** --- ~ key.

- **KEY_NOBREAKSPACE** = **160** --- Non-breakable space key.

- **KEY_EXCLAMDOWN** = **161** --- ¡ key.

- **KEY_CENT** = **162** --- ¢ key.

- **KEY_STERLING** = **163** --- £ key.

- **KEY_CURRENCY** = **164** --- ¤ key.

- **KEY_YEN** = **165** --- ¥ key.

- **KEY_BROKENBAR** = **166** --- ¦ key.

- **KEY_SECTION** = **167** --- § key.

- **KEY_DIAERESIS** = **168** --- ¨ key.

- **KEY_COPYRIGHT** = **169** --- © key.

- **KEY_ORDFEMININE** = **170** --- ª key.

- **KEY_GUILLEMOTLEFT** = **171** --- « key.

- **KEY_NOTSIGN** = **172** --- ¬ key.

- **KEY_HYPHEN** = **173** --- Soft hyphen key.

- **KEY_REGISTERED** = **174** --- ® key.

- **KEY_MACRON** = **175** --- ¯ key.

- **KEY_DEGREE** = **176** --- ° key.

- **KEY_PLUSMINUS** = **177** --- ± key.

- **KEY_TWOSUPERIOR** = **178** --- ² key.

- **KEY_THREESUPERIOR** = **179** --- ³ key.

- **KEY_ACUTE** = **180** --- ´ key.

- **KEY_MU** = **181** --- µ key.

- **KEY_PARAGRAPH** = **182** --- ¶ key.

- **KEY_PERIODCENTERED** = **183** --- · key.

- **KEY_CEDILLA** = **184** --- ¸ key.

- **KEY_ONESUPERIOR** = **185** --- ¹ key.

- **KEY_MASCULINE** = **186** --- º key.

- **KEY_GUILLEMOTRIGHT** = **187** --- » key.

- **KEY_ONEQUARTER** = **188** --- ¼ key.

- **KEY_ONEHALF** = **189** --- ½ key.

- **KEY_THREEQUARTERS** = **190** --- ¾ key.

- **KEY_QUESTIONDOWN** = **191** --- ¿ key.

- **KEY_AGRAVE** = **192** --- À key.

- **KEY_AACUTE** = **193** --- Á key.

- **KEY_ACIRCUMFLEX** = **194** --- Â key.

- **KEY_ATILDE** = **195** --- Ã key.

- **KEY_ADIAERESIS** = **196** --- Ä key.

- **KEY_ARING** = **197** --- Å key.

- **KEY_AE** = **198** --- Æ key.

- **KEY_CCEDILLA** = **199** --- Ç key.

- **KEY_EGRAVE** = **200** --- È key.

- **KEY_EACUTE** = **201** --- É key.

- **KEY_ECIRCUMFLEX** = **202** --- Ê key.

- **KEY_EDIAERESIS** = **203** --- Ë key.

- **KEY_IGRAVE** = **204** --- Ì key.

- **KEY_IACUTE** = **205** --- Í key.

- **KEY_ICIRCUMFLEX** = **206** --- Î key.

- **KEY_IDIAERESIS** = **207** --- Ï key.

- **KEY_ETH** = **208** --- Ð key.

- **KEY_NTILDE** = **209** --- Ñ key.

- **KEY_OGRAVE** = **210** --- Ò key.

- **KEY_OACUTE** = **211** --- Ó key.

- **KEY_OCIRCUMFLEX** = **212** --- Ô key.

- **KEY_OTILDE** = **213** --- Õ key.

- **KEY_ODIAERESIS** = **214** --- Ö key.

- **KEY_MULTIPLY** = **215** --- × key.

- **KEY_OOBLIQUE** = **216** --- Ø key.

- **KEY_UGRAVE** = **217** --- Ù key.

- **KEY_UACUTE** = **218** --- Ú key.

- **KEY_UCIRCUMFLEX** = **219** --- Û key.

- **KEY_UDIAERESIS** = **220** --- Ü key.

- **KEY_YACUTE** = **221** --- Ý key.

- **KEY_THORN** = **222** --- Þ key.

- **KEY_SSHARP** = **223** --- ß key.

- **KEY_DIVISION** = **247** --- ÷ key.

- **KEY_YDIAERESIS** = **255** --- ÿ key.

----

.. _enum_@GlobalScope_KeyModifierMask:

.. _class_@GlobalScope_constant_KEY_CODE_MASK:

.. _class_@GlobalScope_constant_KEY_MODIFIER_MASK:

.. _class_@GlobalScope_constant_KEY_MASK_SHIFT:

.. _class_@GlobalScope_constant_KEY_MASK_ALT:

.. _class_@GlobalScope_constant_KEY_MASK_META:

.. _class_@GlobalScope_constant_KEY_MASK_CTRL:

.. _class_@GlobalScope_constant_KEY_MASK_CMD:

.. _class_@GlobalScope_constant_KEY_MASK_KPAD:

.. _class_@GlobalScope_constant_KEY_MASK_GROUP_SWITCH:

enum **KeyModifierMask**:

- **KEY_CODE_MASK** = **33554431** --- Key Code mask.

- **KEY_MODIFIER_MASK** = **-16777216** --- Modifier key mask.

- **KEY_MASK_SHIFT** = **33554432** --- Shift key mask.

- **KEY_MASK_ALT** = **67108864** --- Alt key mask.

- **KEY_MASK_META** = **134217728** --- Meta key mask.

- **KEY_MASK_CTRL** = **268435456** --- Ctrl key mask.

- **KEY_MASK_CMD** = **platform-dependent** --- Command key mask. On macOS, this is equivalent to :ref:`KEY_MASK_META<class_@GlobalScope_constant_KEY_MASK_META>`. On other platforms, this is equivalent to :ref:`KEY_MASK_CTRL<class_@GlobalScope_constant_KEY_MASK_CTRL>`. This mask should be preferred to :ref:`KEY_MASK_META<class_@GlobalScope_constant_KEY_MASK_META>` or :ref:`KEY_MASK_CTRL<class_@GlobalScope_constant_KEY_MASK_CTRL>` for system shortcuts as it handles all platforms correctly.

- **KEY_MASK_KPAD** = **536870912** --- Keypad key mask.

- **KEY_MASK_GROUP_SWITCH** = **1073741824** --- Group Switch key mask.

----

.. _enum_@GlobalScope_MouseButton:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_LEFT:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_RIGHT:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_MIDDLE:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_XBUTTON1:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_XBUTTON2:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_WHEEL_UP:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_WHEEL_DOWN:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_WHEEL_LEFT:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_WHEEL_RIGHT:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_MASK_LEFT:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_MASK_RIGHT:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_MASK_MIDDLE:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_MASK_XBUTTON1:

.. _class_@GlobalScope_constant_MOUSE_BUTTON_MASK_XBUTTON2:

enum **MouseButton**:

- **MOUSE_BUTTON_LEFT** = **1** --- Left mouse button.

- **MOUSE_BUTTON_RIGHT** = **2** --- Right mouse button.

- **MOUSE_BUTTON_MIDDLE** = **3** --- Middle mouse button.

- **MOUSE_BUTTON_XBUTTON1** = **8** --- Extra mouse button 1 (only present on some mice).

- **MOUSE_BUTTON_XBUTTON2** = **9** --- Extra mouse button 2 (only present on some mice).

- **MOUSE_BUTTON_WHEEL_UP** = **4** --- Mouse wheel up.

- **MOUSE_BUTTON_WHEEL_DOWN** = **5** --- Mouse wheel down.

- **MOUSE_BUTTON_WHEEL_LEFT** = **6** --- Mouse wheel left button (only present on some mice).

- **MOUSE_BUTTON_WHEEL_RIGHT** = **7** --- Mouse wheel right button (only present on some mice).

- **MOUSE_BUTTON_MASK_LEFT** = **1** --- Left mouse button mask.

- **MOUSE_BUTTON_MASK_RIGHT** = **2** --- Right mouse button mask.

- **MOUSE_BUTTON_MASK_MIDDLE** = **4** --- Middle mouse button mask.

- **MOUSE_BUTTON_MASK_XBUTTON1** = **128** --- Extra mouse button 1 mask.

- **MOUSE_BUTTON_MASK_XBUTTON2** = **256** --- Extra mouse button 2 mask.

----

.. _enum_@GlobalScope_JoyButton:

.. _class_@GlobalScope_constant_JOY_BUTTON_INVALID:

.. _class_@GlobalScope_constant_JOY_BUTTON_A:

.. _class_@GlobalScope_constant_JOY_BUTTON_B:

.. _class_@GlobalScope_constant_JOY_BUTTON_X:

.. _class_@GlobalScope_constant_JOY_BUTTON_Y:

.. _class_@GlobalScope_constant_JOY_BUTTON_BACK:

.. _class_@GlobalScope_constant_JOY_BUTTON_GUIDE:

.. _class_@GlobalScope_constant_JOY_BUTTON_START:

.. _class_@GlobalScope_constant_JOY_BUTTON_LEFT_STICK:

.. _class_@GlobalScope_constant_JOY_BUTTON_RIGHT_STICK:

.. _class_@GlobalScope_constant_JOY_BUTTON_LEFT_SHOULDER:

.. _class_@GlobalScope_constant_JOY_BUTTON_RIGHT_SHOULDER:

.. _class_@GlobalScope_constant_JOY_BUTTON_DPAD_UP:

.. _class_@GlobalScope_constant_JOY_BUTTON_DPAD_DOWN:

.. _class_@GlobalScope_constant_JOY_BUTTON_DPAD_LEFT:

.. _class_@GlobalScope_constant_JOY_BUTTON_DPAD_RIGHT:

.. _class_@GlobalScope_constant_JOY_BUTTON_MISC1:

.. _class_@GlobalScope_constant_JOY_BUTTON_PADDLE1:

.. _class_@GlobalScope_constant_JOY_BUTTON_PADDLE2:

.. _class_@GlobalScope_constant_JOY_BUTTON_PADDLE3:

.. _class_@GlobalScope_constant_JOY_BUTTON_PADDLE4:

.. _class_@GlobalScope_constant_JOY_BUTTON_TOUCHPAD:

.. _class_@GlobalScope_constant_JOY_BUTTON_SDL_MAX:

.. _class_@GlobalScope_constant_JOY_BUTTON_MAX:

enum **JoyButton**:

- **JOY_BUTTON_INVALID** = **-1** --- An invalid game controller button.

- **JOY_BUTTON_A** = **0** --- Game controller SDL button A. Corresponds to the bottom action button: Sony Cross, Xbox A, Nintendo B.

- **JOY_BUTTON_B** = **1** --- Game controller SDL button B. Corresponds to the right action button: Sony Circle, Xbox B, Nintendo A.

- **JOY_BUTTON_X** = **2** --- Game controller SDL button X. Corresponds to the left action button: Sony Square, Xbox X, Nintendo Y.

- **JOY_BUTTON_Y** = **3** --- Game controller SDL button Y. Corresponds to the top action button: Sony Triangle, Xbox Y, Nintendo X.

- **JOY_BUTTON_BACK** = **4** --- Game controller SDL back button. Corresponds to the Sony Select, Xbox Back, Nintendo - button.

- **JOY_BUTTON_GUIDE** = **5** --- Game controller SDL guide button. Corresponds to the Sony PS, Xbox Home button.

- **JOY_BUTTON_START** = **6** --- Game controller SDL start button. Corresponds to the Nintendo + button.

- **JOY_BUTTON_LEFT_STICK** = **7** --- Game controller SDL left stick button. Corresponds to the Sony L3, Xbox L/LS button.

- **JOY_BUTTON_RIGHT_STICK** = **8** --- Game controller SDL right stick button. Corresponds to the Sony R3, Xbox R/RS button.

- **JOY_BUTTON_LEFT_SHOULDER** = **9** --- Game controller SDL left shoulder button. Corresponds to the Sony L1, Xbox LB button.

- **JOY_BUTTON_RIGHT_SHOULDER** = **10** --- Game controller SDL right shoulder button. Corresponds to the Sony R1, Xbox RB button.

- **JOY_BUTTON_DPAD_UP** = **11** --- Game controller D-pad up button.

- **JOY_BUTTON_DPAD_DOWN** = **12** --- Game controller D-pad down button.

- **JOY_BUTTON_DPAD_LEFT** = **13** --- Game controller D-pad left button.

- **JOY_BUTTON_DPAD_RIGHT** = **14** --- Game controller D-pad right button.

- **JOY_BUTTON_MISC1** = **15** --- Game controller SDL miscellaneous button. Corresponds to Xbox share button, PS5 microphone button, Nintendo capture button.

- **JOY_BUTTON_PADDLE1** = **16** --- Game controller SDL paddle 1 button.

- **JOY_BUTTON_PADDLE2** = **17** --- Game controller SDL paddle 2 button.

- **JOY_BUTTON_PADDLE3** = **18** --- Game controller SDL paddle 3 button.

- **JOY_BUTTON_PADDLE4** = **19** --- Game controller SDL paddle 4 button.

- **JOY_BUTTON_TOUCHPAD** = **20** --- Game controller SDL touchpad button.

- **JOY_BUTTON_SDL_MAX** = **21** --- The number of SDL game controller buttons.

- **JOY_BUTTON_MAX** = **36** --- The maximum number of game controller buttons: Android supports up to 36 buttons.

----

.. _enum_@GlobalScope_JoyAxis:

.. _class_@GlobalScope_constant_JOY_AXIS_INVALID:

.. _class_@GlobalScope_constant_JOY_AXIS_LEFT_X:

.. _class_@GlobalScope_constant_JOY_AXIS_LEFT_Y:

.. _class_@GlobalScope_constant_JOY_AXIS_RIGHT_X:

.. _class_@GlobalScope_constant_JOY_AXIS_RIGHT_Y:

.. _class_@GlobalScope_constant_JOY_AXIS_TRIGGER_LEFT:

.. _class_@GlobalScope_constant_JOY_AXIS_TRIGGER_RIGHT:

.. _class_@GlobalScope_constant_JOY_AXIS_SDL_MAX:

.. _class_@GlobalScope_constant_JOY_AXIS_MAX:

enum **JoyAxis**:

- **JOY_AXIS_INVALID** = **-1** --- An invalid game controller axis.

- **JOY_AXIS_LEFT_X** = **0** --- Game controller left joystick x-axis.

- **JOY_AXIS_LEFT_Y** = **1** --- Game controller left joystick y-axis.

- **JOY_AXIS_RIGHT_X** = **2** --- Game controller right joystick x-axis.

- **JOY_AXIS_RIGHT_Y** = **3** --- Game controller right joystick y-axis.

- **JOY_AXIS_TRIGGER_LEFT** = **4** --- Game controller left trigger axis.

- **JOY_AXIS_TRIGGER_RIGHT** = **5** --- Game controller right trigger axis.

- **JOY_AXIS_SDL_MAX** = **6** --- The number of SDL game controller axes.

- **JOY_AXIS_MAX** = **10** --- The maximum number of game controller axes: OpenVR supports up to 5 Joysticks making a total of 10 axes.

----

.. _enum_@GlobalScope_MIDIMessage:

.. _class_@GlobalScope_constant_MIDI_MESSAGE_NOTE_OFF:

.. _class_@GlobalScope_constant_MIDI_MESSAGE_NOTE_ON:

.. _class_@GlobalScope_constant_MIDI_MESSAGE_AFTERTOUCH:

.. _class_@GlobalScope_constant_MIDI_MESSAGE_CONTROL_CHANGE:

.. _class_@GlobalScope_constant_MIDI_MESSAGE_PROGRAM_CHANGE:

.. _class_@GlobalScope_constant_MIDI_MESSAGE_CHANNEL_PRESSURE:

.. _class_@GlobalScope_constant_MIDI_MESSAGE_PITCH_BEND:

enum **MIDIMessage**:

- **MIDI_MESSAGE_NOTE_OFF** = **8** --- MIDI note OFF message.

- **MIDI_MESSAGE_NOTE_ON** = **9** --- MIDI note ON message.

- **MIDI_MESSAGE_AFTERTOUCH** = **10** --- MIDI aftertouch message.

- **MIDI_MESSAGE_CONTROL_CHANGE** = **11** --- MIDI control change message.

- **MIDI_MESSAGE_PROGRAM_CHANGE** = **12** --- MIDI program change message.

- **MIDI_MESSAGE_CHANNEL_PRESSURE** = **13** --- MIDI channel pressure message.

- **MIDI_MESSAGE_PITCH_BEND** = **14** --- MIDI pitch bend message.

----

.. _enum_@GlobalScope_Error:

.. _class_@GlobalScope_constant_OK:

.. _class_@GlobalScope_constant_FAILED:

.. _class_@GlobalScope_constant_ERR_UNAVAILABLE:

.. _class_@GlobalScope_constant_ERR_UNCONFIGURED:

.. _class_@GlobalScope_constant_ERR_UNAUTHORIZED:

.. _class_@GlobalScope_constant_ERR_PARAMETER_RANGE_ERROR:

.. _class_@GlobalScope_constant_ERR_OUT_OF_MEMORY:

.. _class_@GlobalScope_constant_ERR_FILE_NOT_FOUND:

.. _class_@GlobalScope_constant_ERR_FILE_BAD_DRIVE:

.. _class_@GlobalScope_constant_ERR_FILE_BAD_PATH:

.. _class_@GlobalScope_constant_ERR_FILE_NO_PERMISSION:

.. _class_@GlobalScope_constant_ERR_FILE_ALREADY_IN_USE:

.. _class_@GlobalScope_constant_ERR_FILE_CANT_OPEN:

.. _class_@GlobalScope_constant_ERR_FILE_CANT_WRITE:

.. _class_@GlobalScope_constant_ERR_FILE_CANT_READ:

.. _class_@GlobalScope_constant_ERR_FILE_UNRECOGNIZED:

.. _class_@GlobalScope_constant_ERR_FILE_CORRUPT:

.. _class_@GlobalScope_constant_ERR_FILE_MISSING_DEPENDENCIES:

.. _class_@GlobalScope_constant_ERR_FILE_EOF:

.. _class_@GlobalScope_constant_ERR_CANT_OPEN:

.. _class_@GlobalScope_constant_ERR_CANT_CREATE:

.. _class_@GlobalScope_constant_ERR_QUERY_FAILED:

.. _class_@GlobalScope_constant_ERR_ALREADY_IN_USE:

.. _class_@GlobalScope_constant_ERR_LOCKED:

.. _class_@GlobalScope_constant_ERR_TIMEOUT:

.. _class_@GlobalScope_constant_ERR_CANT_CONNECT:

.. _class_@GlobalScope_constant_ERR_CANT_RESOLVE:

.. _class_@GlobalScope_constant_ERR_CONNECTION_ERROR:

.. _class_@GlobalScope_constant_ERR_CANT_ACQUIRE_RESOURCE:

.. _class_@GlobalScope_constant_ERR_CANT_FORK:

.. _class_@GlobalScope_constant_ERR_INVALID_DATA:

.. _class_@GlobalScope_constant_ERR_INVALID_PARAMETER:

.. _class_@GlobalScope_constant_ERR_ALREADY_EXISTS:

.. _class_@GlobalScope_constant_ERR_DOES_NOT_EXIST:

.. _class_@GlobalScope_constant_ERR_DATABASE_CANT_READ:

.. _class_@GlobalScope_constant_ERR_DATABASE_CANT_WRITE:

.. _class_@GlobalScope_constant_ERR_COMPILATION_FAILED:

.. _class_@GlobalScope_constant_ERR_METHOD_NOT_FOUND:

.. _class_@GlobalScope_constant_ERR_LINK_FAILED:

.. _class_@GlobalScope_constant_ERR_SCRIPT_FAILED:

.. _class_@GlobalScope_constant_ERR_CYCLIC_LINK:

.. _class_@GlobalScope_constant_ERR_INVALID_DECLARATION:

.. _class_@GlobalScope_constant_ERR_DUPLICATE_SYMBOL:

.. _class_@GlobalScope_constant_ERR_PARSE_ERROR:

.. _class_@GlobalScope_constant_ERR_BUSY:

.. _class_@GlobalScope_constant_ERR_SKIP:

.. _class_@GlobalScope_constant_ERR_HELP:

.. _class_@GlobalScope_constant_ERR_BUG:

.. _class_@GlobalScope_constant_ERR_PRINTER_ON_FIRE:

enum **Error**:

- **OK** = **0** --- Methods that return :ref:`Error<enum_@GlobalScope_Error>` return :ref:`OK<class_@GlobalScope_constant_OK>` when no error occurred. Note that many functions don't return an error code but will print error messages to standard output.

Since :ref:`OK<class_@GlobalScope_constant_OK>` has value 0, and all other failure codes are positive integers, it can also be used in boolean checks, e.g.:

::

    var err = method_that_returns_error()
    if err != OK:
        print("Failure!")
    # Or, equivalent:
    if err:
        print("Still failing!")

- **FAILED** = **1** --- Generic error.

- **ERR_UNAVAILABLE** = **2** --- Unavailable error.

- **ERR_UNCONFIGURED** = **3** --- Unconfigured error.

- **ERR_UNAUTHORIZED** = **4** --- Unauthorized error.

- **ERR_PARAMETER_RANGE_ERROR** = **5** --- Parameter range error.

- **ERR_OUT_OF_MEMORY** = **6** --- Out of memory (OOM) error.

- **ERR_FILE_NOT_FOUND** = **7** --- File: Not found error.

- **ERR_FILE_BAD_DRIVE** = **8** --- File: Bad drive error.

- **ERR_FILE_BAD_PATH** = **9** --- File: Bad path error.

- **ERR_FILE_NO_PERMISSION** = **10** --- File: No permission error.

- **ERR_FILE_ALREADY_IN_USE** = **11** --- File: Already in use error.

- **ERR_FILE_CANT_OPEN** = **12** --- File: Can't open error.

- **ERR_FILE_CANT_WRITE** = **13** --- File: Can't write error.

- **ERR_FILE_CANT_READ** = **14** --- File: Can't read error.

- **ERR_FILE_UNRECOGNIZED** = **15** --- File: Unrecognized error.

- **ERR_FILE_CORRUPT** = **16** --- File: Corrupt error.

- **ERR_FILE_MISSING_DEPENDENCIES** = **17** --- File: Missing dependencies error.

- **ERR_FILE_EOF** = **18** --- File: End of file (EOF) error.

- **ERR_CANT_OPEN** = **19** --- Can't open error.

- **ERR_CANT_CREATE** = **20** --- Can't create error.

- **ERR_QUERY_FAILED** = **21** --- Query failed error.

- **ERR_ALREADY_IN_USE** = **22** --- Already in use error.

- **ERR_LOCKED** = **23** --- Locked error.

- **ERR_TIMEOUT** = **24** --- Timeout error.

- **ERR_CANT_CONNECT** = **25** --- Can't connect error.

- **ERR_CANT_RESOLVE** = **26** --- Can't resolve error.

- **ERR_CONNECTION_ERROR** = **27** --- Connection error.

- **ERR_CANT_ACQUIRE_RESOURCE** = **28** --- Can't acquire resource error.

- **ERR_CANT_FORK** = **29** --- Can't fork process error.

- **ERR_INVALID_DATA** = **30** --- Invalid data error.

- **ERR_INVALID_PARAMETER** = **31** --- Invalid parameter error.

- **ERR_ALREADY_EXISTS** = **32** --- Already exists error.

- **ERR_DOES_NOT_EXIST** = **33** --- Does not exist error.

- **ERR_DATABASE_CANT_READ** = **34** --- Database: Read error.

- **ERR_DATABASE_CANT_WRITE** = **35** --- Database: Write error.

- **ERR_COMPILATION_FAILED** = **36** --- Compilation failed error.

- **ERR_METHOD_NOT_FOUND** = **37** --- Method not found error.

- **ERR_LINK_FAILED** = **38** --- Linking failed error.

- **ERR_SCRIPT_FAILED** = **39** --- Script failed error.

- **ERR_CYCLIC_LINK** = **40** --- Cycling link (import cycle) error.

- **ERR_INVALID_DECLARATION** = **41** --- Invalid declaration error.

- **ERR_DUPLICATE_SYMBOL** = **42** --- Duplicate symbol error.

- **ERR_PARSE_ERROR** = **43** --- Parse error.

- **ERR_BUSY** = **44** --- Busy error.

- **ERR_SKIP** = **45** --- Skip error.

- **ERR_HELP** = **46** --- Help error.

- **ERR_BUG** = **47** --- Bug error.

- **ERR_PRINTER_ON_FIRE** = **48** --- Printer on fire error. (This is an easter egg, no engine methods return this error code.)

----

.. _enum_@GlobalScope_PropertyHint:

.. _class_@GlobalScope_constant_PROPERTY_HINT_NONE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_RANGE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_ENUM:

.. _class_@GlobalScope_constant_PROPERTY_HINT_ENUM_SUGGESTION:

.. _class_@GlobalScope_constant_PROPERTY_HINT_EXP_EASING:

.. _class_@GlobalScope_constant_PROPERTY_HINT_LENGTH:

.. _class_@GlobalScope_constant_PROPERTY_HINT_KEY_ACCEL:

.. _class_@GlobalScope_constant_PROPERTY_HINT_FLAGS:

.. _class_@GlobalScope_constant_PROPERTY_HINT_LAYERS_2D_RENDER:

.. _class_@GlobalScope_constant_PROPERTY_HINT_LAYERS_2D_PHYSICS:

.. _class_@GlobalScope_constant_PROPERTY_HINT_LAYERS_2D_NAVIGATION:

.. _class_@GlobalScope_constant_PROPERTY_HINT_LAYERS_3D_RENDER:

.. _class_@GlobalScope_constant_PROPERTY_HINT_LAYERS_3D_PHYSICS:

.. _class_@GlobalScope_constant_PROPERTY_HINT_LAYERS_3D_NAVIGATION:

.. _class_@GlobalScope_constant_PROPERTY_HINT_FILE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_DIR:

.. _class_@GlobalScope_constant_PROPERTY_HINT_GLOBAL_FILE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_GLOBAL_DIR:

.. _class_@GlobalScope_constant_PROPERTY_HINT_RESOURCE_TYPE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_MULTILINE_TEXT:

.. _class_@GlobalScope_constant_PROPERTY_HINT_PLACEHOLDER_TEXT:

.. _class_@GlobalScope_constant_PROPERTY_HINT_COLOR_NO_ALPHA:

.. _class_@GlobalScope_constant_PROPERTY_HINT_IMAGE_COMPRESS_LOSSY:

.. _class_@GlobalScope_constant_PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS:

.. _class_@GlobalScope_constant_PROPERTY_HINT_OBJECT_ID:

.. _class_@GlobalScope_constant_PROPERTY_HINT_TYPE_STRING:

.. _class_@GlobalScope_constant_PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_METHOD_OF_VARIANT_TYPE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_METHOD_OF_BASE_TYPE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_METHOD_OF_INSTANCE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_METHOD_OF_SCRIPT:

.. _class_@GlobalScope_constant_PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_PROPERTY_OF_BASE_TYPE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_PROPERTY_OF_INSTANCE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_PROPERTY_OF_SCRIPT:

.. _class_@GlobalScope_constant_PROPERTY_HINT_OBJECT_TOO_BIG:

.. _class_@GlobalScope_constant_PROPERTY_HINT_NODE_PATH_VALID_TYPES:

.. _class_@GlobalScope_constant_PROPERTY_HINT_SAVE_FILE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_INT_IS_OBJECTID:

.. _class_@GlobalScope_constant_PROPERTY_HINT_INT_IS_POINTER:

.. _class_@GlobalScope_constant_PROPERTY_HINT_ARRAY_TYPE:

.. _class_@GlobalScope_constant_PROPERTY_HINT_MAX:

enum **PropertyHint**:

- **PROPERTY_HINT_NONE** = **0** --- No hint for the edited property.

- **PROPERTY_HINT_RANGE** = **1** --- Hints that an integer or float property should be within a range specified via the hint string ``"min,max"`` or ``"min,max,step"``. The hint string can optionally include ``"or_greater"`` and/or ``"or_lesser"`` to allow manual input going respectively above the max or below the min values. Example: ``"-360,360,1,or_greater,or_lesser"``.

Additionally, other keywords can be included: "exp" for exponential range editing, "radians" for editing radian angles in degrees, "degrees" to hint at an angle and "noslider" to hide the slider.

- **PROPERTY_HINT_ENUM** = **2** --- Hints that an integer, float or string property is an enumerated value to pick in a list specified via a hint string such as ``"Hello,Something,Else"``.

- **PROPERTY_HINT_ENUM_SUGGESTION** = **3** --- Hints that a string property is can be an enumerated value to pick in a list specified via a hint string such as ``"Hello,Something,Else"``.

Unlike :ref:`PROPERTY_HINT_ENUM<class_@GlobalScope_constant_PROPERTY_HINT_ENUM>` a property with this hint still accepts arbitrary values and can be empty. The list of values serves to suggest possible values.

- **PROPERTY_HINT_EXP_EASING** = **4** --- Hints that a float property should be edited via an exponential easing function. The hint string can include ``"attenuation"`` to flip the curve horizontally and/or ``"inout"`` to also include in/out easing.

- **PROPERTY_HINT_LENGTH** = **5** --- Deprecated hint, unused.

- **PROPERTY_HINT_KEY_ACCEL** = **6** --- Deprecated hint, unused.

- **PROPERTY_HINT_FLAGS** = **7** --- Hints that an integer property is a bitmask with named bit flags. For example, to allow toggling bits 0, 1, 2 and 4, the hint could be something like ``"Bit0,Bit1,Bit2,,Bit4"``.

- **PROPERTY_HINT_LAYERS_2D_RENDER** = **8** --- Hints that an integer property is a bitmask using the optionally named 2D render layers.

- **PROPERTY_HINT_LAYERS_2D_PHYSICS** = **9** --- Hints that an integer property is a bitmask using the optionally named 2D physics layers.

- **PROPERTY_HINT_LAYERS_2D_NAVIGATION** = **10** --- Hints that an integer property is a bitmask using the optionally named 2D navigation layers.

- **PROPERTY_HINT_LAYERS_3D_RENDER** = **11** --- Hints that an integer property is a bitmask using the optionally named 3D render layers.

- **PROPERTY_HINT_LAYERS_3D_PHYSICS** = **12** --- Hints that an integer property is a bitmask using the optionally named 3D physics layers.

- **PROPERTY_HINT_LAYERS_3D_NAVIGATION** = **13** --- Hints that an integer property is a bitmask using the optionally named 2D navigation layers.

- **PROPERTY_HINT_FILE** = **14** --- Hints that a string property is a path to a file. Editing it will show a file dialog for picking the path. The hint string can be a set of filters with wildcards like ``"*.png,*.jpg"``.

- **PROPERTY_HINT_DIR** = **15** --- Hints that a string property is a path to a directory. Editing it will show a file dialog for picking the path.

- **PROPERTY_HINT_GLOBAL_FILE** = **16** --- Hints that a string property is an absolute path to a file outside the project folder. Editing it will show a file dialog for picking the path. The hint string can be a set of filters with wildcards like ``"*.png,*.jpg"``.

- **PROPERTY_HINT_GLOBAL_DIR** = **17** --- Hints that a string property is an absolute path to a directory outside the project folder. Editing it will show a file dialog for picking the path.

- **PROPERTY_HINT_RESOURCE_TYPE** = **18** --- Hints that a property is an instance of a :ref:`Resource<class_Resource>`-derived type, optionally specified via the hint string (e.g. ``"Texture2D"``). Editing it will show a popup menu of valid resource types to instantiate.

- **PROPERTY_HINT_MULTILINE_TEXT** = **19** --- Hints that a string property is text with line breaks. Editing it will show a text input field where line breaks can be typed.

- **PROPERTY_HINT_PLACEHOLDER_TEXT** = **20** --- Hints that a string property should have a placeholder text visible on its input field, whenever the property is empty. The hint string is the placeholder text to use.

- **PROPERTY_HINT_COLOR_NO_ALPHA** = **21** --- Hints that a color property should be edited without changing its alpha component, i.e. only R, G and B channels are edited.

- **PROPERTY_HINT_IMAGE_COMPRESS_LOSSY** = **22** --- Hints that an image is compressed using lossy compression.

- **PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS** = **23** --- Hints that an image is compressed using lossless compression.

- **PROPERTY_HINT_OBJECT_ID** = **24**

- **PROPERTY_HINT_TYPE_STRING** = **25** --- Hint that a property represents a particular type. If a property is :ref:`TYPE_STRING<class_@GlobalScope_constant_TYPE_STRING>`, allows to set a type from the create dialog. If you need to create an :ref:`Array<class_Array>` to contain elements of a specific type, the ``hint_string`` must encode nested types using ``":"`` and ``"/"`` for specifying :ref:`Resource<class_Resource>` types. For instance:

::

    hint_string = "%s:" % [TYPE_INT] # Array of inteters.
    hint_string = "%s:%s:" % [TYPE_ARRAY, TYPE_REAL] # Two-dimensional array of floats.
    hint_string = "%s/%s:Resource" % [TYPE_OBJECT, TYPE_OBJECT] # Array of resources.
    hint_string = "%s:%s/%s:Resource" % [TYPE_ARRAY, TYPE_OBJECT, TYPE_OBJECT] # Two-dimensional array of resources.

**Note:** The final colon is required to specify for properly detecting built-in types.

- **PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE** = **26**

- **PROPERTY_HINT_METHOD_OF_VARIANT_TYPE** = **27**

- **PROPERTY_HINT_METHOD_OF_BASE_TYPE** = **28**

- **PROPERTY_HINT_METHOD_OF_INSTANCE** = **29**

- **PROPERTY_HINT_METHOD_OF_SCRIPT** = **30**

- **PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE** = **31**

- **PROPERTY_HINT_PROPERTY_OF_BASE_TYPE** = **32**

- **PROPERTY_HINT_PROPERTY_OF_INSTANCE** = **33**

- **PROPERTY_HINT_PROPERTY_OF_SCRIPT** = **34**

- **PROPERTY_HINT_OBJECT_TOO_BIG** = **35**

- **PROPERTY_HINT_NODE_PATH_VALID_TYPES** = **36**

- **PROPERTY_HINT_SAVE_FILE** = **37**

- **PROPERTY_HINT_INT_IS_OBJECTID** = **38**

- **PROPERTY_HINT_INT_IS_POINTER** = **40**

- **PROPERTY_HINT_ARRAY_TYPE** = **39**

- **PROPERTY_HINT_MAX** = **41**

----

.. _enum_@GlobalScope_PropertyUsageFlags:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_NONE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_STORAGE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_EDITOR:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_NETWORK:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_EDITOR_HELPER:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_CHECKABLE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_CHECKED:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_INTERNATIONALIZED:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_GROUP:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_CATEGORY:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_SUBGROUP:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_NO_INSTANCE_STATE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_RESTART_IF_CHANGED:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_SCRIPT_VARIABLE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_STORE_IF_NULL:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_ANIMATE_AS_TRIGGER:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_SCRIPT_DEFAULT_VALUE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_CLASS_IS_ENUM:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_NIL_IS_VARIANT:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_INTERNAL:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_DO_NOT_SHARE_ON_DUPLICATE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_HIGH_END_GFX:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_NODE_PATH_FROM_SCENE_ROOT:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_RESOURCE_NOT_PERSISTENT:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_KEYING_INCREMENTS:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_DEFERRED_SET_RESOURCE:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_EDITOR_INSTANTIATE_OBJECT:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_EDITOR_BASIC_SETTING:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_ARRAY:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_DEFAULT:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_DEFAULT_INTL:

.. _class_@GlobalScope_constant_PROPERTY_USAGE_NOEDITOR:

enum **PropertyUsageFlags**:

- **PROPERTY_USAGE_NONE** = **0**

- **PROPERTY_USAGE_STORAGE** = **1** --- The property is serialized and saved in the scene file (default).

- **PROPERTY_USAGE_EDITOR** = **2** --- The property is shown in the editor inspector (default).

- **PROPERTY_USAGE_NETWORK** = **4** --- Deprecated usage flag, unused.

- **PROPERTY_USAGE_EDITOR_HELPER** = **8** --- Deprecated usage flag, unused.

- **PROPERTY_USAGE_CHECKABLE** = **16** --- The property can be checked in the editor inspector.

- **PROPERTY_USAGE_CHECKED** = **32** --- The property is checked in the editor inspector.

- **PROPERTY_USAGE_INTERNATIONALIZED** = **64** --- The property is a translatable string.

- **PROPERTY_USAGE_GROUP** = **128** --- Used to group properties together in the editor.

- **PROPERTY_USAGE_CATEGORY** = **256** --- Used to categorize properties together in the editor.

- **PROPERTY_USAGE_SUBGROUP** = **512** --- Used to group properties together in the editor in a subgroup (under a group).

- **PROPERTY_USAGE_NO_INSTANCE_STATE** = **2048** --- The property does not save its state in :ref:`PackedScene<class_PackedScene>`.

- **PROPERTY_USAGE_RESTART_IF_CHANGED** = **4096** --- Editing the property prompts the user for restarting the editor.

- **PROPERTY_USAGE_SCRIPT_VARIABLE** = **8192** --- The property is a script variable which should be serialized and saved in the scene file.

- **PROPERTY_USAGE_STORE_IF_NULL** = **16384**

- **PROPERTY_USAGE_ANIMATE_AS_TRIGGER** = **32768**

- **PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED** = **65536**

- **PROPERTY_USAGE_SCRIPT_DEFAULT_VALUE** = **131072**

- **PROPERTY_USAGE_CLASS_IS_ENUM** = **262144**

- **PROPERTY_USAGE_NIL_IS_VARIANT** = **524288**

- **PROPERTY_USAGE_INTERNAL** = **1048576**

- **PROPERTY_USAGE_DO_NOT_SHARE_ON_DUPLICATE** = **2097152**

- **PROPERTY_USAGE_HIGH_END_GFX** = **4194304**

- **PROPERTY_USAGE_NODE_PATH_FROM_SCENE_ROOT** = **8388608**

- **PROPERTY_USAGE_RESOURCE_NOT_PERSISTENT** = **16777216**

- **PROPERTY_USAGE_KEYING_INCREMENTS** = **33554432**

- **PROPERTY_USAGE_DEFERRED_SET_RESOURCE** = **67108864**

- **PROPERTY_USAGE_EDITOR_INSTANTIATE_OBJECT** = **134217728**

- **PROPERTY_USAGE_EDITOR_BASIC_SETTING** = **268435456**

- **PROPERTY_USAGE_ARRAY** = **1073741824**

- **PROPERTY_USAGE_DEFAULT** = **7** --- Default usage (storage, editor and network).

- **PROPERTY_USAGE_DEFAULT_INTL** = **71** --- Default usage for translatable strings (storage, editor, network and internationalized).

- **PROPERTY_USAGE_NOEDITOR** = **5** --- Default usage but without showing the property in the editor (storage, network).

----

.. _enum_@GlobalScope_MethodFlags:

.. _class_@GlobalScope_constant_METHOD_FLAG_NORMAL:

.. _class_@GlobalScope_constant_METHOD_FLAG_EDITOR:

.. _class_@GlobalScope_constant_METHOD_FLAG_NOSCRIPT:

.. _class_@GlobalScope_constant_METHOD_FLAG_CONST:

.. _class_@GlobalScope_constant_METHOD_FLAG_REVERSE:

.. _class_@GlobalScope_constant_METHOD_FLAG_VIRTUAL:

.. _class_@GlobalScope_constant_METHOD_FLAG_FROM_SCRIPT:

.. _class_@GlobalScope_constant_METHOD_FLAG_STATIC:

.. _class_@GlobalScope_constant_METHOD_FLAG_OBJECT_CORE:

.. _class_@GlobalScope_constant_METHOD_FLAGS_DEFAULT:

enum **MethodFlags**:

- **METHOD_FLAG_NORMAL** = **1** --- Flag for a normal method.

- **METHOD_FLAG_EDITOR** = **2** --- Flag for an editor method.

- **METHOD_FLAG_NOSCRIPT** = **4** --- Deprecated method flag, unused.

- **METHOD_FLAG_CONST** = **8** --- Flag for a constant method.

- **METHOD_FLAG_REVERSE** = **16** --- Deprecated method flag, unused.

- **METHOD_FLAG_VIRTUAL** = **32** --- Flag for a virtual method.

- **METHOD_FLAG_FROM_SCRIPT** = **64** --- Deprecated method flag, unused.

- **METHOD_FLAG_STATIC** = **256**

- **METHOD_FLAG_OBJECT_CORE** = **512** --- Used internally. Allows to not dump core virtuals such as ``_notification`` to the JSON API.

- **METHOD_FLAGS_DEFAULT** = **1** --- Default method flags.

----

.. _enum_@GlobalScope_RPCMode:

.. _class_@GlobalScope_constant_RPC_MODE_DISABLED:

.. _class_@GlobalScope_constant_RPC_MODE_ANY_PEER:

.. _class_@GlobalScope_constant_RPC_MODE_AUTH:

enum **RPCMode**:

- **RPC_MODE_DISABLED** = **0** --- Used with :ref:`Node.rpc_config<class_Node_method_rpc_config>` to disable a method or property for all RPC calls, making it unavailable. Default for all methods.

- **RPC_MODE_ANY_PEER** = **1** --- Used with :ref:`Node.rpc_config<class_Node_method_rpc_config>` to set a method to be callable remotely by any peer. Analogous to the ``@rpc(any)`` annotation. Calls are accepted from all remote peers, no matter if they are node's authority or not.

- **RPC_MODE_AUTH** = **2** --- Used with :ref:`Node.rpc_config<class_Node_method_rpc_config>` to set a method to be callable remotely only by the current multiplayer authority (which is the server by default). Analogous to the ``@rpc(auth)`` annotation. See :ref:`Node.set_multiplayer_authority<class_Node_method_set_multiplayer_authority>`.

----

.. _enum_@GlobalScope_TransferMode:

.. _class_@GlobalScope_constant_TRANSFER_MODE_UNRELIABLE:

.. _class_@GlobalScope_constant_TRANSFER_MODE_UNRELIABLE_ORDERED:

.. _class_@GlobalScope_constant_TRANSFER_MODE_RELIABLE:

enum **TransferMode**:

- **TRANSFER_MODE_UNRELIABLE** = **0** --- Packets are not acknowledged, no resend attempts are made for lost packets. Packets may arrive in any order. Potentially faster than :ref:`TRANSFER_MODE_UNRELIABLE_ORDERED<class_@GlobalScope_constant_TRANSFER_MODE_UNRELIABLE_ORDERED>`. Use for non-critical data, and always consider whether the order matters.

- **TRANSFER_MODE_UNRELIABLE_ORDERED** = **1** --- Packets are not acknowledged, no resend attempts are made for lost packets. Packets are received in the order they were sent in. Potentially faster than :ref:`TRANSFER_MODE_RELIABLE<class_@GlobalScope_constant_TRANSFER_MODE_RELIABLE>`. Use for non-critical data or data that would be outdated if received late due to resend attempt(s) anyway, for example movement and positional data.

- **TRANSFER_MODE_RELIABLE** = **2** --- Packets must be received and resend attempts should be made until the packets are acknowledged. Packets must be received in the order they were sent in. Most reliable transfer mode, but potentially the slowest due to the overhead. Use for critical data that must be transmitted and arrive in order, for example an ability being triggered or a chat message. Consider carefully if the information really is critical, and use sparingly.

----

.. _enum_@GlobalScope_Variant.Type:

.. _class_@GlobalScope_constant_TYPE_NIL:

.. _class_@GlobalScope_constant_TYPE_BOOL:

.. _class_@GlobalScope_constant_TYPE_INT:

.. _class_@GlobalScope_constant_TYPE_FLOAT:

.. _class_@GlobalScope_constant_TYPE_STRING:

.. _class_@GlobalScope_constant_TYPE_VECTOR2:

.. _class_@GlobalScope_constant_TYPE_VECTOR2I:

.. _class_@GlobalScope_constant_TYPE_RECT2:

.. _class_@GlobalScope_constant_TYPE_RECT2I:

.. _class_@GlobalScope_constant_TYPE_VECTOR3:

.. _class_@GlobalScope_constant_TYPE_VECTOR3I:

.. _class_@GlobalScope_constant_TYPE_TRANSFORM2D:

.. _class_@GlobalScope_constant_TYPE_PLANE:

.. _class_@GlobalScope_constant_TYPE_QUATERNION:

.. _class_@GlobalScope_constant_TYPE_AABB:

.. _class_@GlobalScope_constant_TYPE_BASIS:

.. _class_@GlobalScope_constant_TYPE_TRANSFORM3D:

.. _class_@GlobalScope_constant_TYPE_COLOR:

.. _class_@GlobalScope_constant_TYPE_STRING_NAME:

.. _class_@GlobalScope_constant_TYPE_NODE_PATH:

.. _class_@GlobalScope_constant_TYPE_RID:

.. _class_@GlobalScope_constant_TYPE_OBJECT:

.. _class_@GlobalScope_constant_TYPE_CALLABLE:

.. _class_@GlobalScope_constant_TYPE_SIGNAL:

.. _class_@GlobalScope_constant_TYPE_DICTIONARY:

.. _class_@GlobalScope_constant_TYPE_ARRAY:

.. _class_@GlobalScope_constant_TYPE_RAW_ARRAY:

.. _class_@GlobalScope_constant_TYPE_INT32_ARRAY:

.. _class_@GlobalScope_constant_TYPE_INT64_ARRAY:

.. _class_@GlobalScope_constant_TYPE_FLOAT32_ARRAY:

.. _class_@GlobalScope_constant_TYPE_FLOAT64_ARRAY:

.. _class_@GlobalScope_constant_TYPE_STRING_ARRAY:

.. _class_@GlobalScope_constant_TYPE_VECTOR2_ARRAY:

.. _class_@GlobalScope_constant_TYPE_VECTOR3_ARRAY:

.. _class_@GlobalScope_constant_TYPE_COLOR_ARRAY:

.. _class_@GlobalScope_constant_TYPE_MAX:

enum **Variant.Type**:

- **TYPE_NIL** = **0** --- Variable is ``null``.

- **TYPE_BOOL** = **1** --- Variable is of type :ref:`bool<class_bool>`.

- **TYPE_INT** = **2** --- Variable is of type :ref:`int<class_int>`.

- **TYPE_FLOAT** = **3** --- Variable is of type :ref:`float<class_float>` (real).

- **TYPE_STRING** = **4** --- Variable is of type :ref:`String<class_String>`.

- **TYPE_VECTOR2** = **5** --- Variable is of type :ref:`Vector2<class_Vector2>`.

- **TYPE_VECTOR2I** = **6** --- Variable is of type :ref:`Vector2i<class_Vector2i>`.

- **TYPE_RECT2** = **7** --- Variable is of type :ref:`Rect2<class_Rect2>`.

- **TYPE_RECT2I** = **8** --- Variable is of type :ref:`Rect2i<class_Rect2i>`.

- **TYPE_VECTOR3** = **9** --- Variable is of type :ref:`Vector3<class_Vector3>`.

- **TYPE_VECTOR3I** = **10** --- Variable is of type :ref:`Vector3i<class_Vector3i>`.

- **TYPE_TRANSFORM2D** = **11** --- Variable is of type :ref:`Transform2D<class_Transform2D>`.

- **TYPE_PLANE** = **12** --- Variable is of type :ref:`Plane<class_Plane>`.

- **TYPE_QUATERNION** = **13** --- Variable is of type :ref:`Quaternion<class_Quaternion>`.

- **TYPE_AABB** = **14** --- Variable is of type :ref:`AABB<class_AABB>`.

- **TYPE_BASIS** = **15** --- Variable is of type :ref:`Basis<class_Basis>`.

- **TYPE_TRANSFORM3D** = **16** --- Variable is of type :ref:`Transform3D<class_Transform3D>`.

- **TYPE_COLOR** = **17** --- Variable is of type :ref:`Color<class_Color>`.

- **TYPE_STRING_NAME** = **18** --- Variable is of type :ref:`StringName<class_StringName>`.

- **TYPE_NODE_PATH** = **19** --- Variable is of type :ref:`NodePath<class_NodePath>`.

- **TYPE_RID** = **20** --- Variable is of type :ref:`RID<class_RID>`.

- **TYPE_OBJECT** = **21** --- Variable is of type :ref:`Object<class_Object>`.

- **TYPE_CALLABLE** = **22** --- Variable is of type :ref:`Callable<class_Callable>`.

- **TYPE_SIGNAL** = **23** --- Variable is of type :ref:`Signal<class_Signal>`.

- **TYPE_DICTIONARY** = **24** --- Variable is of type :ref:`Dictionary<class_Dictionary>`.

- **TYPE_ARRAY** = **25** --- Variable is of type :ref:`Array<class_Array>`.

- **TYPE_RAW_ARRAY** = **26** --- Variable is of type :ref:`PackedByteArray<class_PackedByteArray>`.

- **TYPE_INT32_ARRAY** = **27** --- Variable is of type :ref:`PackedInt32Array<class_PackedInt32Array>`.

- **TYPE_INT64_ARRAY** = **28** --- Variable is of type :ref:`PackedInt64Array<class_PackedInt64Array>`.

- **TYPE_FLOAT32_ARRAY** = **29** --- Variable is of type :ref:`PackedFloat32Array<class_PackedFloat32Array>`.

- **TYPE_FLOAT64_ARRAY** = **30** --- Variable is of type :ref:`PackedFloat64Array<class_PackedFloat64Array>`.

- **TYPE_STRING_ARRAY** = **31** --- Variable is of type :ref:`PackedStringArray<class_PackedStringArray>`.

- **TYPE_VECTOR2_ARRAY** = **32** --- Variable is of type :ref:`PackedVector2Array<class_PackedVector2Array>`.

- **TYPE_VECTOR3_ARRAY** = **33** --- Variable is of type :ref:`PackedVector3Array<class_PackedVector3Array>`.

- **TYPE_COLOR_ARRAY** = **34** --- Variable is of type :ref:`PackedColorArray<class_PackedColorArray>`.

- **TYPE_MAX** = **35** --- Represents the size of the :ref:`Variant.Type<enum_@GlobalScope_Variant.Type>` enum.

----

.. _enum_@GlobalScope_Variant.Operator:

.. _class_@GlobalScope_constant_OP_EQUAL:

.. _class_@GlobalScope_constant_OP_NOT_EQUAL:

.. _class_@GlobalScope_constant_OP_LESS:

.. _class_@GlobalScope_constant_OP_LESS_EQUAL:

.. _class_@GlobalScope_constant_OP_GREATER:

.. _class_@GlobalScope_constant_OP_GREATER_EQUAL:

.. _class_@GlobalScope_constant_OP_ADD:

.. _class_@GlobalScope_constant_OP_SUBTRACT:

.. _class_@GlobalScope_constant_OP_MULTIPLY:

.. _class_@GlobalScope_constant_OP_DIVIDE:

.. _class_@GlobalScope_constant_OP_NEGATE:

.. _class_@GlobalScope_constant_OP_POSITIVE:

.. _class_@GlobalScope_constant_OP_MODULE:

.. _class_@GlobalScope_constant_OP_SHIFT_LEFT:

.. _class_@GlobalScope_constant_OP_SHIFT_RIGHT:

.. _class_@GlobalScope_constant_OP_BIT_AND:

.. _class_@GlobalScope_constant_OP_BIT_OR:

.. _class_@GlobalScope_constant_OP_BIT_XOR:

.. _class_@GlobalScope_constant_OP_BIT_NEGATE:

.. _class_@GlobalScope_constant_OP_AND:

.. _class_@GlobalScope_constant_OP_OR:

.. _class_@GlobalScope_constant_OP_XOR:

.. _class_@GlobalScope_constant_OP_NOT:

.. _class_@GlobalScope_constant_OP_IN:

.. _class_@GlobalScope_constant_OP_MAX:

enum **Variant.Operator**:

- **OP_EQUAL** = **0** --- Equality operator (``==``).

- **OP_NOT_EQUAL** = **1** --- Inequality operator (``!=``).

- **OP_LESS** = **2** --- Less than operator (``<``).

- **OP_LESS_EQUAL** = **3** --- Less than or equal operator (``<=``).

- **OP_GREATER** = **4** --- Greater than operator (``>``).

- **OP_GREATER_EQUAL** = **5** --- Greater than or equal operator (``>=``).

- **OP_ADD** = **6** --- Addition operator (``+``).

- **OP_SUBTRACT** = **7** --- Subtraction operator (``-``).

- **OP_MULTIPLY** = **8** --- Multiplication operator (``*``).

- **OP_DIVIDE** = **9** --- Division operator (``/``).

- **OP_NEGATE** = **10** --- Unary negation operator (``-``).

- **OP_POSITIVE** = **11** --- Unary plus operator (``+``).

- **OP_MODULE** = **12** --- Remainder/modulo operator (``%``).

- **OP_SHIFT_LEFT** = **13** --- Left shift operator (``<<``).

- **OP_SHIFT_RIGHT** = **14** --- Right shift operator (``>>``).

- **OP_BIT_AND** = **15** --- Bitwise AND operator (``&``).

- **OP_BIT_OR** = **16** --- Bitwise OR operator (``|``).

- **OP_BIT_XOR** = **17** --- Bitwise XOR operator (``^``).

- **OP_BIT_NEGATE** = **18** --- Bitwise NOT operator (``~``).

- **OP_AND** = **19** --- Logical AND operator (``and`` or ``&&``).

- **OP_OR** = **20** --- Logical OR operator (``or`` or ``||``).

- **OP_XOR** = **21** --- Logical XOR operator (not implemented in GDScript).

- **OP_NOT** = **22** --- Logical NOT operator (``not`` or ``!``).

- **OP_IN** = **23** --- Logical IN operator (``in``).

- **OP_MAX** = **24** --- Represents the size of the :ref:`Variant.Operator<enum_@GlobalScope_Variant.Operator>` enum.

Constants
---------

.. _class_@GlobalScope_constant_SPKEY:

- **SPKEY** = **16777216** --- Keycodes with this bit applied are non-printable.

Property Descriptions
---------------------

.. _class_@GlobalScope_property_AudioServer:

- :ref:`AudioServer<class_AudioServer>` **AudioServer**

The :ref:`AudioServer<class_AudioServer>` singleton.

----

.. _class_@GlobalScope_property_CameraServer:

- :ref:`CameraServer<class_CameraServer>` **CameraServer**

The :ref:`CameraServer<class_CameraServer>` singleton.

----

.. _class_@GlobalScope_property_ClassDB:

- :ref:`ClassDB<class_ClassDB>` **ClassDB**

The :ref:`ClassDB<class_ClassDB>` singleton.

----

.. _class_@GlobalScope_property_DisplayServer:

- :ref:`DisplayServer<class_DisplayServer>` **DisplayServer**

The :ref:`DisplayServer<class_DisplayServer>` singleton.

----

.. _class_@GlobalScope_property_Engine:

- :ref:`Engine<class_Engine>` **Engine**

The :ref:`Engine<class_Engine>` singleton.

----

.. _class_@GlobalScope_property_EngineDebugger:

- :ref:`EngineDebugger<class_EngineDebugger>` **EngineDebugger**

The :ref:`EngineDebugger<class_EngineDebugger>` singleton.

----

.. _class_@GlobalScope_property_Geometry2D:

- :ref:`Geometry2D<class_Geometry2D>` **Geometry2D**

The :ref:`Geometry2D<class_Geometry2D>` singleton.

----

.. _class_@GlobalScope_property_Geometry3D:

- :ref:`Geometry3D<class_Geometry3D>` **Geometry3D**

The :ref:`Geometry3D<class_Geometry3D>` singleton.

----

.. _class_@GlobalScope_property_GodotSharp:

- :ref:`GodotSharp<class_GodotSharp>` **GodotSharp**

The :ref:`GodotSharp<class_GodotSharp>` singleton.

----

.. _class_@GlobalScope_property_IP:

- :ref:`IP<class_IP>` **IP**

The :ref:`IP<class_IP>` singleton.

----

.. _class_@GlobalScope_property_Input:

- :ref:`Input<class_Input>` **Input**

The :ref:`Input<class_Input>` singleton.

----

.. _class_@GlobalScope_property_InputMap:

- :ref:`InputMap<class_InputMap>` **InputMap**

The :ref:`InputMap<class_InputMap>` singleton.

----

.. _class_@GlobalScope_property_JavaClassWrapper:

- :ref:`JavaClassWrapper<class_JavaClassWrapper>` **JavaClassWrapper**

The :ref:`JavaClassWrapper<class_JavaClassWrapper>` singleton.

**Note:** Only implemented on Android.

----

.. _class_@GlobalScope_property_JavaScript:

- :ref:`JavaScript<class_JavaScript>` **JavaScript**

The :ref:`JavaScript<class_JavaScript>` singleton.

**Note:** Only implemented on HTML5.

----

.. _class_@GlobalScope_property_Marshalls:

- :ref:`Marshalls<class_Marshalls>` **Marshalls**

The :ref:`Marshalls<class_Marshalls>` singleton.

----

.. _class_@GlobalScope_property_NativeExtensionManager:

- :ref:`NativeExtensionManager<class_NativeExtensionManager>` **NativeExtensionManager**

----

.. _class_@GlobalScope_property_NavigationMeshGenerator:

- :ref:`NavigationMeshGenerator<class_NavigationMeshGenerator>` **NavigationMeshGenerator**

The :ref:`NavigationMeshGenerator<class_NavigationMeshGenerator>` singleton.

----

.. _class_@GlobalScope_property_NavigationServer2D:

- :ref:`NavigationServer2D<class_NavigationServer2D>` **NavigationServer2D**

The :ref:`NavigationServer2D<class_NavigationServer2D>` singleton.

----

.. _class_@GlobalScope_property_NavigationServer3D:

- :ref:`NavigationServer3D<class_NavigationServer3D>` **NavigationServer3D**

The :ref:`NavigationServer2D<class_NavigationServer2D>` singleton.

----

.. _class_@GlobalScope_property_OS:

- :ref:`OS<class_OS>` **OS**

The :ref:`OS<class_OS>` singleton.

----

.. _class_@GlobalScope_property_Performance:

- :ref:`Performance<class_Performance>` **Performance**

The :ref:`Performance<class_Performance>` singleton.

----

.. _class_@GlobalScope_property_PhysicsServer2D:

- :ref:`PhysicsServer2D<class_PhysicsServer2D>` **PhysicsServer2D**

The :ref:`PhysicsServer2D<class_PhysicsServer2D>` singleton.

----

.. _class_@GlobalScope_property_PhysicsServer3D:

- :ref:`PhysicsServer3D<class_PhysicsServer3D>` **PhysicsServer3D**

The :ref:`PhysicsServer3D<class_PhysicsServer3D>` singleton.

----

.. _class_@GlobalScope_property_ProjectSettings:

- :ref:`ProjectSettings<class_ProjectSettings>` **ProjectSettings**

The :ref:`ProjectSettings<class_ProjectSettings>` singleton.

----

.. _class_@GlobalScope_property_RenderingServer:

- :ref:`RenderingServer<class_RenderingServer>` **RenderingServer**

The :ref:`RenderingServer<class_RenderingServer>` singleton.

----

.. _class_@GlobalScope_property_ResourceLoader:

- :ref:`ResourceLoader<class_ResourceLoader>` **ResourceLoader**

The :ref:`ResourceLoader<class_ResourceLoader>` singleton.

----

.. _class_@GlobalScope_property_ResourceSaver:

- :ref:`ResourceSaver<class_ResourceSaver>` **ResourceSaver**

The :ref:`ResourceSaver<class_ResourceSaver>` singleton.

----

.. _class_@GlobalScope_property_ResourceUID:

- :ref:`ResourceUID<class_ResourceUID>` **ResourceUID**

----

.. _class_@GlobalScope_property_TextServerManager:

- :ref:`TextServerManager<class_TextServerManager>` **TextServerManager**

The :ref:`TextServerManager<class_TextServerManager>` singleton.

----

.. _class_@GlobalScope_property_Time:

- :ref:`Time<class_Time>` **Time**

The :ref:`Time<class_Time>` singleton.

----

.. _class_@GlobalScope_property_TranslationServer:

- :ref:`TranslationServer<class_TranslationServer>` **TranslationServer**

The :ref:`TranslationServer<class_TranslationServer>` singleton.

----

.. _class_@GlobalScope_property_VisualScriptCustomNodes:

- :ref:`VisualScriptCustomNodes<class_VisualScriptCustomNodes>` **VisualScriptCustomNodes**

The :ref:`VisualScriptCustomNodes<class_VisualScriptCustomNodes>` singleton.

----

.. _class_@GlobalScope_property_XRServer:

- :ref:`XRServer<class_XRServer>` **XRServer**

The :ref:`XRServer<class_XRServer>` singleton.

Method Descriptions
-------------------

.. _class_@GlobalScope_method_abs:

- :ref:`Variant<class_Variant>` **abs** **(** :ref:`Variant<class_Variant>` x **)**

----

.. _class_@GlobalScope_method_absf:

- :ref:`float<class_float>` **absf** **(** :ref:`float<class_float>` x **)**

Returns the absolute value of float parameter ``x`` (i.e. positive value).

::

    # a is 1.2
    var a = absf(-1.2)

----

.. _class_@GlobalScope_method_absi:

- :ref:`int<class_int>` **absi** **(** :ref:`int<class_int>` x **)**

Returns the absolute value of int parameter ``x`` (i.e. positive value).

::

    # a is 1
    var a = absi(-1)

----

.. _class_@GlobalScope_method_acos:

- :ref:`float<class_float>` **acos** **(** :ref:`float<class_float>` x **)**

Returns the arc cosine of ``x`` in radians. Use to get the angle of cosine ``x``. ``x`` must be between ``-1.0`` and ``1.0`` (inclusive), otherwise, :ref:`acos<class_@GlobalScope_method_acos>` will return :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>`.

::

    # c is 0.523599 or 30 degrees if converted with rad2deg(c)
    var c = acos(0.866025)

----

.. _class_@GlobalScope_method_asin:

- :ref:`float<class_float>` **asin** **(** :ref:`float<class_float>` x **)**

Returns the arc sine of ``x`` in radians. Use to get the angle of sine ``x``. ``x`` must be between ``-1.0`` and ``1.0`` (inclusive), otherwise, :ref:`asin<class_@GlobalScope_method_asin>` will return :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>`.

::

    # s is 0.523599 or 30 degrees if converted with rad2deg(s)
    var s = asin(0.5)

----

.. _class_@GlobalScope_method_atan:

- :ref:`float<class_float>` **atan** **(** :ref:`float<class_float>` x **)**

Returns the arc tangent of ``x`` in radians. Use it to get the angle from an angle's tangent in trigonometry.

The method cannot know in which quadrant the angle should fall. See :ref:`atan2<class_@GlobalScope_method_atan2>` if you have both ``y`` and ``x``.

::

    var a = atan(0.5) # a is 0.463648

If ``x`` is between ``-PI / 2`` and ``PI / 2`` (inclusive), ``atan(tan(x))`` is equal to ``x``.

----

.. _class_@GlobalScope_method_atan2:

- :ref:`float<class_float>` **atan2** **(** :ref:`float<class_float>` y, :ref:`float<class_float>` x **)**

Returns the arc tangent of ``y/x`` in radians. Use to get the angle of tangent ``y/x``. To compute the value, the method takes into account the sign of both arguments in order to determine the quadrant.

Important note: The Y coordinate comes first, by convention.

::

    var a = atan2(0, -1) # a is 3.141593

----

.. _class_@GlobalScope_method_bytes2var:

- :ref:`Variant<class_Variant>` **bytes2var** **(** :ref:`PackedByteArray<class_PackedByteArray>` bytes **)**

Decodes a byte array back to a :ref:`Variant<class_Variant>` value, without decoding objects.

**Note:** If you need object deserialization, see :ref:`bytes2var_with_objects<class_@GlobalScope_method_bytes2var_with_objects>`.

----

.. _class_@GlobalScope_method_bytes2var_with_objects:

- :ref:`Variant<class_Variant>` **bytes2var_with_objects** **(** :ref:`PackedByteArray<class_PackedByteArray>` bytes **)**

Decodes a byte array back to a :ref:`Variant<class_Variant>` value. Decoding objects is allowed.

**Warning:** Deserialized object can contain code which gets executed. Do not use this option if the serialized object comes from untrusted sources to avoid potential security threats (remote code execution).

----

.. _class_@GlobalScope_method_ceil:

- :ref:`float<class_float>` **ceil** **(** :ref:`float<class_float>` x **)**

Rounds ``x`` upward (towards positive infinity), returning the smallest whole number that is not less than ``x``.

::

    var i = ceil(1.45) # i is 2.0
    i = ceil(1.001)    # i is 2.0

See also :ref:`floor<class_@GlobalScope_method_floor>`, :ref:`round<class_@GlobalScope_method_round>`, and :ref:`snapped<class_@GlobalScope_method_snapped>`.

----

.. _class_@GlobalScope_method_clamp:

- :ref:`Variant<class_Variant>` **clamp** **(** :ref:`Variant<class_Variant>` value, :ref:`Variant<class_Variant>` min, :ref:`Variant<class_Variant>` max **)**

----

.. _class_@GlobalScope_method_clampf:

- :ref:`float<class_float>` **clampf** **(** :ref:`float<class_float>` value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**

Clamps the float ``value`` and returns a value not less than ``min`` and not more than ``max``.

::

    var speed = 42.1
    # a is 20.0
    var a = clampf(speed, 1.0, 20.0)
    
    speed = -10.0
    # a is -1.0
    a = clampf(speed, -1.0, 1.0)

----

.. _class_@GlobalScope_method_clampi:

- :ref:`int<class_int>` **clampi** **(** :ref:`int<class_int>` value, :ref:`int<class_int>` min, :ref:`int<class_int>` max **)**

Clamps the integer ``value`` and returns a value not less than ``min`` and not more than ``max``.

::

    var speed = 42
    # a is 20
    var a = clampi(speed, 1, 20)
    
    speed = -10
    # a is -1
    a = clampi(speed, -1, 1)

----

.. _class_@GlobalScope_method_cos:

- :ref:`float<class_float>` **cos** **(** :ref:`float<class_float>` angle_rad **)**

Returns the cosine of angle ``angle_rad`` in radians.

::

    cos(PI * 2)      # Returns 1.0
    cos(PI)          # Returns -1.0
    cos(deg2rad(90)) # Returns 0.0

----

.. _class_@GlobalScope_method_cosh:

- :ref:`float<class_float>` **cosh** **(** :ref:`float<class_float>` x **)**

Returns the hyperbolic cosine of ``x`` in radians.

::

    # Prints 1.543081
    print(cosh(1))

----

.. _class_@GlobalScope_method_db2linear:

- :ref:`float<class_float>` **db2linear** **(** :ref:`float<class_float>` db **)**

Converts from decibels to linear energy (audio).

----

.. _class_@GlobalScope_method_deg2rad:

- :ref:`float<class_float>` **deg2rad** **(** :ref:`float<class_float>` deg **)**

Converts an angle expressed in degrees to radians.

::

    # r is 3.141593
    var r = deg2rad(180)

----

.. _class_@GlobalScope_method_ease:

- :ref:`float<class_float>` **ease** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` curve **)**

Returns an "eased" value of ``x`` based on an easing function defined with ``curve``. This easing function is based on an exponent. The ``curve`` can be any floating-point number, with specific values leading to the following behaviors:

::

    - Lower than -1.0 (exclusive): Ease in-out
    - 1.0: Linear
    - Between -1.0 and 0.0 (exclusive): Ease out-in
    - 0.0: Constant
    - Between 0.0 to 1.0 (exclusive): Ease in
    - 1.0: Linear
    - Greater than 1.0 (exclusive): Ease out

`ease() curve values cheatsheet <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/ease_cheatsheet.png>`__

See also :ref:`smoothstep<class_@GlobalScope_method_smoothstep>`. If you need to perform more advanced transitions, use :ref:`Tween<class_Tween>` or :ref:`AnimationPlayer<class_AnimationPlayer>`.

----

.. _class_@GlobalScope_method_error_string:

- :ref:`String<class_String>` **error_string** **(** :ref:`int<class_int>` error **)**

Returns a human-readable name for the given error code.

----

.. _class_@GlobalScope_method_exp:

- :ref:`float<class_float>` **exp** **(** :ref:`float<class_float>` x **)**

The natural exponential function. It raises the mathematical constant **e** to the power of ``x`` and returns it.

**e** has an approximate value of 2.71828, and can be obtained with ``exp(1)``.

For exponents to other bases use the method :ref:`pow<class_@GlobalScope_method_pow>`.

::

    var a = exp(2) # Approximately 7.39

----

.. _class_@GlobalScope_method_floor:

- :ref:`float<class_float>` **floor** **(** :ref:`float<class_float>` x **)**

Rounds ``x`` downward (towards negative infinity), returning the largest whole number that is not more than ``x``.

::

    # a is 2.0
    var a = floor(2.99)
    # a is -3.0
    a = floor(-2.99)

See also :ref:`ceil<class_@GlobalScope_method_ceil>`, :ref:`round<class_@GlobalScope_method_round>`, and :ref:`snapped<class_@GlobalScope_method_snapped>`.

**Note:** This method returns a float. If you need an integer, you can use ``int(x)`` directly.

----

.. _class_@GlobalScope_method_fmod:

- :ref:`float<class_float>` **fmod** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**

Returns the floating-point remainder of ``x/y``, keeping the sign of ``x``.

::

    # Remainder is 1.5
    var remainder = fmod(7, 5.5)

For the integer remainder operation, use the ``%`` operator.

----

.. _class_@GlobalScope_method_fposmod:

- :ref:`float<class_float>` **fposmod** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**

Returns the floating-point modulus of ``x/y`` that wraps equally in positive and negative.

::

    for i in 7:
        var x = 0.5 * i - 1.5
        print("%4.1f %4.1f %4.1f" % [x, fmod(x, 1.5), fposmod(x, 1.5)])

Produces:

::

    -1.5 -0.0  0.0
    -1.0 -1.0  0.5
    -0.5 -0.5  1.0
     0.0  0.0  0.0
     0.5  0.5  0.5
     1.0  1.0  1.0
     1.5  0.0  0.0

----

.. _class_@GlobalScope_method_hash:

- :ref:`int<class_int>` **hash** **(** :ref:`Variant<class_Variant>` variable **)**

Returns the integer hash of the variable passed.

::

    print(hash("a")) # Prints 177670

----

.. _class_@GlobalScope_method_instance_from_id:

- :ref:`Object<class_Object>` **instance_from_id** **(** :ref:`int<class_int>` instance_id **)**

Returns the Object that corresponds to ``instance_id``. All Objects have a unique instance ID.

::

    var foo = "bar"
    func _ready():
        var id = get_instance_id()
        var inst = instance_from_id(id)
        print(inst.foo) # Prints bar

----

.. _class_@GlobalScope_method_inverse_lerp:

- :ref:`float<class_float>` **inverse_lerp** **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**

Returns a normalized value considering the given range. This is the opposite of :ref:`lerp<class_@GlobalScope_method_lerp>`.

::

    var middle = lerp(20, 30, 0.75)
    # `middle` is now 27.5.
    # Now, we pretend to have forgotten the original ratio and want to get it back.
    var ratio = inverse_lerp(20, 30, 27.5)
    # `ratio` is now 0.75.

----

.. _class_@GlobalScope_method_is_equal_approx:

- :ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`float<class_float>` a, :ref:`float<class_float>` b **)**

Returns ``true`` if ``a`` and ``b`` are approximately equal to each other.

Here, approximately equal means that ``a`` and ``b`` are within a small internal epsilon of each other, which scales with the magnitude of the numbers.

Infinity values of the same sign are considered equal.

----

.. _class_@GlobalScope_method_is_inf:

- :ref:`bool<class_bool>` **is_inf** **(** :ref:`float<class_float>` x **)**

Returns whether ``x`` is an infinity value (either positive infinity or negative infinity).

----

.. _class_@GlobalScope_method_is_instance_id_valid:

- :ref:`bool<class_bool>` **is_instance_id_valid** **(** :ref:`int<class_int>` id **)**

----

.. _class_@GlobalScope_method_is_instance_valid:

- :ref:`bool<class_bool>` **is_instance_valid** **(** :ref:`Variant<class_Variant>` instance **)**

Returns whether ``instance`` is a valid object (e.g. has not been deleted from memory).

----

.. _class_@GlobalScope_method_is_nan:

- :ref:`bool<class_bool>` **is_nan** **(** :ref:`float<class_float>` x **)**

Returns whether ``x`` is a NaN ("Not a Number" or invalid) value.

----

.. _class_@GlobalScope_method_is_zero_approx:

- :ref:`bool<class_bool>` **is_zero_approx** **(** :ref:`float<class_float>` x **)**

Returns ``true`` if ``x`` is zero or almost zero.

This method is faster than using :ref:`is_equal_approx<class_@GlobalScope_method_is_equal_approx>` with one value as zero.

----

.. _class_@GlobalScope_method_lerp:

- :ref:`float<class_float>` **lerp** **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**

Linearly interpolates between two values by a normalized value. This is the opposite of :ref:`inverse_lerp<class_@GlobalScope_method_inverse_lerp>`.

::

    lerp(0, 4, 0.75) # Returns 3.0

----

.. _class_@GlobalScope_method_lerp_angle:

- :ref:`float<class_float>` **lerp_angle** **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**

Linearly interpolates between two angles (in radians) by a normalized value.

Similar to :ref:`lerp<class_@GlobalScope_method_lerp>`, but interpolates correctly when the angles wrap around :ref:`@GDScript.TAU<class_@GDScript_constant_TAU>`.

::

    extends Sprite
    var elapsed = 0.0
    func _process(delta):
        var min_angle = deg2rad(0.0)
        var max_angle = deg2rad(90.0)
        rotation = lerp_angle(min_angle, max_angle, elapsed)
        elapsed += delta

----

.. _class_@GlobalScope_method_linear2db:

- :ref:`float<class_float>` **linear2db** **(** :ref:`float<class_float>` lin **)**

Converts from linear energy to decibels (audio). This can be used to implement volume sliders that behave as expected (since volume isn't linear). Example:

::

    # "Slider" refers to a node that inherits Range such as HSlider or VSlider.
    # Its range must be configured to go from 0 to 1.
    # Change the bus name if you'd like to change the volume of a specific bus only.
    AudioServer.set_bus_volume_db(AudioServer.get_bus_index("Master"), linear2db($Slider.value))

----

.. _class_@GlobalScope_method_log:

- :ref:`float<class_float>` **log** **(** :ref:`float<class_float>` x **)**

Natural logarithm. The amount of time needed to reach a certain level of continuous growth.

**Note:** This is not the same as the "log" function on most calculators, which uses a base 10 logarithm.

::

    log(10) # Returns 2.302585

**Note:** The logarithm of ``0`` returns ``-inf``, while negative values return ``-nan``.

----

.. _class_@GlobalScope_method_max:

- :ref:`Variant<class_Variant>` **max** **(** ... **)** |vararg|

Returns the maximum of the given values. This method can take any number of arguments.

::

    max(1, 7, 3, -6, 5) # Returns 7

----

.. _class_@GlobalScope_method_maxf:

- :ref:`float<class_float>` **maxf** **(** :ref:`float<class_float>` a, :ref:`float<class_float>` b **)**

Returns the maximum of two float values.

::

    maxf(3.6, 24) # Returns 24.0
    maxf(-3.99, -4) # Returns -3.99

----

.. _class_@GlobalScope_method_maxi:

- :ref:`int<class_int>` **maxi** **(** :ref:`int<class_int>` a, :ref:`int<class_int>` b **)**

Returns the maximum of two int values.

::

    maxi(1, 2) # Returns 2
    maxi(-3, -4) # Returns -3

----

.. _class_@GlobalScope_method_min:

- :ref:`Variant<class_Variant>` **min** **(** ... **)** |vararg|

Returns the minimum of the given values. This method can take any number of arguments.

::

    min(1, 7, 3, -6, 5) # Returns -6

----

.. _class_@GlobalScope_method_minf:

- :ref:`float<class_float>` **minf** **(** :ref:`float<class_float>` a, :ref:`float<class_float>` b **)**

Returns the minimum of two float values.

::

    minf(3.6, 24) # Returns 3.6
    minf(-3.99, -4) # Returns -4.0

----

.. _class_@GlobalScope_method_mini:

- :ref:`int<class_int>` **mini** **(** :ref:`int<class_int>` a, :ref:`int<class_int>` b **)**

Returns the minimum of two int values.

::

    mini(1, 2) # Returns 1
    mini(-3, -4) # Returns -4

----

.. _class_@GlobalScope_method_move_toward:

- :ref:`float<class_float>` **move_toward** **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` delta **)**

Moves ``from`` toward ``to`` by the ``delta`` value.

Use a negative ``delta`` value to move away.

::

    move_toward(5, 10, 4) # Returns 9
    move_toward(10, 5, 4) # Returns 6
    move_toward(10, 5, -1.5) # Returns 11.5

----

.. _class_@GlobalScope_method_nearest_po2:

- :ref:`int<class_int>` **nearest_po2** **(** :ref:`int<class_int>` value **)**

Returns the nearest equal or larger power of 2 for integer ``value``.

In other words, returns the smallest value ``a`` where ``a = pow(2, n)`` such that ``value <= a`` for some non-negative integer ``n``.

::

    nearest_po2(3) # Returns 4
    nearest_po2(4) # Returns 4
    nearest_po2(5) # Returns 8
    
    nearest_po2(0) # Returns 0 (this may not be what you expect)
    nearest_po2(-1) # Returns 0 (this may not be what you expect)

**Warning:** Due to the way it is implemented, this function returns ``0`` rather than ``1`` for non-positive values of ``value`` (in reality, 1 is the smallest integer power of 2).

----

.. _class_@GlobalScope_method_posmod:

- :ref:`int<class_int>` **posmod** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)**

Returns the integer modulus of ``x/y`` that wraps equally in positive and negative.

::

    for i in range(-3, 4):
        print("%2d %2d %2d" % [i, i % 3, posmod(i, 3)])

Produces:

::

    -3  0  0
    -2 -2  1
    -1 -1  2
    0  0  0
    1  1  1
    2  2  2
    3  0  0

----

.. _class_@GlobalScope_method_pow:

- :ref:`float<class_float>` **pow** **(** :ref:`float<class_float>` base, :ref:`float<class_float>` exp **)**

Returns the result of ``base`` raised to the power of ``exp``.

::

    pow(2, 5) # Returns 32

----

.. _class_@GlobalScope_method_print:

- void **print** **(** ... **)** |vararg|

Converts one or more arguments of any type to string in the best way possible and prints them to the console.

::

    var a = [1, 2, 3]
    print("a", "b", a) # Prints ab[1, 2, 3]

**Note:** Consider using :ref:`push_error<class_@GlobalScope_method_push_error>` and :ref:`push_warning<class_@GlobalScope_method_push_warning>` to print error and warning messages instead of :ref:`print<class_@GlobalScope_method_print>`. This distinguishes them from print messages used for debugging purposes, while also displaying a stack trace when an error or warning is printed.

----

.. _class_@GlobalScope_method_print_verbose:

- void **print_verbose** **(** ... **)** |vararg|

If verbose mode is enabled (:ref:`OS.is_stdout_verbose<class_OS_method_is_stdout_verbose>` returning ``true``), converts one or more arguments of any type to string in the best way possible and prints them to the console.

----

.. _class_@GlobalScope_method_printerr:

- void **printerr** **(** ... **)** |vararg|

Prints one or more arguments to strings in the best way possible to standard error line.

::

    printerr("prints to stderr")

----

.. _class_@GlobalScope_method_printraw:

- void **printraw** **(** ... **)** |vararg|

Prints one or more arguments to strings in the best way possible to console. No newline is added at the end.

::

    printraw("A")
    printraw("B")
    # Prints AB

**Note:** Due to limitations with Godot's built-in console, this only prints to the terminal. If you need to print in the editor, use another method, such as :ref:`print<class_@GlobalScope_method_print>`.

----

.. _class_@GlobalScope_method_prints:

- void **prints** **(** ... **)** |vararg|

Prints one or more arguments to the console with a space between each argument.

::

    prints("A", "B", "C") # Prints A B C

----

.. _class_@GlobalScope_method_printt:

- void **printt** **(** ... **)** |vararg|

Prints one or more arguments to the console with a tab between each argument.

::

    printt("A", "B", "C") # Prints A       B       C

----

.. _class_@GlobalScope_method_push_error:

- void **push_error** **(** ... **)** |vararg|

Pushes an error message to Godot's built-in debugger and to the OS terminal.

::

    push_error("test error") # Prints "test error" to debugger and terminal as error call

**Note:** Errors printed this way will not pause project execution. To print an error message and pause project execution in debug builds, use ``assert(false, "test error")`` instead.

----

.. _class_@GlobalScope_method_push_warning:

- void **push_warning** **(** ... **)** |vararg|

Pushes a warning message to Godot's built-in debugger and to the OS terminal.

::

    push_warning("test warning") # Prints "test warning" to debugger and terminal as warning call

----

.. _class_@GlobalScope_method_rad2deg:

- :ref:`float<class_float>` **rad2deg** **(** :ref:`float<class_float>` rad **)**

Converts an angle expressed in radians to degrees.

::

    rad2deg(0.523599) # Returns 30

----

.. _class_@GlobalScope_method_rand_from_seed:

- :ref:`PackedInt64Array<class_PackedInt64Array>` **rand_from_seed** **(** :ref:`int<class_int>` seed **)**

Random from seed: pass a ``seed``, and an array with both number and new seed is returned. "Seed" here refers to the internal state of the pseudo random number generator. The internal state of the current implementation is 64 bits.

----

.. _class_@GlobalScope_method_randf:

- :ref:`float<class_float>` **randf** **(** **)**

Returns a random floating point value between ``0.0`` and ``1.0`` (inclusive).

::

    randf() # Returns e.g. 0.375671

----

.. _class_@GlobalScope_method_randf_range:

- :ref:`float<class_float>` **randf_range** **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to **)**

Returns a random floating point value on the interval between ``from`` and ``to`` (inclusive).

::

    prints(randf_range(-10, 10), randf_range(-10, 10)) # Prints e.g. -3.844535 7.45315

----

.. _class_@GlobalScope_method_randi:

- :ref:`int<class_int>` **randi** **(** **)**

Returns a random unsigned 32-bit integer. Use remainder to obtain a random value in the interval ``[0, N - 1]`` (where N is smaller than 2^32).

::

    randi()           # Returns random integer between 0 and 2^32 - 1
    randi() % 20      # Returns random integer between 0 and 19
    randi() % 100     # Returns random integer between 0 and 99
    randi() % 100 + 1 # Returns random integer between 1 and 100

----

.. _class_@GlobalScope_method_randi_range:

- :ref:`int<class_int>` **randi_range** **(** :ref:`int<class_int>` from, :ref:`int<class_int>` to **)**

Returns a random signed 32-bit integer between ``from`` and ``to`` (inclusive). If ``to`` is lesser than ``from``, they are swapped.

::

    print(randi_range(0, 1)) # Prints 0 or 1
    print(randi_range(-10, 1000)) # Prints any number from -10 to 1000

----

.. _class_@GlobalScope_method_randomize:

- void **randomize** **(** **)**

Randomizes the seed (or the internal state) of the random number generator. Current implementation reseeds using a number based on time.

**Note:** This method is called automatically when the project is run. If you need to fix the seed to have reproducible results, use :ref:`seed<class_@GlobalScope_method_seed>` to initialize the random number generator.

----

.. _class_@GlobalScope_method_range_lerp:

- :ref:`float<class_float>` **range_lerp** **(** :ref:`float<class_float>` value, :ref:`float<class_float>` istart, :ref:`float<class_float>` istop, :ref:`float<class_float>` ostart, :ref:`float<class_float>` ostop **)**

Maps a ``value`` from range ``[istart, istop]`` to ``[ostart, ostop]``.

::

    range_lerp(75, 0, 100, -1, 1) # Returns 0.5

----

.. _class_@GlobalScope_method_range_step_decimals:

- :ref:`int<class_int>` **range_step_decimals** **(** :ref:`float<class_float>` x **)**

----

.. _class_@GlobalScope_method_rid_allocate_id:

- :ref:`int<class_int>` **rid_allocate_id** **(** **)**

Allocate a unique ID which can be used by the implementation to construct a RID. This is used mainly from native extensions to implement servers.

----

.. _class_@GlobalScope_method_rid_from_int64:

- :ref:`RID<class_RID>` **rid_from_int64** **(** :ref:`int<class_int>` base **)**

Create a RID from an int64. This is used mainly from native extensions to build servers.

----

.. _class_@GlobalScope_method_round:

- :ref:`float<class_float>` **round** **(** :ref:`float<class_float>` x **)**

Rounds ``x`` to the nearest whole number, with halfway cases rounded away from zero.

::

    round(2.6) # Returns 3

See also :ref:`floor<class_@GlobalScope_method_floor>`, :ref:`ceil<class_@GlobalScope_method_ceil>`, and :ref:`snapped<class_@GlobalScope_method_snapped>`.

----

.. _class_@GlobalScope_method_seed:

- void **seed** **(** :ref:`int<class_int>` base **)**

Sets seed for the random number generator.

::

    var my_seed = "Godot Rocks"
    seed(my_seed.hash())

----

.. _class_@GlobalScope_method_sign:

- :ref:`Variant<class_Variant>` **sign** **(** :ref:`Variant<class_Variant>` x **)**

----

.. _class_@GlobalScope_method_signf:

- :ref:`float<class_float>` **signf** **(** :ref:`float<class_float>` x **)**

Returns the sign of ``x`` as a float: -1.0 or 1.0. Returns 0.0 if ``x`` is 0.

::

    sign(-6.0) # Returns -1.0
    sign(0.0)  # Returns 0.0
    sign(6.0)  # Returns 1.0

----

.. _class_@GlobalScope_method_signi:

- :ref:`int<class_int>` **signi** **(** :ref:`int<class_int>` x **)**

Returns the sign of ``x`` as an integer: -1 or 1. Returns 0 if ``x`` is 0.

::

    sign(-6) # Returns -1
    sign(0)  # Returns 0
    sign(6)  # Returns 1

----

.. _class_@GlobalScope_method_sin:

- :ref:`float<class_float>` **sin** **(** :ref:`float<class_float>` angle_rad **)**

Returns the sine of angle ``angle_rad`` in radians.

::

    sin(0.523599)    # Returns 0.5
    sin(deg2rad(90)) # Returns 1.0

----

.. _class_@GlobalScope_method_sinh:

- :ref:`float<class_float>` **sinh** **(** :ref:`float<class_float>` x **)**

Returns the hyperbolic sine of ``x``.

::

    var a = log(2.0) # Returns 0.693147
    sinh(a) # Returns 0.75

----

.. _class_@GlobalScope_method_smoothstep:

- :ref:`float<class_float>` **smoothstep** **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to, :ref:`float<class_float>` x **)**

Returns the result of smoothly interpolating the value of ``x`` between ``0`` and ``1``, based on the where ``x`` lies with respect to the edges ``from`` and ``to``.

The return value is ``0`` if ``x <= from``, and ``1`` if ``x >= to``. If ``x`` lies between ``from`` and ``to``, the returned value follows an S-shaped curve that maps ``x`` between ``0`` and ``1``.

This S-shaped curve is the cubic Hermite interpolator, given by ``f(y) = 3*y^2 - 2*y^3`` where ``y = (x-from) / (to-from)``.

::

    smoothstep(0, 2, -5.0) # Returns 0.0
    smoothstep(0, 2, 0.5) # Returns 0.15625
    smoothstep(0, 2, 1.0) # Returns 0.5
    smoothstep(0, 2, 2.0) # Returns 1.0

Compared to :ref:`ease<class_@GlobalScope_method_ease>` with a curve value of ``-1.6521``, :ref:`smoothstep<class_@GlobalScope_method_smoothstep>` returns the smoothest possible curve with no sudden changes in the derivative. If you need to perform more advanced transitions, use :ref:`Tween<class_Tween>` or :ref:`AnimationPlayer<class_AnimationPlayer>`.

`Comparison between smoothstep() and ease(x, -1.6521) return values <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/smoothstep_ease_comparison.png>`__

----

.. _class_@GlobalScope_method_snapped:

- :ref:`float<class_float>` **snapped** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` step **)**

Snaps float value ``x`` to a given ``step``. This can also be used to round a floating point number to an arbitrary number of decimals.

::

    snapped(100, 32) # Returns 96
    snapped(3.14159, 0.01) # Returns 3.14

See also :ref:`ceil<class_@GlobalScope_method_ceil>`, :ref:`floor<class_@GlobalScope_method_floor>`, and :ref:`round<class_@GlobalScope_method_round>`.

----

.. _class_@GlobalScope_method_sqrt:

- :ref:`float<class_float>` **sqrt** **(** :ref:`float<class_float>` x **)**

Returns the square root of ``x``, where ``x`` is a non-negative number.

::

    sqrt(9) # Returns 3

**Note:** Negative values of ``x`` return NaN. If you need negative inputs, use ``System.Numerics.Complex`` in C#.

----

.. _class_@GlobalScope_method_step_decimals:

- :ref:`int<class_int>` **step_decimals** **(** :ref:`float<class_float>` x **)**

Returns the position of the first non-zero digit, after the decimal point. Note that the maximum return value is 10, which is a design decision in the implementation.

::

    # n is 0
    var n = step_decimals(5)
    # n is 4
    n = step_decimals(1.0005)
    # n is 9
    n = step_decimals(0.000000005)

----

.. _class_@GlobalScope_method_str:

- :ref:`String<class_String>` **str** **(** ... **)** |vararg|

Converts one or more arguments of any type to string in the best way possible.

----

.. _class_@GlobalScope_method_str2var:

- :ref:`Variant<class_Variant>` **str2var** **(** :ref:`String<class_String>` string **)**

Converts a formatted string that was returned by :ref:`var2str<class_@GlobalScope_method_var2str>` to the original value.

::

    var a = '{ "a": 1, "b": 2 }'
    var b = str2var(a)
    print(b["a"]) # Prints 1

----

.. _class_@GlobalScope_method_tan:

- :ref:`float<class_float>` **tan** **(** :ref:`float<class_float>` angle_rad **)**

Returns the tangent of angle ``angle_rad`` in radians.

::

    tan(deg2rad(45)) # Returns 1

----

.. _class_@GlobalScope_method_tanh:

- :ref:`float<class_float>` **tanh** **(** :ref:`float<class_float>` x **)**

Returns the hyperbolic tangent of ``x``.

::

    var a = log(2.0) # Returns 0.693147
    tanh(a)      # Returns 0.6

----

.. _class_@GlobalScope_method_typeof:

- :ref:`int<class_int>` **typeof** **(** :ref:`Variant<class_Variant>` variable **)**

Returns the internal type of the given Variant object, using the :ref:`Variant.Type<enum_@GlobalScope_Variant.Type>` values.

::

    var json = JSON.new()
    json.parse('["a", "b", "c"]')
    var result = json.get_data()
    if typeof(result) == TYPE_ARRAY:
        print(result[0]) # Prints a
    else:
        print("Unexpected result")

----

.. _class_@GlobalScope_method_var2bytes:

- :ref:`PackedByteArray<class_PackedByteArray>` **var2bytes** **(** :ref:`Variant<class_Variant>` variable **)**

Encodes a :ref:`Variant<class_Variant>` value to a byte array, without encoding objects. Deserialization can be done with :ref:`bytes2var<class_@GlobalScope_method_bytes2var>`.

**Note:** If you need object serialization, see :ref:`var2bytes_with_objects<class_@GlobalScope_method_var2bytes_with_objects>`.

----

.. _class_@GlobalScope_method_var2bytes_with_objects:

- :ref:`PackedByteArray<class_PackedByteArray>` **var2bytes_with_objects** **(** :ref:`Variant<class_Variant>` variable **)**

Encodes a :ref:`Variant<class_Variant>` value to a byte array. Encoding objects is allowed (and can potentially include code). Deserialization can be done with :ref:`bytes2var_with_objects<class_@GlobalScope_method_bytes2var_with_objects>`.

----

.. _class_@GlobalScope_method_var2str:

- :ref:`String<class_String>` **var2str** **(** :ref:`Variant<class_Variant>` variable **)**

Converts a Variant ``variable`` to a formatted string that can later be parsed using :ref:`str2var<class_@GlobalScope_method_str2var>`.

::

    a = { "a": 1, "b": 2 }
    print(var2str(a))

prints

::

    {
    "a": 1,
    "b": 2
    }

----

.. _class_@GlobalScope_method_weakref:

- :ref:`Variant<class_Variant>` **weakref** **(** :ref:`Variant<class_Variant>` obj **)**

Returns a weak reference to an object, or ``null`` is the argument is invalid.

A weak reference to an object is not enough to keep the object alive: when the only remaining references to a referent are weak references, garbage collection is free to destroy the referent and reuse its memory for something else. However, until the object is actually destroyed the weak reference may return the object even if there are no strong references to it.

----

.. _class_@GlobalScope_method_wrapf:

- :ref:`float<class_float>` **wrapf** **(** :ref:`float<class_float>` value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**

Wraps float ``value`` between ``min`` and ``max``.

Usable for creating loop-alike behavior or infinite surfaces.

::

    # Infinite loop between 5.0 and 9.9
    value = wrapf(value + 0.1, 5.0, 10.0)

::

    # Infinite rotation (in radians)
    angle = wrapf(angle + 0.1, 0.0, TAU)

::

    # Infinite rotation (in radians)
    angle = wrapf(angle + 0.1, -PI, PI)

**Note:** If ``min`` is ``0``, this is equivalent to :ref:`fposmod<class_@GlobalScope_method_fposmod>`, so prefer using that instead.

``wrapf`` is more flexible than using the :ref:`fposmod<class_@GlobalScope_method_fposmod>` approach by giving the user control over the minimum value.

----

.. _class_@GlobalScope_method_wrapi:

- :ref:`int<class_int>` **wrapi** **(** :ref:`int<class_int>` value, :ref:`int<class_int>` min, :ref:`int<class_int>` max **)**

Wraps integer ``value`` between ``min`` and ``max``.

Usable for creating loop-alike behavior or infinite surfaces.

::

    # Infinite loop between 5 and 9
    frame = wrapi(frame + 1, 5, 10)

::

    # result is -2
    var result = wrapi(-6, -5, -1)

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
