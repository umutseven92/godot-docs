:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RDPipelineMultisampleState.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RDPipelineMultisampleState:

RDPipelineMultisampleState
==========================

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`



Properties
----------

+------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`enable_alpha_to_coverage<class_RDPipelineMultisampleState_property_enable_alpha_to_coverage>` | ``false`` |
+------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`enable_alpha_to_one<class_RDPipelineMultisampleState_property_enable_alpha_to_one>`           | ``false`` |
+------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`enable_sample_shading<class_RDPipelineMultisampleState_property_enable_sample_shading>`       | ``false`` |
+------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                  | :ref:`min_sample_shading<class_RDPipelineMultisampleState_property_min_sample_shading>`             | ``0.0``   |
+------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
| :ref:`TextureSamples<enum_RenderingDevice_TextureSamples>` | :ref:`sample_count<class_RDPipelineMultisampleState_property_sample_count>`                         | ``0``     |
+------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
| :ref:`int[]<class_int>`                                    | :ref:`sample_masks<class_RDPipelineMultisampleState_property_sample_masks>`                         | ``[]``    |
+------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+

Property Descriptions
---------------------

.. _class_RDPipelineMultisampleState_property_enable_alpha_to_coverage:

- :ref:`bool<class_bool>` **enable_alpha_to_coverage**

+-----------+-------------------------------------+
| *Default* | ``false``                           |
+-----------+-------------------------------------+
| *Setter*  | set_enable_alpha_to_coverage(value) |
+-----------+-------------------------------------+
| *Getter*  | get_enable_alpha_to_coverage()      |
+-----------+-------------------------------------+

----

.. _class_RDPipelineMultisampleState_property_enable_alpha_to_one:

- :ref:`bool<class_bool>` **enable_alpha_to_one**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_enable_alpha_to_one(value) |
+-----------+--------------------------------+
| *Getter*  | get_enable_alpha_to_one()      |
+-----------+--------------------------------+

----

.. _class_RDPipelineMultisampleState_property_enable_sample_shading:

- :ref:`bool<class_bool>` **enable_sample_shading**

+-----------+----------------------------------+
| *Default* | ``false``                        |
+-----------+----------------------------------+
| *Setter*  | set_enable_sample_shading(value) |
+-----------+----------------------------------+
| *Getter*  | get_enable_sample_shading()      |
+-----------+----------------------------------+

----

.. _class_RDPipelineMultisampleState_property_min_sample_shading:

- :ref:`float<class_float>` **min_sample_shading**

+-----------+-------------------------------+
| *Default* | ``0.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_min_sample_shading(value) |
+-----------+-------------------------------+
| *Getter*  | get_min_sample_shading()      |
+-----------+-------------------------------+

----

.. _class_RDPipelineMultisampleState_property_sample_count:

- :ref:`TextureSamples<enum_RenderingDevice_TextureSamples>` **sample_count**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_sample_count(value) |
+-----------+-------------------------+
| *Getter*  | get_sample_count()      |
+-----------+-------------------------+

----

.. _class_RDPipelineMultisampleState_property_sample_masks:

- :ref:`int[]<class_int>` **sample_masks**

+-----------+-------------------------+
| *Default* | ``[]``                  |
+-----------+-------------------------+
| *Setter*  | set_sample_masks(value) |
+-----------+-------------------------+
| *Getter*  | get_sample_masks()      |
+-----------+-------------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
