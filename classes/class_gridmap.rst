:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GridMap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GridMap:

GridMap
=======

**Inherits:** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Node for 3D tile-based maps.

Description
-----------

GridMap lets you place meshes on a grid interactively. It works both from the editor and from scripts, which can help you create in-game level editors.

GridMaps use a :ref:`MeshLibrary<class_MeshLibrary>` which contains a list of tiles. Each tile is a mesh with materials plus optional collision and navigation shapes.

A GridMap contains a collection of cells. Each grid cell refers to a tile in the :ref:`MeshLibrary<class_MeshLibrary>`. All cells in the map have the same dimensions.

Internally, a GridMap is split into a sparse collection of octants for efficient rendering and physics processing. Every octant has the same dimensions and can contain several cells.

**Note:** GridMap doesn't extend :ref:`VisualInstance3D<class_VisualInstance3D>` and therefore can't be hidden or cull masked based on :ref:`VisualInstance3D.layers<class_VisualInstance3D_property_layers>`. If you make a light not affect the first layer, the whole GridMap won't be lit by the light in question.

Tutorials
---------

- :doc:`../tutorials/3d/using_gridmaps`

- `3D Platformer Demo <https://godotengine.org/asset-library/asset/125>`__

- `3D Kinematic Character Demo <https://godotengine.org/asset-library/asset/126>`__

Properties
----------

+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`               | :ref:`bake_navigation<class_GridMap_property_bake_navigation>`     | ``false``            |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`               | :ref:`cell_center_x<class_GridMap_property_cell_center_x>`         | ``true``             |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`               | :ref:`cell_center_y<class_GridMap_property_cell_center_y>`         | ``true``             |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`               | :ref:`cell_center_z<class_GridMap_property_cell_center_z>`         | ``true``             |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`int<class_int>`                 | :ref:`cell_octant_size<class_GridMap_property_cell_octant_size>`   | ``8``                |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`float<class_float>`             | :ref:`cell_scale<class_GridMap_property_cell_scale>`               | ``1.0``              |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`Vector3<class_Vector3>`         | :ref:`cell_size<class_GridMap_property_cell_size>`                 | ``Vector3(2, 2, 2)`` |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`int<class_int>`                 | :ref:`collision_layer<class_GridMap_property_collision_layer>`     | ``1``                |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`int<class_int>`                 | :ref:`collision_mask<class_GridMap_property_collision_mask>`       | ``1``                |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`MeshLibrary<class_MeshLibrary>` | :ref:`mesh_library<class_GridMap_property_mesh_library>`           |                      |
+---------------------------------------+--------------------------------------------------------------------+----------------------+
| :ref:`int<class_int>`                 | :ref:`navigation_layers<class_GridMap_property_navigation_layers>` | ``1``                |
+---------------------------------------+--------------------------------------------------------------------+----------------------+

Methods
-------

+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`clear<class_GridMap_method_clear>` **(** **)**                                                                                                                                   |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`clear_baked_meshes<class_GridMap_method_clear_baked_meshes>` **(** **)**                                                                                                         |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`           | :ref:`get_bake_mesh_instance<class_GridMap_method_get_bake_mesh_instance>` **(** :ref:`int<class_int>` idx **)**                                                                       |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`       | :ref:`get_bake_meshes<class_GridMap_method_get_bake_meshes>` **(** **)**                                                                                                               |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_cell_item<class_GridMap_method_get_cell_item>` **(** :ref:`Vector3i<class_Vector3i>` position **)** |const|                                                                  |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_cell_item_orientation<class_GridMap_method_get_cell_item_orientation>` **(** :ref:`Vector3i<class_Vector3i>` position **)** |const|                                          |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`         | :ref:`get_collision_layer_value<class_GridMap_method_get_collision_layer_value>` **(** :ref:`int<class_int>` layer_number **)** |const|                                                |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`         | :ref:`get_collision_mask_value<class_GridMap_method_get_collision_mask_value>` **(** :ref:`int<class_int>` layer_number **)** |const|                                                  |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`       | :ref:`get_meshes<class_GridMap_method_get_meshes>` **(** **)**                                                                                                                         |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`       | :ref:`get_used_cells<class_GridMap_method_get_used_cells>` **(** **)** |const|                                                                                                         |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`make_baked_meshes<class_GridMap_method_make_baked_meshes>` **(** :ref:`bool<class_bool>` gen_lightmap_uv=false, :ref:`float<class_float>` lightmap_uv_texel_size=0.1 **)**       |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`   | :ref:`map_to_world<class_GridMap_method_map_to_world>` **(** :ref:`Vector3i<class_Vector3i>` map_position **)** |const|                                                                |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`resource_changed<class_GridMap_method_resource_changed>` **(** :ref:`Resource<class_Resource>` resource **)**                                                                    |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_cell_item<class_GridMap_method_set_cell_item>` **(** :ref:`Vector3i<class_Vector3i>` position, :ref:`int<class_int>` item, :ref:`int<class_int>` orientation=0 **)**         |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_clip<class_GridMap_method_set_clip>` **(** :ref:`bool<class_bool>` enabled, :ref:`bool<class_bool>` clipabove=true, :ref:`int<class_int>` floor=0, Vector3.Axis axis=0 **)** |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_collision_layer_value<class_GridMap_method_set_collision_layer_value>` **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)**                         |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_collision_mask_value<class_GridMap_method_set_collision_mask_value>` **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)**                           |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3i<class_Vector3i>` | :ref:`world_to_map<class_GridMap_method_world_to_map>` **(** :ref:`Vector3<class_Vector3>` world_position **)** |const|                                                                |
+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_GridMap_signal_cell_size_changed:

- **cell_size_changed** **(** :ref:`Vector3<class_Vector3>` cell_size **)**

Emitted when :ref:`cell_size<class_GridMap_property_cell_size>` changes.

Constants
---------

.. _class_GridMap_constant_INVALID_CELL_ITEM:

- **INVALID_CELL_ITEM** = **-1** --- Invalid cell item that can be used in :ref:`set_cell_item<class_GridMap_method_set_cell_item>` to clear cells (or represent an empty cell in :ref:`get_cell_item<class_GridMap_method_get_cell_item>`).

Property Descriptions
---------------------

.. _class_GridMap_property_bake_navigation:

- :ref:`bool<class_bool>` **bake_navigation**

+-----------+----------------------------+
| *Default* | ``false``                  |
+-----------+----------------------------+
| *Setter*  | set_bake_navigation(value) |
+-----------+----------------------------+
| *Getter*  | is_baking_navigation()     |
+-----------+----------------------------+

If ``true``, this GridMap bakes a navigation region.

----

.. _class_GridMap_property_cell_center_x:

- :ref:`bool<class_bool>` **cell_center_x**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_center_x(value) |
+-----------+---------------------+
| *Getter*  | get_center_x()      |
+-----------+---------------------+

If ``true``, grid items are centered on the X axis.

----

.. _class_GridMap_property_cell_center_y:

- :ref:`bool<class_bool>` **cell_center_y**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_center_y(value) |
+-----------+---------------------+
| *Getter*  | get_center_y()      |
+-----------+---------------------+

If ``true``, grid items are centered on the Y axis.

----

.. _class_GridMap_property_cell_center_z:

- :ref:`bool<class_bool>` **cell_center_z**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_center_z(value) |
+-----------+---------------------+
| *Getter*  | get_center_z()      |
+-----------+---------------------+

If ``true``, grid items are centered on the Z axis.

----

.. _class_GridMap_property_cell_octant_size:

- :ref:`int<class_int>` **cell_octant_size**

+-----------+------------------------+
| *Default* | ``8``                  |
+-----------+------------------------+
| *Setter*  | set_octant_size(value) |
+-----------+------------------------+
| *Getter*  | get_octant_size()      |
+-----------+------------------------+

The size of each octant measured in number of cells. This applies to all three axis.

----

.. _class_GridMap_property_cell_scale:

- :ref:`float<class_float>` **cell_scale**

+-----------+-----------------------+
| *Default* | ``1.0``               |
+-----------+-----------------------+
| *Setter*  | set_cell_scale(value) |
+-----------+-----------------------+
| *Getter*  | get_cell_scale()      |
+-----------+-----------------------+

The scale of the cell items.

This does not affect the size of the grid cells themselves, only the items in them. This can be used to make cell items overlap their neighbors.

----

.. _class_GridMap_property_cell_size:

- :ref:`Vector3<class_Vector3>` **cell_size**

+-----------+----------------------+
| *Default* | ``Vector3(2, 2, 2)`` |
+-----------+----------------------+
| *Setter*  | set_cell_size(value) |
+-----------+----------------------+
| *Getter*  | get_cell_size()      |
+-----------+----------------------+

The dimensions of the grid's cells.

This does not affect the size of the meshes. See :ref:`cell_scale<class_GridMap_property_cell_scale>`.

----

.. _class_GridMap_property_collision_layer:

- :ref:`int<class_int>` **collision_layer**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_collision_layer(value) |
+-----------+----------------------------+
| *Getter*  | get_collision_layer()      |
+-----------+----------------------------+

The physics layers this GridMap is in.

GridMaps act as static bodies, meaning they aren't affected by gravity or other forces. They only affect other physics bodies that collide with them.

----

.. _class_GridMap_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The physics layers this GridMap detects collisions in. See `Collision layers and masks <https://docs.godotengine.org/en/latest/tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_GridMap_property_mesh_library:

- :ref:`MeshLibrary<class_MeshLibrary>` **mesh_library**

+----------+-------------------------+
| *Setter* | set_mesh_library(value) |
+----------+-------------------------+
| *Getter* | get_mesh_library()      |
+----------+-------------------------+

The assigned :ref:`MeshLibrary<class_MeshLibrary>`.

----

.. _class_GridMap_property_navigation_layers:

- :ref:`int<class_int>` **navigation_layers**

+-----------+------------------------------+
| *Default* | ``1``                        |
+-----------+------------------------------+
| *Setter*  | set_navigation_layers(value) |
+-----------+------------------------------+
| *Getter*  | get_navigation_layers()      |
+-----------+------------------------------+

The navigation layers the GridMap generates its navigable regions in.

Method Descriptions
-------------------

.. _class_GridMap_method_clear:

- void **clear** **(** **)**

Clear all cells.

----

.. _class_GridMap_method_clear_baked_meshes:

- void **clear_baked_meshes** **(** **)**

----

.. _class_GridMap_method_get_bake_mesh_instance:

- :ref:`RID<class_RID>` **get_bake_mesh_instance** **(** :ref:`int<class_int>` idx **)**

----

.. _class_GridMap_method_get_bake_meshes:

- :ref:`Array<class_Array>` **get_bake_meshes** **(** **)**

Returns an array of :ref:`ArrayMesh<class_ArrayMesh>`\ es and :ref:`Transform3D<class_Transform3D>` references of all bake meshes that exist within the current GridMap.

----

.. _class_GridMap_method_get_cell_item:

- :ref:`int<class_int>` **get_cell_item** **(** :ref:`Vector3i<class_Vector3i>` position **)** |const|

The :ref:`MeshLibrary<class_MeshLibrary>` item index located at the given grid coordinates. If the cell is empty, :ref:`INVALID_CELL_ITEM<class_GridMap_constant_INVALID_CELL_ITEM>` will be returned.

----

.. _class_GridMap_method_get_cell_item_orientation:

- :ref:`int<class_int>` **get_cell_item_orientation** **(** :ref:`Vector3i<class_Vector3i>` position **)** |const|

The orientation of the cell at the given grid coordinates. ``-1`` is returned if the cell is empty.

----

.. _class_GridMap_method_get_collision_layer_value:

- :ref:`bool<class_bool>` **get_collision_layer_value** **(** :ref:`int<class_int>` layer_number **)** |const|

Returns whether or not the specified layer of the :ref:`collision_layer<class_GridMap_property_collision_layer>` is enabled, given a ``layer_number`` between 1 and 32.

----

.. _class_GridMap_method_get_collision_mask_value:

- :ref:`bool<class_bool>` **get_collision_mask_value** **(** :ref:`int<class_int>` layer_number **)** |const|

Returns whether or not the specified layer of the :ref:`collision_mask<class_GridMap_property_collision_mask>` is enabled, given a ``layer_number`` between 1 and 32.

----

.. _class_GridMap_method_get_meshes:

- :ref:`Array<class_Array>` **get_meshes** **(** **)**

Returns an array of :ref:`Transform3D<class_Transform3D>` and :ref:`Mesh<class_Mesh>` references corresponding to the non-empty cells in the grid. The transforms are specified in world space.

----

.. _class_GridMap_method_get_used_cells:

- :ref:`Array<class_Array>` **get_used_cells** **(** **)** |const|

Returns an array of :ref:`Vector3<class_Vector3>` with the non-empty cell coordinates in the grid map.

----

.. _class_GridMap_method_make_baked_meshes:

- void **make_baked_meshes** **(** :ref:`bool<class_bool>` gen_lightmap_uv=false, :ref:`float<class_float>` lightmap_uv_texel_size=0.1 **)**

----

.. _class_GridMap_method_map_to_world:

- :ref:`Vector3<class_Vector3>` **map_to_world** **(** :ref:`Vector3i<class_Vector3i>` map_position **)** |const|

Returns the position of a grid cell in the GridMap's local coordinate space.

----

.. _class_GridMap_method_resource_changed:

- void **resource_changed** **(** :ref:`Resource<class_Resource>` resource **)**

----

.. _class_GridMap_method_set_cell_item:

- void **set_cell_item** **(** :ref:`Vector3i<class_Vector3i>` position, :ref:`int<class_int>` item, :ref:`int<class_int>` orientation=0 **)**

Sets the mesh index for the cell referenced by its grid coordinates.

A negative item index such as :ref:`INVALID_CELL_ITEM<class_GridMap_constant_INVALID_CELL_ITEM>` will clear the cell.

Optionally, the item's orientation can be passed. For valid orientation values, see :ref:`Basis.get_orthogonal_index<class_Basis_method_get_orthogonal_index>`.

----

.. _class_GridMap_method_set_clip:

- void **set_clip** **(** :ref:`bool<class_bool>` enabled, :ref:`bool<class_bool>` clipabove=true, :ref:`int<class_int>` floor=0, Vector3.Axis axis=0 **)**

----

.. _class_GridMap_method_set_collision_layer_value:

- void **set_collision_layer_value** **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)**

Based on ``value``, enables or disables the specified layer in the :ref:`collision_layer<class_GridMap_property_collision_layer>`, given a ``layer_number`` between 1 and 32.

----

.. _class_GridMap_method_set_collision_mask_value:

- void **set_collision_mask_value** **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)**

Based on ``value``, enables or disables the specified layer in the :ref:`collision_mask<class_GridMap_property_collision_mask>`, given a ``layer_number`` between 1 and 32.

----

.. _class_GridMap_method_world_to_map:

- :ref:`Vector3i<class_Vector3i>` **world_to_map** **(** :ref:`Vector3<class_Vector3>` world_position **)** |const|

Returns the coordinates of the grid cell containing the given point.

``pos`` should be in the GridMap's local coordinate space.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
