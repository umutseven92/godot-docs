:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CanvasTexture.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CanvasTexture:

CanvasTexture
=============

**Inherits:** :ref:`Texture2D<class_Texture2D>` **<** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`



Properties
----------

+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+
| :ref:`Texture2D<class_Texture2D>`                   | :ref:`diffuse_texture<class_CanvasTexture_property_diffuse_texture>`       |                       |
+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+
| :ref:`Texture2D<class_Texture2D>`                   | :ref:`normal_texture<class_CanvasTexture_property_normal_texture>`         |                       |
+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+
| :ref:`Color<class_Color>`                           | :ref:`specular_color<class_CanvasTexture_property_specular_color>`         | ``Color(1, 1, 1, 1)`` |
+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+
| :ref:`float<class_float>`                           | :ref:`specular_shininess<class_CanvasTexture_property_specular_shininess>` | ``1.0``               |
+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+
| :ref:`Texture2D<class_Texture2D>`                   | :ref:`specular_texture<class_CanvasTexture_property_specular_texture>`     |                       |
+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+
| :ref:`TextureFilter<enum_CanvasItem_TextureFilter>` | :ref:`texture_filter<class_CanvasTexture_property_texture_filter>`         | ``0``                 |
+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+
| :ref:`TextureRepeat<enum_CanvasItem_TextureRepeat>` | :ref:`texture_repeat<class_CanvasTexture_property_texture_repeat>`         | ``0``                 |
+-----------------------------------------------------+----------------------------------------------------------------------------+-----------------------+

Property Descriptions
---------------------

.. _class_CanvasTexture_property_diffuse_texture:

- :ref:`Texture2D<class_Texture2D>` **diffuse_texture**

+----------+----------------------------+
| *Setter* | set_diffuse_texture(value) |
+----------+----------------------------+
| *Getter* | get_diffuse_texture()      |
+----------+----------------------------+

----

.. _class_CanvasTexture_property_normal_texture:

- :ref:`Texture2D<class_Texture2D>` **normal_texture**

+----------+---------------------------+
| *Setter* | set_normal_texture(value) |
+----------+---------------------------+
| *Getter* | get_normal_texture()      |
+----------+---------------------------+

----

.. _class_CanvasTexture_property_specular_color:

- :ref:`Color<class_Color>` **specular_color**

+-----------+---------------------------+
| *Default* | ``Color(1, 1, 1, 1)``     |
+-----------+---------------------------+
| *Setter*  | set_specular_color(value) |
+-----------+---------------------------+
| *Getter*  | get_specular_color()      |
+-----------+---------------------------+

----

.. _class_CanvasTexture_property_specular_shininess:

- :ref:`float<class_float>` **specular_shininess**

+-----------+-------------------------------+
| *Default* | ``1.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_specular_shininess(value) |
+-----------+-------------------------------+
| *Getter*  | get_specular_shininess()      |
+-----------+-------------------------------+

----

.. _class_CanvasTexture_property_specular_texture:

- :ref:`Texture2D<class_Texture2D>` **specular_texture**

+----------+-----------------------------+
| *Setter* | set_specular_texture(value) |
+----------+-----------------------------+
| *Getter* | get_specular_texture()      |
+----------+-----------------------------+

----

.. _class_CanvasTexture_property_texture_filter:

- :ref:`TextureFilter<enum_CanvasItem_TextureFilter>` **texture_filter**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_texture_filter(value) |
+-----------+---------------------------+
| *Getter*  | get_texture_filter()      |
+-----------+---------------------------+

----

.. _class_CanvasTexture_property_texture_repeat:

- :ref:`TextureRepeat<enum_CanvasItem_TextureRepeat>` **texture_repeat**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_texture_repeat(value) |
+-----------+---------------------------+
| *Getter*  | get_texture_repeat()      |
+-----------+---------------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
