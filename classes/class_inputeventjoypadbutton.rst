:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the InputEventJoypadButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_InputEventJoypadButton:

InputEventJoypadButton
======================

**Inherits:** :ref:`InputEvent<class_InputEvent>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Input event for gamepad buttons.

Description
-----------

Input event type for gamepad buttons. For gamepad analog sticks and joysticks, see :ref:`InputEventJoypadMotion<class_InputEventJoypadMotion>`.

Tutorials
---------

- :doc:`../tutorials/inputs/inputevent`

Properties
----------

+-----------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`JoyButton<enum_@GlobalScope_JoyButton>` | :ref:`button_index<class_InputEventJoypadButton_property_button_index>` | ``0``     |
+-----------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                       | :ref:`pressed<class_InputEventJoypadButton_property_pressed>`           | ``false`` |
+-----------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                     | :ref:`pressure<class_InputEventJoypadButton_property_pressure>`         | ``0.0``   |
+-----------------------------------------------+-------------------------------------------------------------------------+-----------+

Property Descriptions
---------------------

.. _class_InputEventJoypadButton_property_button_index:

- :ref:`JoyButton<enum_@GlobalScope_JoyButton>` **button_index**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_button_index(value) |
+-----------+-------------------------+
| *Getter*  | get_button_index()      |
+-----------+-------------------------+

Button identifier. One of the :ref:`JoyButton<enum_@GlobalScope_JoyButton>` button constants.

----

.. _class_InputEventJoypadButton_property_pressed:

- :ref:`bool<class_bool>` **pressed**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_pressed(value) |
+-----------+--------------------+
| *Getter*  | is_pressed()       |
+-----------+--------------------+

If ``true``, the button's state is pressed. If ``false``, the button's state is released.

----

.. _class_InputEventJoypadButton_property_pressure:

- :ref:`float<class_float>` **pressure**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_pressure(value) |
+-----------+---------------------+
| *Getter*  | get_pressure()      |
+-----------+---------------------+

Represents the pressure the user puts on the button with his finger, if the controller supports it. Ranges from ``0`` to ``1``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
