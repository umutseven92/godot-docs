:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Environment.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Environment:

Environment
===========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Resource for environment nodes (like :ref:`WorldEnvironment<class_WorldEnvironment>`) that define multiple rendering options.

Description
-----------

Resource for environment nodes (like :ref:`WorldEnvironment<class_WorldEnvironment>`) that define multiple environment operations (such as background :ref:`Sky<class_Sky>` or :ref:`Color<class_Color>`, ambient light, fog, depth-of-field...). These parameters affect the final render of the scene. The order of these operations is:

- Depth of Field Blur

- Glow

- Tonemap (Auto Exposure)

- Adjustments

Tutorials
---------

- :doc:`../tutorials/3d/environment_and_post_processing`

- :doc:`../tutorials/3d/high_dynamic_range`

- `3D Material Testers Demo <https://godotengine.org/asset-library/asset/123>`__

- `2D HDR Demo <https://godotengine.org/asset-library/asset/110>`__

- `Third Person Shooter Demo <https://godotengine.org/asset-library/asset/678>`__

Properties
----------

+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`adjustment_brightness<class_Environment_property_adjustment_brightness>`                                               | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`adjustment_color_correction<class_Environment_property_adjustment_color_correction>`                                   |                             |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`adjustment_contrast<class_Environment_property_adjustment_contrast>`                                                   | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`adjustment_enabled<class_Environment_property_adjustment_enabled>`                                                     | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`adjustment_saturation<class_Environment_property_adjustment_saturation>`                                               | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`ambient_light_color<class_Environment_property_ambient_light_color>`                                                   | ``Color(0, 0, 0, 1)``       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ambient_light_energy<class_Environment_property_ambient_light_energy>`                                                 | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`ambient_light_occlusion_color<class_Environment_property_ambient_light_occlusion_color>`                               | ``Color(0, 0, 0, 1)``       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ambient_light_sky_contribution<class_Environment_property_ambient_light_sky_contribution>`                             | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`AmbientSource<enum_Environment_AmbientSource>`       | :ref:`ambient_light_source<class_Environment_property_ambient_light_source>`                                                 | ``0``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`auto_exposure_enabled<class_Environment_property_auto_exposure_enabled>`                                               | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`auto_exposure_max_luma<class_Environment_property_auto_exposure_max_luma>`                                             | ``8.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`auto_exposure_min_luma<class_Environment_property_auto_exposure_min_luma>`                                             | ``0.05``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`auto_exposure_scale<class_Environment_property_auto_exposure_scale>`                                                   | ``0.4``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`auto_exposure_speed<class_Environment_property_auto_exposure_speed>`                                                   | ``0.5``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`int<class_int>`                                      | :ref:`background_camera_feed_id<class_Environment_property_background_camera_feed_id>`                                       | ``1``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`int<class_int>`                                      | :ref:`background_canvas_max_layer<class_Environment_property_background_canvas_max_layer>`                                   | ``0``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`background_color<class_Environment_property_background_color>`                                                         | ``Color(0, 0, 0, 1)``       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`background_energy<class_Environment_property_background_energy>`                                                       | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`BGMode<enum_Environment_BGMode>`                     | :ref:`background_mode<class_Environment_property_background_mode>`                                                           | ``0``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`fog_aerial_perspective<class_Environment_property_fog_aerial_perspective>`                                             | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`fog_density<class_Environment_property_fog_density>`                                                                   | ``0.001``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`fog_enabled<class_Environment_property_fog_enabled>`                                                                   | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`fog_height<class_Environment_property_fog_height>`                                                                     | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`fog_height_density<class_Environment_property_fog_height_density>`                                                     | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`fog_light_color<class_Environment_property_fog_light_color>`                                                           | ``Color(0.5, 0.6, 0.7, 1)`` |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`fog_light_energy<class_Environment_property_fog_light_energy>`                                                         | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`fog_sun_scatter<class_Environment_property_fog_sun_scatter>`                                                           | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`GlowBlendMode<enum_Environment_GlowBlendMode>`       | :ref:`glow_blend_mode<class_Environment_property_glow_blend_mode>`                                                           | ``2``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_bloom<class_Environment_property_glow_bloom>`                                                                     | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`glow_enabled<class_Environment_property_glow_enabled>`                                                                 | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_hdr_luminance_cap<class_Environment_property_glow_hdr_luminance_cap>`                                             | ``12.0``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_hdr_scale<class_Environment_property_glow_hdr_scale>`                                                             | ``2.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_hdr_threshold<class_Environment_property_glow_hdr_threshold>`                                                     | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_intensity<class_Environment_property_glow_intensity>`                                                             | ``0.8``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_levels/1<class_Environment_property_glow_levels/1>`                                                               | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_levels/2<class_Environment_property_glow_levels/2>`                                                               | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_levels/3<class_Environment_property_glow_levels/3>`                                                               | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_levels/4<class_Environment_property_glow_levels/4>`                                                               | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_levels/5<class_Environment_property_glow_levels/5>`                                                               | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_levels/6<class_Environment_property_glow_levels/6>`                                                               | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_levels/7<class_Environment_property_glow_levels/7>`                                                               | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_mix<class_Environment_property_glow_mix>`                                                                         | ``0.05``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`glow_normalized<class_Environment_property_glow_normalized>`                                                           | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`glow_strength<class_Environment_property_glow_strength>`                                                               | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`ReflectionSource<enum_Environment_ReflectionSource>` | :ref:`reflected_light_source<class_Environment_property_reflected_light_source>`                                             | ``0``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sdfgi_bounce_feedback<class_Environment_property_sdfgi_bounce_feedback>`                                               | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sdfgi_cascade0_distance<class_Environment_property_sdfgi_cascade0_distance>`                                           | ``12.8``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`SDFGICascades<enum_Environment_SDFGICascades>`       | :ref:`sdfgi_cascades<class_Environment_property_sdfgi_cascades>`                                                             | ``1``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`sdfgi_enabled<class_Environment_property_sdfgi_enabled>`                                                               | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sdfgi_energy<class_Environment_property_sdfgi_energy>`                                                                 | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sdfgi_max_distance<class_Environment_property_sdfgi_max_distance>`                                                     | ``819.2``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sdfgi_min_cell_size<class_Environment_property_sdfgi_min_cell_size>`                                                   | ``0.2``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sdfgi_normal_bias<class_Environment_property_sdfgi_normal_bias>`                                                       | ``1.1``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sdfgi_probe_bias<class_Environment_property_sdfgi_probe_bias>`                                                         | ``1.1``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`sdfgi_read_sky_light<class_Environment_property_sdfgi_read_sky_light>`                                                 | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`sdfgi_use_occlusion<class_Environment_property_sdfgi_use_occlusion>`                                                   | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`SDFGIYScale<enum_Environment_SDFGIYScale>`           | :ref:`sdfgi_y_scale<class_Environment_property_sdfgi_y_scale>`                                                               | ``0``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Sky<class_Sky>`                                      | :ref:`sky<class_Environment_property_sky>`                                                                                   |                             |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`sky_custom_fov<class_Environment_property_sky_custom_fov>`                                                             | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Vector3<class_Vector3>`                              | :ref:`sky_rotation<class_Environment_property_sky_rotation>`                                                                 | ``Vector3(0, 0, 0)``        |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ss_reflections_depth_tolerance<class_Environment_property_ss_reflections_depth_tolerance>`                             | ``0.2``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`ss_reflections_enabled<class_Environment_property_ss_reflections_enabled>`                                             | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ss_reflections_fade_in<class_Environment_property_ss_reflections_fade_in>`                                             | ``0.15``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ss_reflections_fade_out<class_Environment_property_ss_reflections_fade_out>`                                           | ``2.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`int<class_int>`                                      | :ref:`ss_reflections_max_steps<class_Environment_property_ss_reflections_max_steps>`                                         | ``64``                      |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_ao_channel_affect<class_Environment_property_ssao_ao_channel_affect>`                                             | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_detail<class_Environment_property_ssao_detail>`                                                                   | ``0.5``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`ssao_enabled<class_Environment_property_ssao_enabled>`                                                                 | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_horizon<class_Environment_property_ssao_horizon>`                                                                 | ``0.06``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_intensity<class_Environment_property_ssao_intensity>`                                                             | ``2.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_light_affect<class_Environment_property_ssao_light_affect>`                                                       | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_power<class_Environment_property_ssao_power>`                                                                     | ``1.5``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_radius<class_Environment_property_ssao_radius>`                                                                   | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`ssao_sharpness<class_Environment_property_ssao_sharpness>`                                                             | ``0.98``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`tonemap_exposure<class_Environment_property_tonemap_exposure>`                                                         | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`ToneMapper<enum_Environment_ToneMapper>`             | :ref:`tonemap_mode<class_Environment_property_tonemap_mode>`                                                                 | ``0``                       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`tonemap_white<class_Environment_property_tonemap_white>`                                                               | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`volumetric_fog_density<class_Environment_property_volumetric_fog_density>`                                             | ``0.01``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`volumetric_fog_detail_spread<class_Environment_property_volumetric_fog_detail_spread>`                                 | ``2.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`volumetric_fog_enabled<class_Environment_property_volumetric_fog_enabled>`                                             | ``false``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`volumetric_fog_gi_inject<class_Environment_property_volumetric_fog_gi_inject>`                                         | ``0.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`volumetric_fog_length<class_Environment_property_volumetric_fog_length>`                                               | ``64.0``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`volumetric_fog_light<class_Environment_property_volumetric_fog_light>`                                                 | ``Color(0, 0, 0, 1)``       |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`volumetric_fog_light_energy<class_Environment_property_volumetric_fog_light_energy>`                                   | ``1.0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                                  | :ref:`volumetric_fog_temporal_reprojection_amount<class_Environment_property_volumetric_fog_temporal_reprojection_amount>`   | ``0.9``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`volumetric_fog_temporal_reprojection_enabled<class_Environment_property_volumetric_fog_temporal_reprojection_enabled>` | ``true``                    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+-----------------------------+

Methods
-------

+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_glow_level<class_Environment_method_get_glow_level>` **(** :ref:`int<class_int>` idx **)** |const|                              |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_glow_level<class_Environment_method_set_glow_level>` **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` intensity **)** |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_Environment_BGMode:

.. _class_Environment_constant_BG_CLEAR_COLOR:

.. _class_Environment_constant_BG_COLOR:

.. _class_Environment_constant_BG_SKY:

.. _class_Environment_constant_BG_CANVAS:

.. _class_Environment_constant_BG_KEEP:

.. _class_Environment_constant_BG_CAMERA_FEED:

.. _class_Environment_constant_BG_MAX:

enum **BGMode**:

- **BG_CLEAR_COLOR** = **0** --- Clears the background using the clear color defined in :ref:`ProjectSettings.rendering/environment/defaults/default_clear_color<class_ProjectSettings_property_rendering/environment/defaults/default_clear_color>`.

- **BG_COLOR** = **1** --- Clears the background using a custom clear color.

- **BG_SKY** = **2** --- Displays a user-defined sky in the background.

- **BG_CANVAS** = **3** --- Displays a :ref:`CanvasLayer<class_CanvasLayer>` in the background.

- **BG_KEEP** = **4** --- Keeps on screen every pixel drawn in the background. This is the fastest background mode, but it can only be safely used in fully-interior scenes (no visible sky or sky reflections). If enabled in a scene where the background is visible, "ghost trail" artifacts will be visible when moving the camera.

- **BG_CAMERA_FEED** = **5** --- Displays a camera feed in the background.

- **BG_MAX** = **6** --- Represents the size of the :ref:`BGMode<enum_Environment_BGMode>` enum.

----

.. _enum_Environment_AmbientSource:

.. _class_Environment_constant_AMBIENT_SOURCE_BG:

.. _class_Environment_constant_AMBIENT_SOURCE_DISABLED:

.. _class_Environment_constant_AMBIENT_SOURCE_COLOR:

.. _class_Environment_constant_AMBIENT_SOURCE_SKY:

enum **AmbientSource**:

- **AMBIENT_SOURCE_BG** = **0** --- Gather ambient light from whichever source is specified as the background.

- **AMBIENT_SOURCE_DISABLED** = **1** --- Disable ambient light.

- **AMBIENT_SOURCE_COLOR** = **2** --- Specify a specific :ref:`Color<class_Color>` for ambient light.

- **AMBIENT_SOURCE_SKY** = **3** --- Gather ambient light from the :ref:`Sky<class_Sky>` regardless of what the background is.

----

.. _enum_Environment_ReflectionSource:

.. _class_Environment_constant_REFLECTION_SOURCE_BG:

.. _class_Environment_constant_REFLECTION_SOURCE_DISABLED:

.. _class_Environment_constant_REFLECTION_SOURCE_SKY:

enum **ReflectionSource**:

- **REFLECTION_SOURCE_BG** = **0** --- Use the background for reflections.

- **REFLECTION_SOURCE_DISABLED** = **1** --- Disable reflections.

- **REFLECTION_SOURCE_SKY** = **2** --- Use the :ref:`Sky<class_Sky>` for reflections regardless of what the background is.

----

.. _enum_Environment_ToneMapper:

.. _class_Environment_constant_TONE_MAPPER_LINEAR:

.. _class_Environment_constant_TONE_MAPPER_REINHARDT:

.. _class_Environment_constant_TONE_MAPPER_FILMIC:

.. _class_Environment_constant_TONE_MAPPER_ACES:

enum **ToneMapper**:

- **TONE_MAPPER_LINEAR** = **0** --- Linear tonemapper operator. Reads the linear data and passes it on unmodified.

- **TONE_MAPPER_REINHARDT** = **1** --- Reinhardt tonemapper operator. Performs a variation on rendered pixels' colors by this formula: ``color = color / (1 + color)``.

- **TONE_MAPPER_FILMIC** = **2** --- Filmic tonemapper operator.

- **TONE_MAPPER_ACES** = **3** --- Academy Color Encoding System tonemapper operator.

----

.. _enum_Environment_GlowBlendMode:

.. _class_Environment_constant_GLOW_BLEND_MODE_ADDITIVE:

.. _class_Environment_constant_GLOW_BLEND_MODE_SCREEN:

.. _class_Environment_constant_GLOW_BLEND_MODE_SOFTLIGHT:

.. _class_Environment_constant_GLOW_BLEND_MODE_REPLACE:

.. _class_Environment_constant_GLOW_BLEND_MODE_MIX:

enum **GlowBlendMode**:

- **GLOW_BLEND_MODE_ADDITIVE** = **0** --- Additive glow blending mode. Mostly used for particles, glows (bloom), lens flare, bright sources.

- **GLOW_BLEND_MODE_SCREEN** = **1** --- Screen glow blending mode. Increases brightness, used frequently with bloom.

- **GLOW_BLEND_MODE_SOFTLIGHT** = **2** --- Soft light glow blending mode. Modifies contrast, exposes shadows and highlights (vivid bloom).

- **GLOW_BLEND_MODE_REPLACE** = **3** --- Replace glow blending mode. Replaces all pixels' color by the glow value. This can be used to simulate a full-screen blur effect by tweaking the glow parameters to match the original image's brightness.

- **GLOW_BLEND_MODE_MIX** = **4** --- Mixes the glow with the underlying color to avoid increasing brightness as much while still maintaining a glow effect.

----

.. _enum_Environment_SDFGICascades:

.. _class_Environment_constant_SDFGI_CASCADES_4:

.. _class_Environment_constant_SDFGI_CASCADES_6:

.. _class_Environment_constant_SDFGI_CASCADES_8:

enum **SDFGICascades**:

- **SDFGI_CASCADES_4** = **0**

- **SDFGI_CASCADES_6** = **1**

- **SDFGI_CASCADES_8** = **2**

----

.. _enum_Environment_SDFGIYScale:

.. _class_Environment_constant_SDFGI_Y_SCALE_DISABLED:

.. _class_Environment_constant_SDFGI_Y_SCALE_75_PERCENT:

.. _class_Environment_constant_SDFGI_Y_SCALE_50_PERCENT:

enum **SDFGIYScale**:

- **SDFGI_Y_SCALE_DISABLED** = **0**

- **SDFGI_Y_SCALE_75_PERCENT** = **1**

- **SDFGI_Y_SCALE_50_PERCENT** = **2**

----

.. _enum_Environment_VolumetricFogShadowFilter:

.. _class_Environment_constant_VOLUMETRIC_FOG_SHADOW_FILTER_DISABLED:

.. _class_Environment_constant_VOLUMETRIC_FOG_SHADOW_FILTER_LOW:

.. _class_Environment_constant_VOLUMETRIC_FOG_SHADOW_FILTER_MEDIUM:

.. _class_Environment_constant_VOLUMETRIC_FOG_SHADOW_FILTER_HIGH:

enum **VolumetricFogShadowFilter**:

- **VOLUMETRIC_FOG_SHADOW_FILTER_DISABLED** = **0**

- **VOLUMETRIC_FOG_SHADOW_FILTER_LOW** = **1**

- **VOLUMETRIC_FOG_SHADOW_FILTER_MEDIUM** = **2**

- **VOLUMETRIC_FOG_SHADOW_FILTER_HIGH** = **3**

Property Descriptions
---------------------

.. _class_Environment_property_adjustment_brightness:

- :ref:`float<class_float>` **adjustment_brightness**

+-----------+----------------------------------+
| *Default* | ``1.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_adjustment_brightness(value) |
+-----------+----------------------------------+
| *Getter*  | get_adjustment_brightness()      |
+-----------+----------------------------------+

The global brightness value of the rendered scene. Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_adjustment_color_correction:

- :ref:`Texture<class_Texture>` **adjustment_color_correction**

+----------+----------------------------------------+
| *Setter* | set_adjustment_color_correction(value) |
+----------+----------------------------------------+
| *Getter* | get_adjustment_color_correction()      |
+----------+----------------------------------------+

The :ref:`Texture2D<class_Texture2D>` or :ref:`Texture3D<class_Texture3D>` lookup table (LUT) to use for the built-in post-process color grading. Can use a :ref:`GradientTexture<class_GradientTexture>` for a 1-dimensional LUT, or a :ref:`Texture3D<class_Texture3D>` for a more complex LUT. Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_adjustment_contrast:

- :ref:`float<class_float>` **adjustment_contrast**

+-----------+--------------------------------+
| *Default* | ``1.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_adjustment_contrast(value) |
+-----------+--------------------------------+
| *Getter*  | get_adjustment_contrast()      |
+-----------+--------------------------------+

The global contrast value of the rendered scene (default value is 1). Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_adjustment_enabled:

- :ref:`bool<class_bool>` **adjustment_enabled**

+-----------+-------------------------------+
| *Default* | ``false``                     |
+-----------+-------------------------------+
| *Setter*  | set_adjustment_enabled(value) |
+-----------+-------------------------------+
| *Getter*  | is_adjustment_enabled()       |
+-----------+-------------------------------+

If ``true``, enables the ``adjustment_*`` properties provided by this resource. If ``false``, modifications to the ``adjustment_*`` properties will have no effect on the rendered scene.

----

.. _class_Environment_property_adjustment_saturation:

- :ref:`float<class_float>` **adjustment_saturation**

+-----------+----------------------------------+
| *Default* | ``1.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_adjustment_saturation(value) |
+-----------+----------------------------------+
| *Getter*  | get_adjustment_saturation()      |
+-----------+----------------------------------+

The global color saturation value of the rendered scene (default value is 1). Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_ambient_light_color:

- :ref:`Color<class_Color>` **ambient_light_color**

+-----------+--------------------------------+
| *Default* | ``Color(0, 0, 0, 1)``          |
+-----------+--------------------------------+
| *Setter*  | set_ambient_light_color(value) |
+-----------+--------------------------------+
| *Getter*  | get_ambient_light_color()      |
+-----------+--------------------------------+

The ambient light's :ref:`Color<class_Color>`.

----

.. _class_Environment_property_ambient_light_energy:

- :ref:`float<class_float>` **ambient_light_energy**

+-----------+---------------------------------+
| *Default* | ``1.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_ambient_light_energy(value) |
+-----------+---------------------------------+
| *Getter*  | get_ambient_light_energy()      |
+-----------+---------------------------------+

The ambient light's energy. The higher the value, the stronger the light.

----

.. _class_Environment_property_ambient_light_occlusion_color:

- :ref:`Color<class_Color>` **ambient_light_occlusion_color**

+-----------+-----------------------+
| *Default* | ``Color(0, 0, 0, 1)`` |
+-----------+-----------------------+
| *Setter*  | set_ao_color(value)   |
+-----------+-----------------------+
| *Getter*  | get_ao_color()        |
+-----------+-----------------------+

----

.. _class_Environment_property_ambient_light_sky_contribution:

- :ref:`float<class_float>` **ambient_light_sky_contribution**

+-----------+-------------------------------------------+
| *Default* | ``1.0``                                   |
+-----------+-------------------------------------------+
| *Setter*  | set_ambient_light_sky_contribution(value) |
+-----------+-------------------------------------------+
| *Getter*  | get_ambient_light_sky_contribution()      |
+-----------+-------------------------------------------+

Defines the amount of light that the sky brings on the scene. A value of 0 means that the sky's light emission has no effect on the scene illumination, thus all ambient illumination is provided by the ambient light. On the contrary, a value of 1 means that all the light that affects the scene is provided by the sky, thus the ambient light parameter has no effect on the scene.

----

.. _class_Environment_property_ambient_light_source:

- :ref:`AmbientSource<enum_Environment_AmbientSource>` **ambient_light_source**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_ambient_source(value) |
+-----------+---------------------------+
| *Getter*  | get_ambient_source()      |
+-----------+---------------------------+

----

.. _class_Environment_property_auto_exposure_enabled:

- :ref:`bool<class_bool>` **auto_exposure_enabled**

+-----------+------------------------------------------+
| *Default* | ``false``                                |
+-----------+------------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_enabled(value) |
+-----------+------------------------------------------+
| *Getter*  | is_tonemap_auto_exposure_enabled()       |
+-----------+------------------------------------------+

If ``true``, enables the tonemapping auto exposure mode of the scene renderer. If ``true``, the renderer will automatically determine the exposure setting to adapt to the scene's illumination and the observed light.

----

.. _class_Environment_property_auto_exposure_max_luma:

- :ref:`float<class_float>` **auto_exposure_max_luma**

+-----------+--------------------------------------+
| *Default* | ``8.0``                              |
+-----------+--------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_max(value) |
+-----------+--------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_max()      |
+-----------+--------------------------------------+

The maximum luminance value for the auto exposure.

----

.. _class_Environment_property_auto_exposure_min_luma:

- :ref:`float<class_float>` **auto_exposure_min_luma**

+-----------+--------------------------------------+
| *Default* | ``0.05``                             |
+-----------+--------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_min(value) |
+-----------+--------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_min()      |
+-----------+--------------------------------------+

The minimum luminance value for the auto exposure.

----

.. _class_Environment_property_auto_exposure_scale:

- :ref:`float<class_float>` **auto_exposure_scale**

+-----------+---------------------------------------+
| *Default* | ``0.4``                               |
+-----------+---------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_grey(value) |
+-----------+---------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_grey()      |
+-----------+---------------------------------------+

The scale of the auto exposure effect. Affects the intensity of auto exposure.

----

.. _class_Environment_property_auto_exposure_speed:

- :ref:`float<class_float>` **auto_exposure_speed**

+-----------+----------------------------------------+
| *Default* | ``0.5``                                |
+-----------+----------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_speed(value) |
+-----------+----------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_speed()      |
+-----------+----------------------------------------+

The speed of the auto exposure effect. Affects the time needed for the camera to perform auto exposure.

----

.. _class_Environment_property_background_camera_feed_id:

- :ref:`int<class_int>` **background_camera_feed_id**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_camera_feed_id(value) |
+-----------+---------------------------+
| *Getter*  | get_camera_feed_id()      |
+-----------+---------------------------+

The ID of the camera feed to show in the background.

----

.. _class_Environment_property_background_canvas_max_layer:

- :ref:`int<class_int>` **background_canvas_max_layer**

+-----------+-----------------------------+
| *Default* | ``0``                       |
+-----------+-----------------------------+
| *Setter*  | set_canvas_max_layer(value) |
+-----------+-----------------------------+
| *Getter*  | get_canvas_max_layer()      |
+-----------+-----------------------------+

The maximum layer ID to display. Only effective when using the :ref:`BG_CANVAS<class_Environment_constant_BG_CANVAS>` background mode.

----

.. _class_Environment_property_background_color:

- :ref:`Color<class_Color>` **background_color**

+-----------+-----------------------+
| *Default* | ``Color(0, 0, 0, 1)`` |
+-----------+-----------------------+
| *Setter*  | set_bg_color(value)   |
+-----------+-----------------------+
| *Getter*  | get_bg_color()        |
+-----------+-----------------------+

The :ref:`Color<class_Color>` displayed for clear areas of the scene. Only effective when using the :ref:`BG_COLOR<class_Environment_constant_BG_COLOR>` background mode.

----

.. _class_Environment_property_background_energy:

- :ref:`float<class_float>` **background_energy**

+-----------+----------------------+
| *Default* | ``1.0``              |
+-----------+----------------------+
| *Setter*  | set_bg_energy(value) |
+-----------+----------------------+
| *Getter*  | get_bg_energy()      |
+-----------+----------------------+

The power of the light emitted by the background.

----

.. _class_Environment_property_background_mode:

- :ref:`BGMode<enum_Environment_BGMode>` **background_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_background(value) |
+-----------+-----------------------+
| *Getter*  | get_background()      |
+-----------+-----------------------+

The background mode. See :ref:`BGMode<enum_Environment_BGMode>` for possible values.

----

.. _class_Environment_property_fog_aerial_perspective:

- :ref:`float<class_float>` **fog_aerial_perspective**

+-----------+-----------------------------------+
| *Default* | ``0.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_fog_aerial_perspective(value) |
+-----------+-----------------------------------+
| *Getter*  | get_fog_aerial_perspective()      |
+-----------+-----------------------------------+

Blend factor between the fog's color and the color of the background :ref:`Sky<class_Sky>`. Must have :ref:`background_mode<class_Environment_property_background_mode>` set to :ref:`BG_SKY<class_Environment_constant_BG_SKY>`.

This is useful to simulate `aerial perspective <https://en.wikipedia.org/wiki/Aerial_perspective>`__ in large scenes with low density fog. However, it is not very useful for high-density fog, as the sky will shine through. When set to ``1.0``, the fog color comes completely from the :ref:`Sky<class_Sky>`. If set to ``0.0``, aerial perspective is disabled.

----

.. _class_Environment_property_fog_density:

- :ref:`float<class_float>` **fog_density**

+-----------+------------------------+
| *Default* | ``0.001``              |
+-----------+------------------------+
| *Setter*  | set_fog_density(value) |
+-----------+------------------------+
| *Getter*  | get_fog_density()      |
+-----------+------------------------+

----

.. _class_Environment_property_fog_enabled:

- :ref:`bool<class_bool>` **fog_enabled**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_fog_enabled(value) |
+-----------+------------------------+
| *Getter*  | is_fog_enabled()       |
+-----------+------------------------+

If ``true``, fog effects are enabled.

----

.. _class_Environment_property_fog_height:

- :ref:`float<class_float>` **fog_height**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_fog_height(value) |
+-----------+-----------------------+
| *Getter*  | get_fog_height()      |
+-----------+-----------------------+

----

.. _class_Environment_property_fog_height_density:

- :ref:`float<class_float>` **fog_height_density**

+-----------+-------------------------------+
| *Default* | ``0.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_fog_height_density(value) |
+-----------+-------------------------------+
| *Getter*  | get_fog_height_density()      |
+-----------+-------------------------------+

----

.. _class_Environment_property_fog_light_color:

- :ref:`Color<class_Color>` **fog_light_color**

+-----------+-----------------------------+
| *Default* | ``Color(0.5, 0.6, 0.7, 1)`` |
+-----------+-----------------------------+
| *Setter*  | set_fog_light_color(value)  |
+-----------+-----------------------------+
| *Getter*  | get_fog_light_color()       |
+-----------+-----------------------------+

----

.. _class_Environment_property_fog_light_energy:

- :ref:`float<class_float>` **fog_light_energy**

+-----------+-----------------------------+
| *Default* | ``1.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_fog_light_energy(value) |
+-----------+-----------------------------+
| *Getter*  | get_fog_light_energy()      |
+-----------+-----------------------------+

----

.. _class_Environment_property_fog_sun_scatter:

- :ref:`float<class_float>` **fog_sun_scatter**

+-----------+----------------------------+
| *Default* | ``0.0``                    |
+-----------+----------------------------+
| *Setter*  | set_fog_sun_scatter(value) |
+-----------+----------------------------+
| *Getter*  | get_fog_sun_scatter()      |
+-----------+----------------------------+

----

.. _class_Environment_property_glow_blend_mode:

- :ref:`GlowBlendMode<enum_Environment_GlowBlendMode>` **glow_blend_mode**

+-----------+----------------------------+
| *Default* | ``2``                      |
+-----------+----------------------------+
| *Setter*  | set_glow_blend_mode(value) |
+-----------+----------------------------+
| *Getter*  | get_glow_blend_mode()      |
+-----------+----------------------------+

The glow blending mode.

----

.. _class_Environment_property_glow_bloom:

- :ref:`float<class_float>` **glow_bloom**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_bloom(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_bloom()      |
+-----------+-----------------------+

The bloom's intensity. If set to a value higher than ``0``, this will make glow visible in areas darker than the :ref:`glow_hdr_threshold<class_Environment_property_glow_hdr_threshold>`.

----

.. _class_Environment_property_glow_enabled:

- :ref:`bool<class_bool>` **glow_enabled**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_glow_enabled(value) |
+-----------+-------------------------+
| *Getter*  | is_glow_enabled()       |
+-----------+-------------------------+

If ``true``, the glow effect is enabled.

----

.. _class_Environment_property_glow_hdr_luminance_cap:

- :ref:`float<class_float>` **glow_hdr_luminance_cap**

+-----------+-----------------------------------+
| *Default* | ``12.0``                          |
+-----------+-----------------------------------+
| *Setter*  | set_glow_hdr_luminance_cap(value) |
+-----------+-----------------------------------+
| *Getter*  | get_glow_hdr_luminance_cap()      |
+-----------+-----------------------------------+

The higher threshold of the HDR glow. Areas brighter than this threshold will be clamped for the purposes of the glow effect.

----

.. _class_Environment_property_glow_hdr_scale:

- :ref:`float<class_float>` **glow_hdr_scale**

+-----------+---------------------------------+
| *Default* | ``2.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_glow_hdr_bleed_scale(value) |
+-----------+---------------------------------+
| *Getter*  | get_glow_hdr_bleed_scale()      |
+-----------+---------------------------------+

The bleed scale of the HDR glow.

----

.. _class_Environment_property_glow_hdr_threshold:

- :ref:`float<class_float>` **glow_hdr_threshold**

+-----------+-------------------------------------+
| *Default* | ``1.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_glow_hdr_bleed_threshold(value) |
+-----------+-------------------------------------+
| *Getter*  | get_glow_hdr_bleed_threshold()      |
+-----------+-------------------------------------+

The lower threshold of the HDR glow. When using the GLES2 renderer (which doesn't support HDR), this needs to be below ``1.0`` for glow to be visible. A value of ``0.9`` works well in this case.

----

.. _class_Environment_property_glow_intensity:

- :ref:`float<class_float>` **glow_intensity**

+-----------+---------------------------+
| *Default* | ``0.8``                   |
+-----------+---------------------------+
| *Setter*  | set_glow_intensity(value) |
+-----------+---------------------------+
| *Getter*  | get_glow_intensity()      |
+-----------+---------------------------+

The overall brightness multiplier of the glow effect. When using the GLES2 renderer, this should be increased to 1.5 to compensate for the lack of HDR rendering.

----

.. _class_Environment_property_glow_levels/1:

- :ref:`float<class_float>` **glow_levels/1**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_level(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_level()      |
+-----------+-----------------------+

The intensity of the 1st level of glow. This is the most "local" level (least blurry).

----

.. _class_Environment_property_glow_levels/2:

- :ref:`float<class_float>` **glow_levels/2**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_level(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_level()      |
+-----------+-----------------------+

The intensity of the 2nd level of glow.

----

.. _class_Environment_property_glow_levels/3:

- :ref:`float<class_float>` **glow_levels/3**

+-----------+-----------------------+
| *Default* | ``1.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_level(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_level()      |
+-----------+-----------------------+

The intensity of the 3rd level of glow.

----

.. _class_Environment_property_glow_levels/4:

- :ref:`float<class_float>` **glow_levels/4**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_level(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_level()      |
+-----------+-----------------------+

The intensity of the 4th level of glow.

----

.. _class_Environment_property_glow_levels/5:

- :ref:`float<class_float>` **glow_levels/5**

+-----------+-----------------------+
| *Default* | ``1.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_level(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_level()      |
+-----------+-----------------------+

The intensity of the 5th level of glow.

----

.. _class_Environment_property_glow_levels/6:

- :ref:`float<class_float>` **glow_levels/6**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_level(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_level()      |
+-----------+-----------------------+

The intensity of the 6th level of glow.

----

.. _class_Environment_property_glow_levels/7:

- :ref:`float<class_float>` **glow_levels/7**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_level(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_level()      |
+-----------+-----------------------+

The intensity of the 7th level of glow. This is the most "global" level (blurriest).

----

.. _class_Environment_property_glow_mix:

- :ref:`float<class_float>` **glow_mix**

+-----------+---------------------+
| *Default* | ``0.05``            |
+-----------+---------------------+
| *Setter*  | set_glow_mix(value) |
+-----------+---------------------+
| *Getter*  | get_glow_mix()      |
+-----------+---------------------+

----

.. _class_Environment_property_glow_normalized:

- :ref:`bool<class_bool>` **glow_normalized**

+-----------+----------------------------+
| *Default* | ``false``                  |
+-----------+----------------------------+
| *Setter*  | set_glow_normalized(value) |
+-----------+----------------------------+
| *Getter*  | is_glow_normalized()       |
+-----------+----------------------------+

If ``true``, glow levels will be normalized so that summed together their intensities equal ``1.0``.

----

.. _class_Environment_property_glow_strength:

- :ref:`float<class_float>` **glow_strength**

+-----------+--------------------------+
| *Default* | ``1.0``                  |
+-----------+--------------------------+
| *Setter*  | set_glow_strength(value) |
+-----------+--------------------------+
| *Getter*  | get_glow_strength()      |
+-----------+--------------------------+

The strength of the glow effect. This applies as the glow is blurred across the screen and increases the distance and intensity of the blur. When using the GLES2 renderer, this should be increased to 1.3 to compensate for the lack of HDR rendering.

----

.. _class_Environment_property_reflected_light_source:

- :ref:`ReflectionSource<enum_Environment_ReflectionSource>` **reflected_light_source**

+-----------+------------------------------+
| *Default* | ``0``                        |
+-----------+------------------------------+
| *Setter*  | set_reflection_source(value) |
+-----------+------------------------------+
| *Getter*  | get_reflection_source()      |
+-----------+------------------------------+

----

.. _class_Environment_property_sdfgi_bounce_feedback:

- :ref:`float<class_float>` **sdfgi_bounce_feedback**

+-----------+----------------------------------+
| *Default* | ``0.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_sdfgi_bounce_feedback(value) |
+-----------+----------------------------------+
| *Getter*  | get_sdfgi_bounce_feedback()      |
+-----------+----------------------------------+

----

.. _class_Environment_property_sdfgi_cascade0_distance:

- :ref:`float<class_float>` **sdfgi_cascade0_distance**

+-----------+------------------------------------+
| *Default* | ``12.8``                           |
+-----------+------------------------------------+
| *Setter*  | set_sdfgi_cascade0_distance(value) |
+-----------+------------------------------------+
| *Getter*  | get_sdfgi_cascade0_distance()      |
+-----------+------------------------------------+

----

.. _class_Environment_property_sdfgi_cascades:

- :ref:`SDFGICascades<enum_Environment_SDFGICascades>` **sdfgi_cascades**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_sdfgi_cascades(value) |
+-----------+---------------------------+
| *Getter*  | get_sdfgi_cascades()      |
+-----------+---------------------------+

----

.. _class_Environment_property_sdfgi_enabled:

- :ref:`bool<class_bool>` **sdfgi_enabled**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_sdfgi_enabled(value) |
+-----------+--------------------------+
| *Getter*  | is_sdfgi_enabled()       |
+-----------+--------------------------+

If ``true``, enables signed distance field global illumination.

**Note:** Meshes should have sufficiently thick walls to avoid light leaks (avoid one-sided walls). For interior levels, enclose your level geometry in a sufficiently large box and bridge the loops to close the mesh.

----

.. _class_Environment_property_sdfgi_energy:

- :ref:`float<class_float>` **sdfgi_energy**

+-----------+-------------------------+
| *Default* | ``1.0``                 |
+-----------+-------------------------+
| *Setter*  | set_sdfgi_energy(value) |
+-----------+-------------------------+
| *Getter*  | get_sdfgi_energy()      |
+-----------+-------------------------+

----

.. _class_Environment_property_sdfgi_max_distance:

- :ref:`float<class_float>` **sdfgi_max_distance**

+-----------+-------------------------------+
| *Default* | ``819.2``                     |
+-----------+-------------------------------+
| *Setter*  | set_sdfgi_max_distance(value) |
+-----------+-------------------------------+
| *Getter*  | get_sdfgi_max_distance()      |
+-----------+-------------------------------+

----

.. _class_Environment_property_sdfgi_min_cell_size:

- :ref:`float<class_float>` **sdfgi_min_cell_size**

+-----------+--------------------------------+
| *Default* | ``0.2``                        |
+-----------+--------------------------------+
| *Setter*  | set_sdfgi_min_cell_size(value) |
+-----------+--------------------------------+
| *Getter*  | get_sdfgi_min_cell_size()      |
+-----------+--------------------------------+

----

.. _class_Environment_property_sdfgi_normal_bias:

- :ref:`float<class_float>` **sdfgi_normal_bias**

+-----------+------------------------------+
| *Default* | ``1.1``                      |
+-----------+------------------------------+
| *Setter*  | set_sdfgi_normal_bias(value) |
+-----------+------------------------------+
| *Getter*  | get_sdfgi_normal_bias()      |
+-----------+------------------------------+

----

.. _class_Environment_property_sdfgi_probe_bias:

- :ref:`float<class_float>` **sdfgi_probe_bias**

+-----------+-----------------------------+
| *Default* | ``1.1``                     |
+-----------+-----------------------------+
| *Setter*  | set_sdfgi_probe_bias(value) |
+-----------+-----------------------------+
| *Getter*  | get_sdfgi_probe_bias()      |
+-----------+-----------------------------+

----

.. _class_Environment_property_sdfgi_read_sky_light:

- :ref:`bool<class_bool>` **sdfgi_read_sky_light**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_sdfgi_read_sky_light(value) |
+-----------+---------------------------------+
| *Getter*  | is_sdfgi_reading_sky_light()    |
+-----------+---------------------------------+

----

.. _class_Environment_property_sdfgi_use_occlusion:

- :ref:`bool<class_bool>` **sdfgi_use_occlusion**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_sdfgi_use_occlusion(value) |
+-----------+--------------------------------+
| *Getter*  | is_sdfgi_using_occlusion()     |
+-----------+--------------------------------+

----

.. _class_Environment_property_sdfgi_y_scale:

- :ref:`SDFGIYScale<enum_Environment_SDFGIYScale>` **sdfgi_y_scale**

+-----------+--------------------------+
| *Default* | ``0``                    |
+-----------+--------------------------+
| *Setter*  | set_sdfgi_y_scale(value) |
+-----------+--------------------------+
| *Getter*  | get_sdfgi_y_scale()      |
+-----------+--------------------------+

----

.. _class_Environment_property_sky:

- :ref:`Sky<class_Sky>` **sky**

+----------+----------------+
| *Setter* | set_sky(value) |
+----------+----------------+
| *Getter* | get_sky()      |
+----------+----------------+

The :ref:`Sky<class_Sky>` resource used for this ``Environment``.

----

.. _class_Environment_property_sky_custom_fov:

- :ref:`float<class_float>` **sky_custom_fov**

+-----------+---------------------------+
| *Default* | ``0.0``                   |
+-----------+---------------------------+
| *Setter*  | set_sky_custom_fov(value) |
+-----------+---------------------------+
| *Getter*  | get_sky_custom_fov()      |
+-----------+---------------------------+

----

.. _class_Environment_property_sky_rotation:

- :ref:`Vector3<class_Vector3>` **sky_rotation**

+-----------+-------------------------+
| *Default* | ``Vector3(0, 0, 0)``    |
+-----------+-------------------------+
| *Setter*  | set_sky_rotation(value) |
+-----------+-------------------------+
| *Getter*  | get_sky_rotation()      |
+-----------+-------------------------+

----

.. _class_Environment_property_ss_reflections_depth_tolerance:

- :ref:`float<class_float>` **ss_reflections_depth_tolerance**

+-----------+--------------------------------+
| *Default* | ``0.2``                        |
+-----------+--------------------------------+
| *Setter*  | set_ssr_depth_tolerance(value) |
+-----------+--------------------------------+
| *Getter*  | get_ssr_depth_tolerance()      |
+-----------+--------------------------------+

The depth tolerance for screen-space reflections.

----

.. _class_Environment_property_ss_reflections_enabled:

- :ref:`bool<class_bool>` **ss_reflections_enabled**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_ssr_enabled(value) |
+-----------+------------------------+
| *Getter*  | is_ssr_enabled()       |
+-----------+------------------------+

If ``true``, screen-space reflections are enabled. Screen-space reflections are more accurate than reflections from :ref:`VoxelGI<class_VoxelGI>`\ s or :ref:`ReflectionProbe<class_ReflectionProbe>`\ s, but are slower and can't reflect surfaces occluded by others.

----

.. _class_Environment_property_ss_reflections_fade_in:

- :ref:`float<class_float>` **ss_reflections_fade_in**

+-----------+------------------------+
| *Default* | ``0.15``               |
+-----------+------------------------+
| *Setter*  | set_ssr_fade_in(value) |
+-----------+------------------------+
| *Getter*  | get_ssr_fade_in()      |
+-----------+------------------------+

The fade-in distance for screen-space reflections. Affects the area from the reflected material to the screen-space reflection).

----

.. _class_Environment_property_ss_reflections_fade_out:

- :ref:`float<class_float>` **ss_reflections_fade_out**

+-----------+-------------------------+
| *Default* | ``2.0``                 |
+-----------+-------------------------+
| *Setter*  | set_ssr_fade_out(value) |
+-----------+-------------------------+
| *Getter*  | get_ssr_fade_out()      |
+-----------+-------------------------+

The fade-out distance for screen-space reflections. Affects the area from the screen-space reflection to the "global" reflection.

----

.. _class_Environment_property_ss_reflections_max_steps:

- :ref:`int<class_int>` **ss_reflections_max_steps**

+-----------+--------------------------+
| *Default* | ``64``                   |
+-----------+--------------------------+
| *Setter*  | set_ssr_max_steps(value) |
+-----------+--------------------------+
| *Getter*  | get_ssr_max_steps()      |
+-----------+--------------------------+

The maximum number of steps for screen-space reflections. Higher values are slower.

----

.. _class_Environment_property_ssao_ao_channel_affect:

- :ref:`float<class_float>` **ssao_ao_channel_affect**

+-----------+-----------------------------------+
| *Default* | ``0.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_ssao_ao_channel_affect(value) |
+-----------+-----------------------------------+
| *Getter*  | get_ssao_ao_channel_affect()      |
+-----------+-----------------------------------+

The screen-space ambient occlusion intensity on materials that have an AO texture defined. Values higher than ``0`` will make the SSAO effect visible in areas darkened by AO textures.

----

.. _class_Environment_property_ssao_detail:

- :ref:`float<class_float>` **ssao_detail**

+-----------+------------------------+
| *Default* | ``0.5``                |
+-----------+------------------------+
| *Setter*  | set_ssao_detail(value) |
+-----------+------------------------+
| *Getter*  | get_ssao_detail()      |
+-----------+------------------------+

Sets the strength of the additional level of detail for the screen-space ambient occlusion effect. A high value makes the detail pass more prominent, but it may contribute to aliasing in your final image.

----

.. _class_Environment_property_ssao_enabled:

- :ref:`bool<class_bool>` **ssao_enabled**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_ssao_enabled(value) |
+-----------+-------------------------+
| *Getter*  | is_ssao_enabled()       |
+-----------+-------------------------+

If ``true``, the screen-space ambient occlusion effect is enabled. This darkens objects' corners and cavities to simulate ambient light not reaching the entire object as in real life. This works well for small, dynamic objects, but baked lighting or ambient occlusion textures will do a better job at displaying ambient occlusion on large static objects. Godot uses a form of SSAO called Adaptive Screen Space Ambient Occlusion which is itself a form of Horizon Based Ambient Occlusion.

----

.. _class_Environment_property_ssao_horizon:

- :ref:`float<class_float>` **ssao_horizon**

+-----------+-------------------------+
| *Default* | ``0.06``                |
+-----------+-------------------------+
| *Setter*  | set_ssao_horizon(value) |
+-----------+-------------------------+
| *Getter*  | get_ssao_horizon()      |
+-----------+-------------------------+

The threshold for considering whether a given point on a surface is occluded or not represented as an angle from the horizon mapped into the ``0.0-1.0`` range. A value of ``1.0`` results in no occlusion.

----

.. _class_Environment_property_ssao_intensity:

- :ref:`float<class_float>` **ssao_intensity**

+-----------+---------------------------+
| *Default* | ``2.0``                   |
+-----------+---------------------------+
| *Setter*  | set_ssao_intensity(value) |
+-----------+---------------------------+
| *Getter*  | get_ssao_intensity()      |
+-----------+---------------------------+

The primary screen-space ambient occlusion intensity. Acts as a multiplier for the screen-space ambient occlusion effect. A higher value results in darker occlusion.

----

.. _class_Environment_property_ssao_light_affect:

- :ref:`float<class_float>` **ssao_light_affect**

+-----------+-------------------------------------+
| *Default* | ``0.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_ssao_direct_light_affect(value) |
+-----------+-------------------------------------+
| *Getter*  | get_ssao_direct_light_affect()      |
+-----------+-------------------------------------+

The screen-space ambient occlusion intensity in direct light. In real life, ambient occlusion only applies to indirect light, which means its effects can't be seen in direct light. Values higher than ``0`` will make the SSAO effect visible in direct light.

----

.. _class_Environment_property_ssao_power:

- :ref:`float<class_float>` **ssao_power**

+-----------+-----------------------+
| *Default* | ``1.5``               |
+-----------+-----------------------+
| *Setter*  | set_ssao_power(value) |
+-----------+-----------------------+
| *Getter*  | get_ssao_power()      |
+-----------+-----------------------+

The distribution of occlusion. A higher value results in darker occlusion, similar to :ref:`ssao_intensity<class_Environment_property_ssao_intensity>`, but with a sharper falloff.

----

.. _class_Environment_property_ssao_radius:

- :ref:`float<class_float>` **ssao_radius**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_ssao_radius(value) |
+-----------+------------------------+
| *Getter*  | get_ssao_radius()      |
+-----------+------------------------+

The distance at which objects can occlude each other when calculating screen-space ambient occlusion. Higher values will result in occlusion over a greater distance at the cost of performance and quality.

----

.. _class_Environment_property_ssao_sharpness:

- :ref:`float<class_float>` **ssao_sharpness**

+-----------+---------------------------+
| *Default* | ``0.98``                  |
+-----------+---------------------------+
| *Setter*  | set_ssao_sharpness(value) |
+-----------+---------------------------+
| *Getter*  | get_ssao_sharpness()      |
+-----------+---------------------------+

Sharpness refers to the amount that the screen-space ambient occlusion effect is allowed to blur over the edges of objects. Setting too high will result in aliasing around the edges of objects. Setting too low will make object edges appear blurry.

----

.. _class_Environment_property_tonemap_exposure:

- :ref:`float<class_float>` **tonemap_exposure**

+-----------+-----------------------------+
| *Default* | ``1.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_tonemap_exposure(value) |
+-----------+-----------------------------+
| *Getter*  | get_tonemap_exposure()      |
+-----------+-----------------------------+

The default exposure used for tonemapping.

----

.. _class_Environment_property_tonemap_mode:

- :ref:`ToneMapper<enum_Environment_ToneMapper>` **tonemap_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_tonemapper(value) |
+-----------+-----------------------+
| *Getter*  | get_tonemapper()      |
+-----------+-----------------------+

The tonemapping mode to use. Tonemapping is the process that "converts" HDR values to be suitable for rendering on a LDR display. (Godot doesn't support rendering on HDR displays yet.)

----

.. _class_Environment_property_tonemap_white:

- :ref:`float<class_float>` **tonemap_white**

+-----------+--------------------------+
| *Default* | ``1.0``                  |
+-----------+--------------------------+
| *Setter*  | set_tonemap_white(value) |
+-----------+--------------------------+
| *Getter*  | get_tonemap_white()      |
+-----------+--------------------------+

The white reference value for tonemapping. Only effective if the :ref:`tonemap_mode<class_Environment_property_tonemap_mode>` isn't set to :ref:`TONE_MAPPER_LINEAR<class_Environment_constant_TONE_MAPPER_LINEAR>`.

----

.. _class_Environment_property_volumetric_fog_density:

- :ref:`float<class_float>` **volumetric_fog_density**

+-----------+-----------------------------------+
| *Default* | ``0.01``                          |
+-----------+-----------------------------------+
| *Setter*  | set_volumetric_fog_density(value) |
+-----------+-----------------------------------+
| *Getter*  | get_volumetric_fog_density()      |
+-----------+-----------------------------------+

----

.. _class_Environment_property_volumetric_fog_detail_spread:

- :ref:`float<class_float>` **volumetric_fog_detail_spread**

+-----------+-----------------------------------------+
| *Default* | ``2.0``                                 |
+-----------+-----------------------------------------+
| *Setter*  | set_volumetric_fog_detail_spread(value) |
+-----------+-----------------------------------------+
| *Getter*  | get_volumetric_fog_detail_spread()      |
+-----------+-----------------------------------------+

----

.. _class_Environment_property_volumetric_fog_enabled:

- :ref:`bool<class_bool>` **volumetric_fog_enabled**

+-----------+-----------------------------------+
| *Default* | ``false``                         |
+-----------+-----------------------------------+
| *Setter*  | set_volumetric_fog_enabled(value) |
+-----------+-----------------------------------+
| *Getter*  | is_volumetric_fog_enabled()       |
+-----------+-----------------------------------+

----

.. _class_Environment_property_volumetric_fog_gi_inject:

- :ref:`float<class_float>` **volumetric_fog_gi_inject**

+-----------+-------------------------------------+
| *Default* | ``0.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_volumetric_fog_gi_inject(value) |
+-----------+-------------------------------------+
| *Getter*  | get_volumetric_fog_gi_inject()      |
+-----------+-------------------------------------+

----

.. _class_Environment_property_volumetric_fog_length:

- :ref:`float<class_float>` **volumetric_fog_length**

+-----------+----------------------------------+
| *Default* | ``64.0``                         |
+-----------+----------------------------------+
| *Setter*  | set_volumetric_fog_length(value) |
+-----------+----------------------------------+
| *Getter*  | get_volumetric_fog_length()      |
+-----------+----------------------------------+

----

.. _class_Environment_property_volumetric_fog_light:

- :ref:`Color<class_Color>` **volumetric_fog_light**

+-----------+---------------------------------+
| *Default* | ``Color(0, 0, 0, 1)``           |
+-----------+---------------------------------+
| *Setter*  | set_volumetric_fog_light(value) |
+-----------+---------------------------------+
| *Getter*  | get_volumetric_fog_light()      |
+-----------+---------------------------------+

----

.. _class_Environment_property_volumetric_fog_light_energy:

- :ref:`float<class_float>` **volumetric_fog_light_energy**

+-----------+----------------------------------------+
| *Default* | ``1.0``                                |
+-----------+----------------------------------------+
| *Setter*  | set_volumetric_fog_light_energy(value) |
+-----------+----------------------------------------+
| *Getter*  | get_volumetric_fog_light_energy()      |
+-----------+----------------------------------------+

----

.. _class_Environment_property_volumetric_fog_temporal_reprojection_amount:

- :ref:`float<class_float>` **volumetric_fog_temporal_reprojection_amount**

+-----------+--------------------------------------------------------+
| *Default* | ``0.9``                                                |
+-----------+--------------------------------------------------------+
| *Setter*  | set_volumetric_fog_temporal_reprojection_amount(value) |
+-----------+--------------------------------------------------------+
| *Getter*  | get_volumetric_fog_temporal_reprojection_amount()      |
+-----------+--------------------------------------------------------+

----

.. _class_Environment_property_volumetric_fog_temporal_reprojection_enabled:

- :ref:`bool<class_bool>` **volumetric_fog_temporal_reprojection_enabled**

+-----------+---------------------------------------------------------+
| *Default* | ``true``                                                |
+-----------+---------------------------------------------------------+
| *Setter*  | set_volumetric_fog_temporal_reprojection_enabled(value) |
+-----------+---------------------------------------------------------+
| *Getter*  | is_volumetric_fog_temporal_reprojection_enabled()       |
+-----------+---------------------------------------------------------+

Method Descriptions
-------------------

.. _class_Environment_method_get_glow_level:

- :ref:`float<class_float>` **get_glow_level** **(** :ref:`int<class_int>` idx **)** |const|

Returns the intensity of the glow level ``idx``.

----

.. _class_Environment_method_set_glow_level:

- void **set_glow_level** **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` intensity **)**

Sets the intensity of the glow level ``idx``. A value above ``0.0`` enables the level. Each level relies on the previous level. This means that enabling higher glow levels will slow down the glow effect rendering, even if previous levels aren't enabled.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
