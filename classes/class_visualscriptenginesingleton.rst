:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualScriptEngineSingleton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualScriptEngineSingleton:

VisualScriptEngineSingleton
===========================

**Inherits:** :ref:`VisualScriptNode<class_VisualScriptNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

A Visual Script node returning a singleton from :ref:`@GlobalScope<class_@GlobalScope>`.

Description
-----------

A Visual Script node returning a singleton from :ref:`@GlobalScope<class_@GlobalScope>`.

Properties
----------

+-----------------------------+----------------------------------------------------------------------+--------+
| :ref:`String<class_String>` | :ref:`constant<class_VisualScriptEngineSingleton_property_constant>` | ``""`` |
+-----------------------------+----------------------------------------------------------------------+--------+

Property Descriptions
---------------------

.. _class_VisualScriptEngineSingleton_property_constant:

- :ref:`String<class_String>` **constant**

+-----------+----------------------+
| *Default* | ``""``               |
+-----------+----------------------+
| *Setter*  | set_singleton(value) |
+-----------+----------------------+
| *Getter*  | get_singleton()      |
+-----------+----------------------+

The singleton's name.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
