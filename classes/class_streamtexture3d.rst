:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the StreamTexture3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_StreamTexture3D:

StreamTexture3D
===============

**Inherits:** :ref:`Texture3D<class_Texture3D>` **<** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`



Properties
----------

+-----------------------------+------------------------------------------------------------+--------+
| :ref:`String<class_String>` | :ref:`load_path<class_StreamTexture3D_property_load_path>` | ``""`` |
+-----------------------------+------------------------------------------------------------+--------+

Methods
-------

+---------------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`load<class_StreamTexture3D_method_load>` **(** :ref:`String<class_String>` path **)** |
+---------------------------------------+---------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_StreamTexture3D_property_load_path:

- :ref:`String<class_String>` **load_path**

+-----------+-----------------+
| *Default* | ``""``          |
+-----------+-----------------+
| *Setter*  | load(value)     |
+-----------+-----------------+
| *Getter*  | get_load_path() |
+-----------+-----------------+

Method Descriptions
-------------------

.. _class_StreamTexture3D_method_load:

- :ref:`Error<enum_@GlobalScope_Error>` **load** **(** :ref:`String<class_String>` path **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
