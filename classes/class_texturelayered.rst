:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TextureLayered.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureLayered:

TextureLayered
==============

**Inherits:** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`ImageTextureLayered<class_ImageTextureLayered>`, :ref:`StreamTextureLayered<class_StreamTextureLayered>`

Base class for 3D texture types.

Description
-----------

Base class for :ref:`Texture2DArray<class_Texture2DArray>`, :ref:`Cubemap<class_Cubemap>` and :ref:`CubemapArray<class_CubemapArray>`. Cannot be used directly, but contains all the functions necessary for accessing the derived resource types. Data is set on a per-layer basis. For :ref:`Texture2DArray<class_Texture2DArray>`\ s, the layer specifies the array layer.

Methods
-------

+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`Format<enum_Image_Format>`                    | :ref:`get_format<class_TextureLayered_method_get_format>` **(** **)** |const|                                     |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`get_height<class_TextureLayered_method_get_height>` **(** **)** |const|                                     |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>`                           | :ref:`get_layer_data<class_TextureLayered_method_get_layer_data>` **(** :ref:`int<class_int>` layer **)** |const| |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`LayeredType<enum_TextureLayered_LayeredType>` | :ref:`get_layered_type<class_TextureLayered_method_get_layered_type>` **(** **)** |const|                         |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`get_layers<class_TextureLayered_method_get_layers>` **(** **)** |const|                                     |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`get_width<class_TextureLayered_method_get_width>` **(** **)** |const|                                       |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`has_mipmaps<class_TextureLayered_method_has_mipmaps>` **(** **)** |const|                                   |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_TextureLayered_LayeredType:

.. _class_TextureLayered_constant_LAYERED_TYPE_2D_ARRAY:

.. _class_TextureLayered_constant_LAYERED_TYPE_CUBEMAP:

.. _class_TextureLayered_constant_LAYERED_TYPE_CUBEMAP_ARRAY:

enum **LayeredType**:

- **LAYERED_TYPE_2D_ARRAY** = **0**

- **LAYERED_TYPE_CUBEMAP** = **1**

- **LAYERED_TYPE_CUBEMAP_ARRAY** = **2**

Method Descriptions
-------------------

.. _class_TextureLayered_method_get_format:

- :ref:`Format<enum_Image_Format>` **get_format** **(** **)** |const|

Returns the current format being used by this texture. See :ref:`Format<enum_Image_Format>` for details.

----

.. _class_TextureLayered_method_get_height:

- :ref:`int<class_int>` **get_height** **(** **)** |const|

Returns the height of the texture. Height is typically represented by the Y-axis.

----

.. _class_TextureLayered_method_get_layer_data:

- :ref:`Image<class_Image>` **get_layer_data** **(** :ref:`int<class_int>` layer **)** |const|

Returns an :ref:`Image<class_Image>` resource with the data from specified ``layer``.

----

.. _class_TextureLayered_method_get_layered_type:

- :ref:`LayeredType<enum_TextureLayered_LayeredType>` **get_layered_type** **(** **)** |const|

----

.. _class_TextureLayered_method_get_layers:

- :ref:`int<class_int>` **get_layers** **(** **)** |const|

----

.. _class_TextureLayered_method_get_width:

- :ref:`int<class_int>` **get_width** **(** **)** |const|

Returns the width of the texture. Width is typically represented by the X-axis.

----

.. _class_TextureLayered_method_has_mipmaps:

- :ref:`bool<class_bool>` **has_mipmaps** **(** **)** |const|

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
