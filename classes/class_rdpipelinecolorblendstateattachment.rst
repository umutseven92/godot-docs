:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RDPipelineColorBlendStateAttachment.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RDPipelineColorBlendStateAttachment:

RDPipelineColorBlendStateAttachment
===================================

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`



Properties
----------

+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`BlendOperation<enum_RenderingDevice_BlendOperation>` | :ref:`alpha_blend_op<class_RDPipelineColorBlendStateAttachment_property_alpha_blend_op>`                 | ``0``     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`BlendOperation<enum_RenderingDevice_BlendOperation>` | :ref:`color_blend_op<class_RDPipelineColorBlendStateAttachment_property_color_blend_op>`                 | ``0``     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>`       | :ref:`dst_alpha_blend_factor<class_RDPipelineColorBlendStateAttachment_property_dst_alpha_blend_factor>` | ``0``     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>`       | :ref:`dst_color_blend_factor<class_RDPipelineColorBlendStateAttachment_property_dst_color_blend_factor>` | ``0``     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`enable_blend<class_RDPipelineColorBlendStateAttachment_property_enable_blend>`                     | ``false`` |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>`       | :ref:`src_alpha_blend_factor<class_RDPipelineColorBlendStateAttachment_property_src_alpha_blend_factor>` | ``0``     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>`       | :ref:`src_color_blend_factor<class_RDPipelineColorBlendStateAttachment_property_src_color_blend_factor>` | ``0``     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`write_a<class_RDPipelineColorBlendStateAttachment_property_write_a>`                               | ``true``  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`write_b<class_RDPipelineColorBlendStateAttachment_property_write_b>`                               | ``true``  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`write_g<class_RDPipelineColorBlendStateAttachment_property_write_g>`                               | ``true``  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                    | :ref:`write_r<class_RDPipelineColorBlendStateAttachment_property_write_r>`                               | ``true``  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+-----------+

Methods
-------

+------+--------------------------------------------------------------------------------------------+
| void | :ref:`set_as_mix<class_RDPipelineColorBlendStateAttachment_method_set_as_mix>` **(** **)** |
+------+--------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_RDPipelineColorBlendStateAttachment_property_alpha_blend_op:

- :ref:`BlendOperation<enum_RenderingDevice_BlendOperation>` **alpha_blend_op**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_alpha_blend_op(value) |
+-----------+---------------------------+
| *Getter*  | get_alpha_blend_op()      |
+-----------+---------------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_color_blend_op:

- :ref:`BlendOperation<enum_RenderingDevice_BlendOperation>` **color_blend_op**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_color_blend_op(value) |
+-----------+---------------------------+
| *Getter*  | get_color_blend_op()      |
+-----------+---------------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_dst_alpha_blend_factor:

- :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>` **dst_alpha_blend_factor**

+-----------+-----------------------------------+
| *Default* | ``0``                             |
+-----------+-----------------------------------+
| *Setter*  | set_dst_alpha_blend_factor(value) |
+-----------+-----------------------------------+
| *Getter*  | get_dst_alpha_blend_factor()      |
+-----------+-----------------------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_dst_color_blend_factor:

- :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>` **dst_color_blend_factor**

+-----------+-----------------------------------+
| *Default* | ``0``                             |
+-----------+-----------------------------------+
| *Setter*  | set_dst_color_blend_factor(value) |
+-----------+-----------------------------------+
| *Getter*  | get_dst_color_blend_factor()      |
+-----------+-----------------------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_enable_blend:

- :ref:`bool<class_bool>` **enable_blend**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_enable_blend(value) |
+-----------+-------------------------+
| *Getter*  | get_enable_blend()      |
+-----------+-------------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_src_alpha_blend_factor:

- :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>` **src_alpha_blend_factor**

+-----------+-----------------------------------+
| *Default* | ``0``                             |
+-----------+-----------------------------------+
| *Setter*  | set_src_alpha_blend_factor(value) |
+-----------+-----------------------------------+
| *Getter*  | get_src_alpha_blend_factor()      |
+-----------+-----------------------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_src_color_blend_factor:

- :ref:`BlendFactor<enum_RenderingDevice_BlendFactor>` **src_color_blend_factor**

+-----------+-----------------------------------+
| *Default* | ``0``                             |
+-----------+-----------------------------------+
| *Setter*  | set_src_color_blend_factor(value) |
+-----------+-----------------------------------+
| *Getter*  | get_src_color_blend_factor()      |
+-----------+-----------------------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_write_a:

- :ref:`bool<class_bool>` **write_a**

+-----------+--------------------+
| *Default* | ``true``           |
+-----------+--------------------+
| *Setter*  | set_write_a(value) |
+-----------+--------------------+
| *Getter*  | get_write_a()      |
+-----------+--------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_write_b:

- :ref:`bool<class_bool>` **write_b**

+-----------+--------------------+
| *Default* | ``true``           |
+-----------+--------------------+
| *Setter*  | set_write_b(value) |
+-----------+--------------------+
| *Getter*  | get_write_b()      |
+-----------+--------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_write_g:

- :ref:`bool<class_bool>` **write_g**

+-----------+--------------------+
| *Default* | ``true``           |
+-----------+--------------------+
| *Setter*  | set_write_g(value) |
+-----------+--------------------+
| *Getter*  | get_write_g()      |
+-----------+--------------------+

----

.. _class_RDPipelineColorBlendStateAttachment_property_write_r:

- :ref:`bool<class_bool>` **write_r**

+-----------+--------------------+
| *Default* | ``true``           |
+-----------+--------------------+
| *Setter*  | set_write_r(value) |
+-----------+--------------------+
| *Getter*  | get_write_r()      |
+-----------+--------------------+

Method Descriptions
-------------------

.. _class_RDPipelineColorBlendStateAttachment_method_set_as_mix:

- void **set_as_mix** **(** **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
