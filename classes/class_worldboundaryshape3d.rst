:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the WorldBoundaryShape3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WorldBoundaryShape3D:

WorldBoundaryShape3D
====================

**Inherits:** :ref:`Shape3D<class_Shape3D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

World boundary shape for 3D collisions.

Description
-----------

World boundary shape for 3D collisions. It works like an infinite plane and will not allow any physics body to go to the negative side. Note that the :ref:`Plane<class_Plane>`'s normal matters; anything "below" the plane will collide with it. If the ``WorldBoundaryShape3D`` is used in a :ref:`PhysicsBody3D<class_PhysicsBody3D>`, it will cause colliding objects placed "below" it to teleport "above" the plane.

Properties
----------

+---------------------------+---------------------------------------------------------+-----------------------+
| :ref:`Plane<class_Plane>` | :ref:`plane<class_WorldBoundaryShape3D_property_plane>` | ``Plane(0, 1, 0, 0)`` |
+---------------------------+---------------------------------------------------------+-----------------------+

Property Descriptions
---------------------

.. _class_WorldBoundaryShape3D_property_plane:

- :ref:`Plane<class_Plane>` **plane**

+-----------+-----------------------+
| *Default* | ``Plane(0, 1, 0, 0)`` |
+-----------+-----------------------+
| *Setter*  | set_plane(value)      |
+-----------+-----------------------+
| *Getter*  | get_plane()           |
+-----------+-----------------------+

The :ref:`Plane<class_Plane>` used by the ``WorldBoundaryShape3D`` for collision.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
