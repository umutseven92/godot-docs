:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Bone2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Bone2D:

Bone2D
======

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Joint used with :ref:`Skeleton2D<class_Skeleton2D>` to control and animate other nodes.

Description
-----------

Use a hierarchy of ``Bone2D`` bound to a :ref:`Skeleton2D<class_Skeleton2D>` to control, and animate other :ref:`Node2D<class_Node2D>` nodes.

You can use ``Bone2D`` and ``Skeleton2D`` nodes to animate 2D meshes created with the Polygon 2D UV editor.

Each bone has a :ref:`rest<class_Bone2D_property_rest>` transform that you can reset to with :ref:`apply_rest<class_Bone2D_method_apply_rest>`. These rest poses are relative to the bone's parent.

If in the editor, you can set the rest pose of an entire skeleton using a menu option, from the code, you need to iterate over the bones to set their individual rest poses.

Properties
----------

+---------------------------------------+-----------------------------------------+-----------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`rest<class_Bone2D_property_rest>` | ``Transform2D(0, 0, 0, 0, 0, 0)`` |
+---------------------------------------+-----------------------------------------+-----------------------------------+

Methods
-------

+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`apply_rest<class_Bone2D_method_apply_rest>` **(** **)**                                                                                        |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`get_autocalculate_length_and_angle<class_Bone2D_method_get_autocalculate_length_and_angle>` **(** **)** |const|                                |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`get_bone_angle<class_Bone2D_method_get_bone_angle>` **(** **)** |const|                                                                        |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`get_default_length<class_Bone2D_method_get_default_length>` **(** **)** |const|                                                                |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`get_index_in_skeleton<class_Bone2D_method_get_index_in_skeleton>` **(** **)** |const|                                                          |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`get_length<class_Bone2D_method_get_length>` **(** **)** |const|                                                                                |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_skeleton_rest<class_Bone2D_method_get_skeleton_rest>` **(** **)** |const|                                                                  |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_autocalculate_length_and_angle<class_Bone2D_method_set_autocalculate_length_and_angle>` **(** :ref:`bool<class_bool>` auto_calculate **)** |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_bone_angle<class_Bone2D_method_set_bone_angle>` **(** :ref:`float<class_float>` angle **)**                                                |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_default_length<class_Bone2D_method_set_default_length>` **(** :ref:`float<class_float>` default_length **)**                               |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_length<class_Bone2D_method_set_length>` **(** :ref:`float<class_float>` length **)**                                                       |
+---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_Bone2D_property_rest:

- :ref:`Transform2D<class_Transform2D>` **rest**

+-----------+-----------------------------------+
| *Default* | ``Transform2D(0, 0, 0, 0, 0, 0)`` |
+-----------+-----------------------------------+
| *Setter*  | set_rest(value)                   |
+-----------+-----------------------------------+
| *Getter*  | get_rest()                        |
+-----------+-----------------------------------+

Rest transform of the bone. You can reset the node's transforms to this value using :ref:`apply_rest<class_Bone2D_method_apply_rest>`.

Method Descriptions
-------------------

.. _class_Bone2D_method_apply_rest:

- void **apply_rest** **(** **)**

Stores the node's current transforms in :ref:`rest<class_Bone2D_property_rest>`.

----

.. _class_Bone2D_method_get_autocalculate_length_and_angle:

- :ref:`bool<class_bool>` **get_autocalculate_length_and_angle** **(** **)** |const|

Returns whether this ``Bone2D`` node is going to autocalculate its length and bone angle using its first ``Bone2D`` child node, if one exists. If there are no ``Bone2D`` children, then it cannot autocalculate these values and will print a warning.

----

.. _class_Bone2D_method_get_bone_angle:

- :ref:`float<class_float>` **get_bone_angle** **(** **)** |const|

Returns the angle of the bone in the ``Bone2D`` node.

**Note:** This is different from the ``Bone2D``'s rotation. The bone angle is the rotation of the bone shown by the ``Bone2D`` gizmo, and because ``Bone2D`` bones are based on positions, this can vary from the actual rotation of the ``Bone2D`` node.

----

.. _class_Bone2D_method_get_default_length:

- :ref:`float<class_float>` **get_default_length** **(** **)** |const|

Deprecated. Please use  ``get_length`` instead.

----

.. _class_Bone2D_method_get_index_in_skeleton:

- :ref:`int<class_int>` **get_index_in_skeleton** **(** **)** |const|

Returns the node's index as part of the entire skeleton. See :ref:`Skeleton2D<class_Skeleton2D>`.

----

.. _class_Bone2D_method_get_length:

- :ref:`float<class_float>` **get_length** **(** **)** |const|

Returns the length of the bone in the ``Bone2D`` node.

----

.. _class_Bone2D_method_get_skeleton_rest:

- :ref:`Transform2D<class_Transform2D>` **get_skeleton_rest** **(** **)** |const|

Returns the node's :ref:`rest<class_Bone2D_property_rest>` ``Transform2D`` if it doesn't have a parent, or its rest pose relative to its parent.

----

.. _class_Bone2D_method_set_autocalculate_length_and_angle:

- void **set_autocalculate_length_and_angle** **(** :ref:`bool<class_bool>` auto_calculate **)**

When set to ``true``, the ``Bone2D`` node will attempt to automatically calculate the bone angle and length using the first child ``Bone2D`` node, if one exists. If none exist, the ``Bone2D`` cannot automatically calculate these values and will print a warning.

----

.. _class_Bone2D_method_set_bone_angle:

- void **set_bone_angle** **(** :ref:`float<class_float>` angle **)**

Sets the bone angle for the ``Bone2D`` node. This is typically set to the rotation from the ``Bone2D`` node to a child ``Bone2D`` node.

**Note:** This is different from the ``Bone2D``'s rotation. The bone angle is the rotation of the bone shown by the ``Bone2D`` gizmo, and because ``Bone2D`` bones are based on positions, this can vary from the actual rotation of the ``Bone2D`` node.

----

.. _class_Bone2D_method_set_default_length:

- void **set_default_length** **(** :ref:`float<class_float>` default_length **)**

Deprecated. Please use ``set_length`` instead.

----

.. _class_Bone2D_method_set_length:

- void **set_length** **(** :ref:`float<class_float>` length **)**

Sets the length of the bone in the ``Bone2D`` node.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
