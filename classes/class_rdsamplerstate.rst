:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RDSamplerState.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RDSamplerState:

RDSamplerState
==============

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`



Properties
----------

+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                          | :ref:`anisotropy_max<class_RDSamplerState_property_anisotropy_max>`     | ``1.0``   |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`SamplerBorderColor<enum_RenderingDevice_SamplerBorderColor>` | :ref:`border_color<class_RDSamplerState_property_border_color>`         | ``2``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`CompareOperator<enum_RenderingDevice_CompareOperator>`       | :ref:`compare_op<class_RDSamplerState_property_compare_op>`             | ``7``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                            | :ref:`enable_compare<class_RDSamplerState_property_enable_compare>`     | ``false`` |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                          | :ref:`lod_bias<class_RDSamplerState_property_lod_bias>`                 | ``0.0``   |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`SamplerFilter<enum_RenderingDevice_SamplerFilter>`           | :ref:`mag_filter<class_RDSamplerState_property_mag_filter>`             | ``0``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                          | :ref:`max_lod<class_RDSamplerState_property_max_lod>`                   | ``1e+20`` |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`SamplerFilter<enum_RenderingDevice_SamplerFilter>`           | :ref:`min_filter<class_RDSamplerState_property_min_filter>`             | ``0``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                          | :ref:`min_lod<class_RDSamplerState_property_min_lod>`                   | ``0.0``   |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`SamplerFilter<enum_RenderingDevice_SamplerFilter>`           | :ref:`mip_filter<class_RDSamplerState_property_mip_filter>`             | ``0``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`SamplerRepeatMode<enum_RenderingDevice_SamplerRepeatMode>`   | :ref:`repeat_u<class_RDSamplerState_property_repeat_u>`                 | ``2``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`SamplerRepeatMode<enum_RenderingDevice_SamplerRepeatMode>`   | :ref:`repeat_v<class_RDSamplerState_property_repeat_v>`                 | ``2``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`SamplerRepeatMode<enum_RenderingDevice_SamplerRepeatMode>`   | :ref:`repeat_w<class_RDSamplerState_property_repeat_w>`                 | ``2``     |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                            | :ref:`unnormalized_uvw<class_RDSamplerState_property_unnormalized_uvw>` | ``false`` |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                            | :ref:`use_anisotropy<class_RDSamplerState_property_use_anisotropy>`     | ``false`` |
+--------------------------------------------------------------------+-------------------------------------------------------------------------+-----------+

Property Descriptions
---------------------

.. _class_RDSamplerState_property_anisotropy_max:

- :ref:`float<class_float>` **anisotropy_max**

+-----------+---------------------------+
| *Default* | ``1.0``                   |
+-----------+---------------------------+
| *Setter*  | set_anisotropy_max(value) |
+-----------+---------------------------+
| *Getter*  | get_anisotropy_max()      |
+-----------+---------------------------+

----

.. _class_RDSamplerState_property_border_color:

- :ref:`SamplerBorderColor<enum_RenderingDevice_SamplerBorderColor>` **border_color**

+-----------+-------------------------+
| *Default* | ``2``                   |
+-----------+-------------------------+
| *Setter*  | set_border_color(value) |
+-----------+-------------------------+
| *Getter*  | get_border_color()      |
+-----------+-------------------------+

----

.. _class_RDSamplerState_property_compare_op:

- :ref:`CompareOperator<enum_RenderingDevice_CompareOperator>` **compare_op**

+-----------+-----------------------+
| *Default* | ``7``                 |
+-----------+-----------------------+
| *Setter*  | set_compare_op(value) |
+-----------+-----------------------+
| *Getter*  | get_compare_op()      |
+-----------+-----------------------+

----

.. _class_RDSamplerState_property_enable_compare:

- :ref:`bool<class_bool>` **enable_compare**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_enable_compare(value) |
+-----------+---------------------------+
| *Getter*  | get_enable_compare()      |
+-----------+---------------------------+

----

.. _class_RDSamplerState_property_lod_bias:

- :ref:`float<class_float>` **lod_bias**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_lod_bias(value) |
+-----------+---------------------+
| *Getter*  | get_lod_bias()      |
+-----------+---------------------+

----

.. _class_RDSamplerState_property_mag_filter:

- :ref:`SamplerFilter<enum_RenderingDevice_SamplerFilter>` **mag_filter**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_mag_filter(value) |
+-----------+-----------------------+
| *Getter*  | get_mag_filter()      |
+-----------+-----------------------+

----

.. _class_RDSamplerState_property_max_lod:

- :ref:`float<class_float>` **max_lod**

+-----------+--------------------+
| *Default* | ``1e+20``          |
+-----------+--------------------+
| *Setter*  | set_max_lod(value) |
+-----------+--------------------+
| *Getter*  | get_max_lod()      |
+-----------+--------------------+

----

.. _class_RDSamplerState_property_min_filter:

- :ref:`SamplerFilter<enum_RenderingDevice_SamplerFilter>` **min_filter**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_min_filter(value) |
+-----------+-----------------------+
| *Getter*  | get_min_filter()      |
+-----------+-----------------------+

----

.. _class_RDSamplerState_property_min_lod:

- :ref:`float<class_float>` **min_lod**

+-----------+--------------------+
| *Default* | ``0.0``            |
+-----------+--------------------+
| *Setter*  | set_min_lod(value) |
+-----------+--------------------+
| *Getter*  | get_min_lod()      |
+-----------+--------------------+

----

.. _class_RDSamplerState_property_mip_filter:

- :ref:`SamplerFilter<enum_RenderingDevice_SamplerFilter>` **mip_filter**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_mip_filter(value) |
+-----------+-----------------------+
| *Getter*  | get_mip_filter()      |
+-----------+-----------------------+

----

.. _class_RDSamplerState_property_repeat_u:

- :ref:`SamplerRepeatMode<enum_RenderingDevice_SamplerRepeatMode>` **repeat_u**

+-----------+---------------------+
| *Default* | ``2``               |
+-----------+---------------------+
| *Setter*  | set_repeat_u(value) |
+-----------+---------------------+
| *Getter*  | get_repeat_u()      |
+-----------+---------------------+

----

.. _class_RDSamplerState_property_repeat_v:

- :ref:`SamplerRepeatMode<enum_RenderingDevice_SamplerRepeatMode>` **repeat_v**

+-----------+---------------------+
| *Default* | ``2``               |
+-----------+---------------------+
| *Setter*  | set_repeat_v(value) |
+-----------+---------------------+
| *Getter*  | get_repeat_v()      |
+-----------+---------------------+

----

.. _class_RDSamplerState_property_repeat_w:

- :ref:`SamplerRepeatMode<enum_RenderingDevice_SamplerRepeatMode>` **repeat_w**

+-----------+---------------------+
| *Default* | ``2``               |
+-----------+---------------------+
| *Setter*  | set_repeat_w(value) |
+-----------+---------------------+
| *Getter*  | get_repeat_w()      |
+-----------+---------------------+

----

.. _class_RDSamplerState_property_unnormalized_uvw:

- :ref:`bool<class_bool>` **unnormalized_uvw**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_unnormalized_uvw(value) |
+-----------+-----------------------------+
| *Getter*  | get_unnormalized_uvw()      |
+-----------+-----------------------------+

----

.. _class_RDSamplerState_property_use_anisotropy:

- :ref:`bool<class_bool>` **use_anisotropy**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_use_anisotropy(value) |
+-----------+---------------------------+
| *Getter*  | get_use_anisotropy()      |
+-----------+---------------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
