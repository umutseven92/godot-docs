:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CodeEdit.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CodeEdit:

CodeEdit
========

**Inherits:** :ref:`TextEdit<class_TextEdit>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Multiline text control intended for editing code.

Description
-----------

CodeEdit is a specialised :ref:`TextEdit<class_TextEdit>` designed for editing plain text code files. It contains a bunch of features commonly found in code editors such as line numbers, line folding, code completion, indent management and string / comment management.

**Note:** By default ``CodeEdit`` always use left-to-right text direction to correctly display source code.

Properties
----------

+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`auto_brace_completion_enabled<class_CodeEdit_property_auto_brace_completion_enabled>`                       | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`auto_brace_completion_highlight_matching<class_CodeEdit_property_auto_brace_completion_highlight_matching>` | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`                  | :ref:`auto_brace_completion_pairs<class_CodeEdit_property_auto_brace_completion_pairs>`                           | ``{"\"": "\"","'": "'","(": ")","[": "]","{": "}"}`` |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`code_completion_enabled<class_CodeEdit_property_code_completion_enabled>`                                   | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`String[]<class_String>`                        | :ref:`code_completion_prefixes<class_CodeEdit_property_code_completion_prefixes>`                                 | ``[]``                                               |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`String[]<class_String>`                        | :ref:`delimiter_comments<class_CodeEdit_property_delimiter_comments>`                                             | ``[]``                                               |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`String[]<class_String>`                        | :ref:`delimiter_strings<class_CodeEdit_property_delimiter_strings>`                                               | ``["' '", "\" \""]``                                 |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`gutters_draw_bookmarks<class_CodeEdit_property_gutters_draw_bookmarks>`                                     | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`gutters_draw_breakpoints_gutter<class_CodeEdit_property_gutters_draw_breakpoints_gutter>`                   | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`gutters_draw_executing_lines<class_CodeEdit_property_gutters_draw_executing_lines>`                         | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`gutters_draw_fold_gutter<class_CodeEdit_property_gutters_draw_fold_gutter>`                                 | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`gutters_draw_line_numbers<class_CodeEdit_property_gutters_draw_line_numbers>`                               | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`gutters_zero_pad_line_numbers<class_CodeEdit_property_gutters_zero_pad_line_numbers>`                       | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`indent_automatic<class_CodeEdit_property_indent_automatic>`                                                 | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`String[]<class_String>`                        | :ref:`indent_automatic_prefixes<class_CodeEdit_property_indent_automatic_prefixes>`                               | ``["(", ":", "[", "{"]``                             |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`int<class_int>`                                | :ref:`indent_size<class_CodeEdit_property_indent_size>`                                                           | ``4``                                                |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`indent_use_spaces<class_CodeEdit_property_indent_use_spaces>`                                               | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`LayoutDirection<enum_Control_LayoutDirection>` | layout_direction                                                                                                  | ``2`` *(parent override)*                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`line_folding<class_CodeEdit_property_line_folding>`                                                         | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`int[]<class_int>`                              | :ref:`line_length_guidelines<class_CodeEdit_property_line_length_guidelines>`                                     | ``[]``                                               |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`Array<class_Array>`                            | structured_text_bidi_override_options                                                                             | ``[]`` *(parent override)*                           |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`bool<class_bool>`                              | :ref:`symbol_lookup_on_click<class_CodeEdit_property_symbol_lookup_on_click>`                                     | ``false``                                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`TextDirection<enum_Control_TextDirection>`     | text_direction                                                                                                    | ``1`` *(parent override)*                            |
+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------------------------------------------+

Methods
-------

+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`_confirm_code_completion<class_CodeEdit_method__confirm_code_completion>` **(** :ref:`bool<class_bool>` replace **)** |virtual|                                                                                                                                                                                                                                                         |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`             | :ref:`_filter_code_completion_candidates<class_CodeEdit_method__filter_code_completion_candidates>` **(** :ref:`Dictionary[]<class_Dictionary>` candidates **)** |virtual| |const|                                                                                                                                                                                                            |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`_request_code_completion<class_CodeEdit_method__request_code_completion>` **(** :ref:`bool<class_bool>` force **)** |virtual|                                                                                                                                                                                                                                                           |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`add_auto_brace_completion_pair<class_CodeEdit_method_add_auto_brace_completion_pair>` **(** :ref:`String<class_String>` start_key, :ref:`String<class_String>` end_key **)**                                                                                                                                                                                                            |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`add_code_completion_option<class_CodeEdit_method_add_code_completion_option>` **(** :ref:`CodeCompletionKind<enum_CodeEdit_CodeCompletionKind>` type, :ref:`String<class_String>` display_text, :ref:`String<class_String>` insert_text, :ref:`Color<class_Color>` text_color=Color(1, 1, 1, 1), :ref:`Resource<class_Resource>` icon=null, :ref:`Variant<class_Variant>` value=0 **)** |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`add_comment_delimiter<class_CodeEdit_method_add_comment_delimiter>` **(** :ref:`String<class_String>` start_key, :ref:`String<class_String>` end_key, :ref:`bool<class_bool>` line_only=false **)**                                                                                                                                                                                     |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`add_string_delimiter<class_CodeEdit_method_add_string_delimiter>` **(** :ref:`String<class_String>` start_key, :ref:`String<class_String>` end_key, :ref:`bool<class_bool>` line_only=false **)**                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`can_fold_line<class_CodeEdit_method_can_fold_line>` **(** :ref:`int<class_int>` line **)** |const|                                                                                                                                                                                                                                                                                      |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`cancel_code_completion<class_CodeEdit_method_cancel_code_completion>` **(** **)**                                                                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`clear_bookmarked_lines<class_CodeEdit_method_clear_bookmarked_lines>` **(** **)**                                                                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`clear_breakpointed_lines<class_CodeEdit_method_clear_breakpointed_lines>` **(** **)**                                                                                                                                                                                                                                                                                                   |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`clear_comment_delimiters<class_CodeEdit_method_clear_comment_delimiters>` **(** **)**                                                                                                                                                                                                                                                                                                   |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`clear_executing_lines<class_CodeEdit_method_clear_executing_lines>` **(** **)**                                                                                                                                                                                                                                                                                                         |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`clear_string_delimiters<class_CodeEdit_method_clear_string_delimiters>` **(** **)**                                                                                                                                                                                                                                                                                                     |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`confirm_code_completion<class_CodeEdit_method_confirm_code_completion>` **(** :ref:`bool<class_bool>` replace=false **)**                                                                                                                                                                                                                                                               |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`do_indent<class_CodeEdit_method_do_indent>` **(** **)**                                                                                                                                                                                                                                                                                                                                 |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`do_unindent<class_CodeEdit_method_do_unindent>` **(** **)**                                                                                                                                                                                                                                                                                                                             |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`fold_all_lines<class_CodeEdit_method_fold_all_lines>` **(** **)**                                                                                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`fold_line<class_CodeEdit_method_fold_line>` **(** :ref:`int<class_int>` line **)**                                                                                                                                                                                                                                                                                                      |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`           | :ref:`get_auto_brace_completion_close_key<class_CodeEdit_method_get_auto_brace_completion_close_key>` **(** :ref:`String<class_String>` open_key **)** |const|                                                                                                                                                                                                                                |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`             | :ref:`get_bookmarked_lines<class_CodeEdit_method_get_bookmarked_lines>` **(** **)** |const|                                                                                                                                                                                                                                                                                                   |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`             | :ref:`get_breakpointed_lines<class_CodeEdit_method_get_breakpointed_lines>` **(** **)** |const|                                                                                                                                                                                                                                                                                               |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`   | :ref:`get_code_completion_option<class_CodeEdit_method_get_code_completion_option>` **(** :ref:`int<class_int>` index **)** |const|                                                                                                                                                                                                                                                           |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary[]<class_Dictionary>` | :ref:`get_code_completion_options<class_CodeEdit_method_get_code_completion_options>` **(** **)** |const|                                                                                                                                                                                                                                                                                     |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`get_code_completion_selected_index<class_CodeEdit_method_get_code_completion_selected_index>` **(** **)** |const|                                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`           | :ref:`get_delimiter_end_key<class_CodeEdit_method_get_delimiter_end_key>` **(** :ref:`int<class_int>` delimiter_index **)** |const|                                                                                                                                                                                                                                                           |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`get_delimiter_end_position<class_CodeEdit_method_get_delimiter_end_position>` **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column **)** |const|                                                                                                                                                                                                                              |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`           | :ref:`get_delimiter_start_key<class_CodeEdit_method_get_delimiter_start_key>` **(** :ref:`int<class_int>` delimiter_index **)** |const|                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`get_delimiter_start_position<class_CodeEdit_method_get_delimiter_start_position>` **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column **)** |const|                                                                                                                                                                                                                          |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`             | :ref:`get_executing_lines<class_CodeEdit_method_get_executing_lines>` **(** **)** |const|                                                                                                                                                                                                                                                                                                     |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int[]<class_int>`               | :ref:`get_folded_lines<class_CodeEdit_method_get_folded_lines>` **(** **)** |const|                                                                                                                                                                                                                                                                                                           |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`           | :ref:`get_text_for_code_completion<class_CodeEdit_method_get_text_for_code_completion>` **(** **)** |const|                                                                                                                                                                                                                                                                                   |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`           | :ref:`get_text_for_symbol_lookup<class_CodeEdit_method_get_text_for_symbol_lookup>` **(** **)**                                                                                                                                                                                                                                                                                               |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`has_auto_brace_completion_close_key<class_CodeEdit_method_has_auto_brace_completion_close_key>` **(** :ref:`String<class_String>` close_key **)** |const|                                                                                                                                                                                                                               |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`has_auto_brace_completion_open_key<class_CodeEdit_method_has_auto_brace_completion_open_key>` **(** :ref:`String<class_String>` open_key **)** |const|                                                                                                                                                                                                                                  |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`has_comment_delimiter<class_CodeEdit_method_has_comment_delimiter>` **(** :ref:`String<class_String>` start_key **)** |const|                                                                                                                                                                                                                                                           |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`has_string_delimiter<class_CodeEdit_method_has_string_delimiter>` **(** :ref:`String<class_String>` start_key **)** |const|                                                                                                                                                                                                                                                             |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`indent_lines<class_CodeEdit_method_indent_lines>` **(** **)**                                                                                                                                                                                                                                                                                                                           |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`is_in_comment<class_CodeEdit_method_is_in_comment>` **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column=-1 **)** |const|                                                                                                                                                                                                                                                     |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`is_in_string<class_CodeEdit_method_is_in_string>` **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column=-1 **)** |const|                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_line_bookmarked<class_CodeEdit_method_is_line_bookmarked>` **(** :ref:`int<class_int>` line **)** |const|                                                                                                                                                                                                                                                                            |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_line_breakpointed<class_CodeEdit_method_is_line_breakpointed>` **(** :ref:`int<class_int>` line **)** |const|                                                                                                                                                                                                                                                                        |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_line_executing<class_CodeEdit_method_is_line_executing>` **(** :ref:`int<class_int>` line **)** |const|                                                                                                                                                                                                                                                                              |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_line_folded<class_CodeEdit_method_is_line_folded>` **(** :ref:`int<class_int>` line **)** |const|                                                                                                                                                                                                                                                                                    |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`remove_comment_delimiter<class_CodeEdit_method_remove_comment_delimiter>` **(** :ref:`String<class_String>` start_key **)**                                                                                                                                                                                                                                                             |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`remove_string_delimiter<class_CodeEdit_method_remove_string_delimiter>` **(** :ref:`String<class_String>` start_key **)**                                                                                                                                                                                                                                                               |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`request_code_completion<class_CodeEdit_method_request_code_completion>` **(** :ref:`bool<class_bool>` force=false **)**                                                                                                                                                                                                                                                                 |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_code_completion_selected_index<class_CodeEdit_method_set_code_completion_selected_index>` **(** :ref:`int<class_int>` index **)**                                                                                                                                                                                                                                                   |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_code_hint<class_CodeEdit_method_set_code_hint>` **(** :ref:`String<class_String>` code_hint **)**                                                                                                                                                                                                                                                                                   |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_code_hint_draw_below<class_CodeEdit_method_set_code_hint_draw_below>` **(** :ref:`bool<class_bool>` draw_below **)**                                                                                                                                                                                                                                                                |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_line_as_bookmarked<class_CodeEdit_method_set_line_as_bookmarked>` **(** :ref:`int<class_int>` line, :ref:`bool<class_bool>` bookmarked **)**                                                                                                                                                                                                                                        |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_line_as_breakpoint<class_CodeEdit_method_set_line_as_breakpoint>` **(** :ref:`int<class_int>` line, :ref:`bool<class_bool>` breakpointed **)**                                                                                                                                                                                                                                      |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_line_as_executing<class_CodeEdit_method_set_line_as_executing>` **(** :ref:`int<class_int>` line, :ref:`bool<class_bool>` executing **)**                                                                                                                                                                                                                                           |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_symbol_lookup_word_as_valid<class_CodeEdit_method_set_symbol_lookup_word_as_valid>` **(** :ref:`bool<class_bool>` valid **)**                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`toggle_foldable_line<class_CodeEdit_method_toggle_foldable_line>` **(** :ref:`int<class_int>` line **)**                                                                                                                                                                                                                                                                                |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`unfold_all_lines<class_CodeEdit_method_unfold_all_lines>` **(** **)**                                                                                                                                                                                                                                                                                                                   |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`unfold_line<class_CodeEdit_method_unfold_line>` **(** :ref:`int<class_int>` line **)**                                                                                                                                                                                                                                                                                                  |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`unindent_lines<class_CodeEdit_method_unindent_lines>` **(** **)**                                                                                                                                                                                                                                                                                                                       |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`update_code_completion_options<class_CodeEdit_method_update_code_completion_options>` **(** :ref:`bool<class_bool>` force **)**                                                                                                                                                                                                                                                         |
+---------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Theme Properties
----------------

+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`background_color<class_CodeEdit_theme_color_background_color>`                       | ``Color(0, 0, 0, 0)``             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`bookmark<class_CodeEdit_theme_icon_bookmark>`                                        |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`bookmark_color<class_CodeEdit_theme_color_bookmark_color>`                           | ``Color(0.5, 0.64, 1, 0.8)``      |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`brace_mismatch_color<class_CodeEdit_theme_color_brace_mismatch_color>`               | ``Color(1, 0.2, 0.2, 1)``         |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`breakpoint<class_CodeEdit_theme_icon_breakpoint>`                                    |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`breakpoint_color<class_CodeEdit_theme_color_breakpoint_color>`                       | ``Color(0.9, 0.29, 0.3, 1)``      |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`can_fold<class_CodeEdit_theme_icon_can_fold>`                                        |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`caret_background_color<class_CodeEdit_theme_color_caret_background_color>`           | ``Color(0, 0, 0, 1)``             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`caret_color<class_CodeEdit_theme_color_caret_color>`                                 | ``Color(0.88, 0.88, 0.88, 1)``    |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`code_folding_color<class_CodeEdit_theme_color_code_folding_color>`                   | ``Color(0.8, 0.8, 0.8, 0.8)``     |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`StyleBox<class_StyleBox>`   | :ref:`completion<class_CodeEdit_theme_style_completion>`                                   |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`completion_background_color<class_CodeEdit_theme_color_completion_background_color>` | ``Color(0.17, 0.16, 0.2, 1)``     |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`completion_existing_color<class_CodeEdit_theme_color_completion_existing_color>`     | ``Color(0.87, 0.87, 0.87, 0.13)`` |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`completion_font_color<class_CodeEdit_theme_color_completion_font_color>`             | ``Color(0.67, 0.67, 0.67, 1)``    |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`int<class_int>`             | :ref:`completion_lines<class_CodeEdit_theme_constant_completion_lines>`                    | ``7``                             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`int<class_int>`             | :ref:`completion_max_width<class_CodeEdit_theme_constant_completion_max_width>`            | ``50``                            |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`completion_scroll_color<class_CodeEdit_theme_color_completion_scroll_color>`         | ``Color(1, 1, 1, 1)``             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`int<class_int>`             | :ref:`completion_scroll_width<class_CodeEdit_theme_constant_completion_scroll_width>`      | ``3``                             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`completion_selected_color<class_CodeEdit_theme_color_completion_selected_color>`     | ``Color(0.26, 0.26, 0.27, 1)``    |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`current_line_color<class_CodeEdit_theme_color_current_line_color>`                   | ``Color(0.25, 0.25, 0.26, 0.8)``  |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`executing_line<class_CodeEdit_theme_icon_executing_line>`                            |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`executing_line_color<class_CodeEdit_theme_color_executing_line_color>`               | ``Color(0.98, 0.89, 0.27, 1)``    |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`StyleBox<class_StyleBox>`   | :ref:`focus<class_CodeEdit_theme_style_focus>`                                             |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`folded<class_CodeEdit_theme_icon_folded>`                                            |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`folded_eol_icon<class_CodeEdit_theme_icon_folded_eol_icon>`                          |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Font<class_Font>`           | :ref:`font<class_CodeEdit_theme_font_font>`                                                |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`font_color<class_CodeEdit_theme_color_font_color>`                                   | ``Color(0.88, 0.88, 0.88, 1)``    |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`font_outline_color<class_CodeEdit_theme_color_font_outline_color>`                   | ``Color(1, 1, 1, 1)``             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`font_readonly_color<class_CodeEdit_theme_color_font_readonly_color>`                 | ``Color(0.88, 0.88, 0.88, 0.5)``  |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`font_selected_color<class_CodeEdit_theme_color_font_selected_color>`                 | ``Color(0, 0, 0, 1)``             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`int<class_int>`             | :ref:`font_size<class_CodeEdit_theme_font_size_font_size>`                                 |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`line_length_guideline_color<class_CodeEdit_theme_color_line_length_guideline_color>` | ``Color(0.3, 0.5, 0.8, 0.1)``     |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`line_number_color<class_CodeEdit_theme_color_line_number_color>`                     | ``Color(0.67, 0.67, 0.67, 0.4)``  |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`int<class_int>`             | :ref:`line_spacing<class_CodeEdit_theme_constant_line_spacing>`                            | ``4``                             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`StyleBox<class_StyleBox>`   | :ref:`normal<class_CodeEdit_theme_style_normal>`                                           |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`int<class_int>`             | :ref:`outline_size<class_CodeEdit_theme_constant_outline_size>`                            | ``0``                             |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`StyleBox<class_StyleBox>`   | :ref:`read_only<class_CodeEdit_theme_style_read_only>`                                     |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`search_result_border_color<class_CodeEdit_theme_color_search_result_border_color>`   | ``Color(0.3, 0.3, 0.3, 0.4)``     |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`search_result_color<class_CodeEdit_theme_color_search_result_color>`                 | ``Color(0.3, 0.3, 0.3, 1)``       |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`selection_color<class_CodeEdit_theme_color_selection_color>`                         | ``Color(0.49, 0.49, 0.49, 1)``    |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`space<class_CodeEdit_theme_icon_space>`                                              |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Texture2D<class_Texture2D>` | :ref:`tab<class_CodeEdit_theme_icon_tab>`                                                  |                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+
| :ref:`Color<class_Color>`         | :ref:`word_highlighted_color<class_CodeEdit_theme_color_word_highlighted_color>`           | ``Color(0.8, 0.9, 0.9, 0.15)``    |
+-----------------------------------+--------------------------------------------------------------------------------------------+-----------------------------------+

Signals
-------

.. _class_CodeEdit_signal_breakpoint_toggled:

- **breakpoint_toggled** **(** :ref:`int<class_int>` line **)**

Emitted when a breakpoint is added or removed from a line. If the line is moved via backspace a removed is emitted at the old line.

----

.. _class_CodeEdit_signal_request_code_completion:

- **request_code_completion** **(** **)**

Emitted when the user requests code completion.

----

.. _class_CodeEdit_signal_symbol_lookup:

- **symbol_lookup** **(** :ref:`String<class_String>` symbol, :ref:`int<class_int>` line, :ref:`int<class_int>` column **)**

Emitted when the user has clicked on a valid symbol.

----

.. _class_CodeEdit_signal_symbol_validate:

- **symbol_validate** **(** :ref:`String<class_String>` symbol **)**

Emitted when the user hovers over a symbol. The symbol should be validated and responded to, by calling :ref:`set_symbol_lookup_word_as_valid<class_CodeEdit_method_set_symbol_lookup_word_as_valid>`.

Enumerations
------------

.. _enum_CodeEdit_CodeCompletionKind:

.. _class_CodeEdit_constant_KIND_CLASS:

.. _class_CodeEdit_constant_KIND_FUNCTION:

.. _class_CodeEdit_constant_KIND_SIGNAL:

.. _class_CodeEdit_constant_KIND_VARIABLE:

.. _class_CodeEdit_constant_KIND_MEMBER:

.. _class_CodeEdit_constant_KIND_ENUM:

.. _class_CodeEdit_constant_KIND_CONSTANT:

.. _class_CodeEdit_constant_KIND_NODE_PATH:

.. _class_CodeEdit_constant_KIND_FILE_PATH:

.. _class_CodeEdit_constant_KIND_PLAIN_TEXT:

enum **CodeCompletionKind**:

- **KIND_CLASS** = **0** --- Marks the option as a class.

- **KIND_FUNCTION** = **1** --- Marks the option as a function.

- **KIND_SIGNAL** = **2** --- Marks the option as a Godot signal.

- **KIND_VARIABLE** = **3** --- Marks the option as a variable.

- **KIND_MEMBER** = **4** --- Marks the option as a member.

- **KIND_ENUM** = **5** --- Marks the option as a enum entry.

- **KIND_CONSTANT** = **6** --- Marks the option as a constant.

- **KIND_NODE_PATH** = **7** --- Marks the option as a Godot node path.

- **KIND_FILE_PATH** = **8** --- Marks the option as a file path.

- **KIND_PLAIN_TEXT** = **9** --- Marks the option as unclassified or plain text.

Property Descriptions
---------------------

.. _class_CodeEdit_property_auto_brace_completion_enabled:

- :ref:`bool<class_bool>` **auto_brace_completion_enabled**

+-----------+------------------------------------------+
| *Default* | ``false``                                |
+-----------+------------------------------------------+
| *Setter*  | set_auto_brace_completion_enabled(value) |
+-----------+------------------------------------------+
| *Getter*  | is_auto_brace_completion_enabled()       |
+-----------+------------------------------------------+

Sets whether brace pairs should be autocompleted.

----

.. _class_CodeEdit_property_auto_brace_completion_highlight_matching:

- :ref:`bool<class_bool>` **auto_brace_completion_highlight_matching**

+-----------+----------------------------------------------+
| *Default* | ``false``                                    |
+-----------+----------------------------------------------+
| *Setter*  | set_highlight_matching_braces_enabled(value) |
+-----------+----------------------------------------------+
| *Getter*  | is_highlight_matching_braces_enabled()       |
+-----------+----------------------------------------------+

Highlight mismatching brace pairs.

----

.. _class_CodeEdit_property_auto_brace_completion_pairs:

- :ref:`Dictionary<class_Dictionary>` **auto_brace_completion_pairs**

+-----------+------------------------------------------------------+
| *Default* | ``{"\"": "\"","'": "'","(": ")","[": "]","{": "}"}`` |
+-----------+------------------------------------------------------+
| *Setter*  | set_auto_brace_completion_pairs(value)               |
+-----------+------------------------------------------------------+
| *Getter*  | get_auto_brace_completion_pairs()                    |
+-----------+------------------------------------------------------+

Sets the brace pairs to be autocompleted.

----

.. _class_CodeEdit_property_code_completion_enabled:

- :ref:`bool<class_bool>` **code_completion_enabled**

+-----------+------------------------------------+
| *Default* | ``false``                          |
+-----------+------------------------------------+
| *Setter*  | set_code_completion_enabled(value) |
+-----------+------------------------------------+
| *Getter*  | is_code_completion_enabled()       |
+-----------+------------------------------------+

Sets whether code completion is allowed.

----

.. _class_CodeEdit_property_code_completion_prefixes:

- :ref:`String[]<class_String>` **code_completion_prefixes**

+-----------+-------------------------------------+
| *Default* | ``[]``                              |
+-----------+-------------------------------------+
| *Setter*  | set_code_completion_prefixes(value) |
+-----------+-------------------------------------+
| *Getter*  | get_code_comletion_prefixes()       |
+-----------+-------------------------------------+

Sets prefixes that will trigger code completion.

----

.. _class_CodeEdit_property_delimiter_comments:

- :ref:`String[]<class_String>` **delimiter_comments**

+-----------+-------------------------------+
| *Default* | ``[]``                        |
+-----------+-------------------------------+
| *Setter*  | set_comment_delimiters(value) |
+-----------+-------------------------------+
| *Getter*  | get_comment_delimiters()      |
+-----------+-------------------------------+

Sets the comment delimiters. All existing comment delimiters will be removed.

----

.. _class_CodeEdit_property_delimiter_strings:

- :ref:`String[]<class_String>` **delimiter_strings**

+-----------+------------------------------+
| *Default* | ``["' '", "\" \""]``         |
+-----------+------------------------------+
| *Setter*  | set_string_delimiters(value) |
+-----------+------------------------------+
| *Getter*  | get_string_delimiters()      |
+-----------+------------------------------+

Sets the string delimiters. All existing string delimiters will be removed.

----

.. _class_CodeEdit_property_gutters_draw_bookmarks:

- :ref:`bool<class_bool>` **gutters_draw_bookmarks**

+-----------+----------------------------------+
| *Default* | ``false``                        |
+-----------+----------------------------------+
| *Setter*  | set_draw_bookmarks_gutter(value) |
+-----------+----------------------------------+
| *Getter*  | is_drawing_bookmarks_gutter()    |
+-----------+----------------------------------+

Sets if bookmarked should be drawn in the gutter. This gutter is shared with breakpoints and executing lines.

----

.. _class_CodeEdit_property_gutters_draw_breakpoints_gutter:

- :ref:`bool<class_bool>` **gutters_draw_breakpoints_gutter**

+-----------+------------------------------------+
| *Default* | ``false``                          |
+-----------+------------------------------------+
| *Setter*  | set_draw_breakpoints_gutter(value) |
+-----------+------------------------------------+
| *Getter*  | is_drawing_breakpoints_gutter()    |
+-----------+------------------------------------+

Sets if breakpoints should be drawn in the gutter. This gutter is shared with bookmarks and executing lines.

----

.. _class_CodeEdit_property_gutters_draw_executing_lines:

- :ref:`bool<class_bool>` **gutters_draw_executing_lines**

+-----------+----------------------------------------+
| *Default* | ``false``                              |
+-----------+----------------------------------------+
| *Setter*  | set_draw_executing_lines_gutter(value) |
+-----------+----------------------------------------+
| *Getter*  | is_drawing_executing_lines_gutter()    |
+-----------+----------------------------------------+

Sets if executing lines should be marked in the gutter. This gutter is shared with breakpoints and bookmarks lines.

----

.. _class_CodeEdit_property_gutters_draw_fold_gutter:

- :ref:`bool<class_bool>` **gutters_draw_fold_gutter**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_draw_fold_gutter(value) |
+-----------+-----------------------------+
| *Getter*  | is_drawing_fold_gutter()    |
+-----------+-----------------------------+

Sets if foldable lines icons should be drawn in the gutter.

----

.. _class_CodeEdit_property_gutters_draw_line_numbers:

- :ref:`bool<class_bool>` **gutters_draw_line_numbers**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_draw_line_numbers(value)   |
+-----------+--------------------------------+
| *Getter*  | is_draw_line_numbers_enabled() |
+-----------+--------------------------------+

Sets if line numbers should be drawn in the gutter.

----

.. _class_CodeEdit_property_gutters_zero_pad_line_numbers:

- :ref:`bool<class_bool>` **gutters_zero_pad_line_numbers**

+-----------+-------------------------------------+
| *Default* | ``false``                           |
+-----------+-------------------------------------+
| *Setter*  | set_line_numbers_zero_padded(value) |
+-----------+-------------------------------------+
| *Getter*  | is_line_numbers_zero_padded()       |
+-----------+-------------------------------------+

Sets if line numbers drawn in the gutter are zero padded.

----

.. _class_CodeEdit_property_indent_automatic:

- :ref:`bool<class_bool>` **indent_automatic**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_auto_indent_enabled(value) |
+-----------+--------------------------------+
| *Getter*  | is_auto_indent_enabled()       |
+-----------+--------------------------------+

Sets whether automatic indent are enabled, this will add an extra indent if a prefix or brace is found.

----

.. _class_CodeEdit_property_indent_automatic_prefixes:

- :ref:`String[]<class_String>` **indent_automatic_prefixes**

+-----------+---------------------------------+
| *Default* | ``["(", ":", "[", "{"]``        |
+-----------+---------------------------------+
| *Setter*  | set_auto_indent_prefixes(value) |
+-----------+---------------------------------+
| *Getter*  | get_auto_indent_prefixes()      |
+-----------+---------------------------------+

Prefixes to trigger an automatic indent.

----

.. _class_CodeEdit_property_indent_size:

- :ref:`int<class_int>` **indent_size**

+-----------+------------------------+
| *Default* | ``4``                  |
+-----------+------------------------+
| *Setter*  | set_indent_size(value) |
+-----------+------------------------+
| *Getter*  | get_indent_size()      |
+-----------+------------------------+

Size of tabs, if ``indent_use_spaces`` is enabled the amount of spaces to use.

----

.. _class_CodeEdit_property_indent_use_spaces:

- :ref:`bool<class_bool>` **indent_use_spaces**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_indent_using_spaces(value) |
+-----------+--------------------------------+
| *Getter*  | is_indent_using_spaces()       |
+-----------+--------------------------------+

Use spaces instead of tabs for indentation.

----

.. _class_CodeEdit_property_line_folding:

- :ref:`bool<class_bool>` **line_folding**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_line_folding_enabled(value) |
+-----------+---------------------------------+
| *Getter*  | is_line_folding_enabled()       |
+-----------+---------------------------------+

Sets whether line folding is allowed.

----

.. _class_CodeEdit_property_line_length_guidelines:

- :ref:`int[]<class_int>` **line_length_guidelines**

+-----------+-----------------------------------+
| *Default* | ``[]``                            |
+-----------+-----------------------------------+
| *Setter*  | set_line_length_guidelines(value) |
+-----------+-----------------------------------+
| *Getter*  | get_line_length_guidelines()      |
+-----------+-----------------------------------+

Draws vertical lines at the provided columns. The first entry is considered a main hard guideline and is draw more prominently

----

.. _class_CodeEdit_property_symbol_lookup_on_click:

- :ref:`bool<class_bool>` **symbol_lookup_on_click**

+-----------+-------------------------------------------+
| *Default* | ``false``                                 |
+-----------+-------------------------------------------+
| *Setter*  | set_symbol_lookup_on_click_enabled(value) |
+-----------+-------------------------------------------+
| *Getter*  | is_symbol_lookup_on_click_enabled()       |
+-----------+-------------------------------------------+

Set when a validated word from :ref:`symbol_validate<class_CodeEdit_signal_symbol_validate>` is clicked, the :ref:`symbol_lookup<class_CodeEdit_signal_symbol_lookup>` should be emitted.

Method Descriptions
-------------------

.. _class_CodeEdit_method__confirm_code_completion:

- void **_confirm_code_completion** **(** :ref:`bool<class_bool>` replace **)** |virtual|

Override this method to define how the selected entry should be inserted. If ``replace`` is true, any existing text should be replaced.

----

.. _class_CodeEdit_method__filter_code_completion_candidates:

- :ref:`Array<class_Array>` **_filter_code_completion_candidates** **(** :ref:`Dictionary[]<class_Dictionary>` candidates **)** |virtual| |const|

Override this method to define what items in ``candidates`` should be displayed.

Both ``candidates`` and the return is a :ref:`Array<class_Array>` of :ref:`Dictionary<class_Dictionary>`, see :ref:`get_code_completion_option<class_CodeEdit_method_get_code_completion_option>` for :ref:`Dictionary<class_Dictionary>` content.

----

.. _class_CodeEdit_method__request_code_completion:

- void **_request_code_completion** **(** :ref:`bool<class_bool>` force **)** |virtual|

Override this method to define what happens when the user requests code completion. If ``force`` is true, any checks should be bypassed.

----

.. _class_CodeEdit_method_add_auto_brace_completion_pair:

- void **add_auto_brace_completion_pair** **(** :ref:`String<class_String>` start_key, :ref:`String<class_String>` end_key **)**

Adds a brace pair.

Both the start and end keys must be symbols. Only the start key has to be unique.

----

.. _class_CodeEdit_method_add_code_completion_option:

- void **add_code_completion_option** **(** :ref:`CodeCompletionKind<enum_CodeEdit_CodeCompletionKind>` type, :ref:`String<class_String>` display_text, :ref:`String<class_String>` insert_text, :ref:`Color<class_Color>` text_color=Color(1, 1, 1, 1), :ref:`Resource<class_Resource>` icon=null, :ref:`Variant<class_Variant>` value=0 **)**

Submits an item to the queue of potential candidates for the autocomplete menu. Call :ref:`update_code_completion_options<class_CodeEdit_method_update_code_completion_options>` to update the list.

**Note:** This list will replace all current candidates.

----

.. _class_CodeEdit_method_add_comment_delimiter:

- void **add_comment_delimiter** **(** :ref:`String<class_String>` start_key, :ref:`String<class_String>` end_key, :ref:`bool<class_bool>` line_only=false **)**

Adds a comment delimiter.

Both the start and end keys must be symbols. Only the start key has to be unique.

Line only denotes if the region should continue until the end of the line or carry over on to the next line. If the end key is blank this is automatically set to ``true``.

----

.. _class_CodeEdit_method_add_string_delimiter:

- void **add_string_delimiter** **(** :ref:`String<class_String>` start_key, :ref:`String<class_String>` end_key, :ref:`bool<class_bool>` line_only=false **)**

Adds a string delimiter.

Both the start and end keys must be symbols. Only the start key has to be unique.

Line only denotes if the region should continue until the end of the line or carry over on to the next line. If the end key is blank this is automatically set to ``true``.

----

.. _class_CodeEdit_method_can_fold_line:

- :ref:`bool<class_bool>` **can_fold_line** **(** :ref:`int<class_int>` line **)** |const|

Returns if the given line is foldable, that is, it has indented lines right below it or a comment / string block.

----

.. _class_CodeEdit_method_cancel_code_completion:

- void **cancel_code_completion** **(** **)**

Cancels the autocomplete menu.

----

.. _class_CodeEdit_method_clear_bookmarked_lines:

- void **clear_bookmarked_lines** **(** **)**

Clears all bookmarked lines.

----

.. _class_CodeEdit_method_clear_breakpointed_lines:

- void **clear_breakpointed_lines** **(** **)**

Clears all breakpointed lines.

----

.. _class_CodeEdit_method_clear_comment_delimiters:

- void **clear_comment_delimiters** **(** **)**

Removes all comment delimiters.

----

.. _class_CodeEdit_method_clear_executing_lines:

- void **clear_executing_lines** **(** **)**

Clears all executed lines.

----

.. _class_CodeEdit_method_clear_string_delimiters:

- void **clear_string_delimiters** **(** **)**

Removes all string delimiters.

----

.. _class_CodeEdit_method_confirm_code_completion:

- void **confirm_code_completion** **(** :ref:`bool<class_bool>` replace=false **)**

Inserts the selected entry into the text. If ``replace`` is true, any existing text is replaced rather then merged.

----

.. _class_CodeEdit_method_do_indent:

- void **do_indent** **(** **)**

Perform an indent as if the user activated the "ui_text_indent" action.

----

.. _class_CodeEdit_method_do_unindent:

- void **do_unindent** **(** **)**

Perform an unindent as if the user activated the "ui_text_unindent" action.

----

.. _class_CodeEdit_method_fold_all_lines:

- void **fold_all_lines** **(** **)**

Folds all lines that are possible to be folded (see :ref:`can_fold_line<class_CodeEdit_method_can_fold_line>`).

----

.. _class_CodeEdit_method_fold_line:

- void **fold_line** **(** :ref:`int<class_int>` line **)**

Folds the given line, if possible (see :ref:`can_fold_line<class_CodeEdit_method_can_fold_line>`).

----

.. _class_CodeEdit_method_get_auto_brace_completion_close_key:

- :ref:`String<class_String>` **get_auto_brace_completion_close_key** **(** :ref:`String<class_String>` open_key **)** |const|

Gets the matching auto brace close key for ``open_key``.

----

.. _class_CodeEdit_method_get_bookmarked_lines:

- :ref:`Array<class_Array>` **get_bookmarked_lines** **(** **)** |const|

Gets all bookmarked lines.

----

.. _class_CodeEdit_method_get_breakpointed_lines:

- :ref:`Array<class_Array>` **get_breakpointed_lines** **(** **)** |const|

Gets all breakpointed lines.

----

.. _class_CodeEdit_method_get_code_completion_option:

- :ref:`Dictionary<class_Dictionary>` **get_code_completion_option** **(** :ref:`int<class_int>` index **)** |const|

Gets the completion option at ``index``. The return :ref:`Dictionary<class_Dictionary>` has the following key-values:

``kind``: :ref:`CodeCompletionKind<enum_CodeEdit_CodeCompletionKind>`

``display_text``: Text that is shown on the autocomplete menu.

``insert_text``: Text that is to be inserted when this item is selected.

``font_color``: Color of the text on the autocomplete menu.

``icon``: Icon to draw on the autocomplete menu.

``default_value``: Value of the symbol.

----

.. _class_CodeEdit_method_get_code_completion_options:

- :ref:`Dictionary[]<class_Dictionary>` **get_code_completion_options** **(** **)** |const|

Gets all completion options, see :ref:`get_code_completion_option<class_CodeEdit_method_get_code_completion_option>` for return content.

----

.. _class_CodeEdit_method_get_code_completion_selected_index:

- :ref:`int<class_int>` **get_code_completion_selected_index** **(** **)** |const|

Gets the index of the current selected completion option.

----

.. _class_CodeEdit_method_get_delimiter_end_key:

- :ref:`String<class_String>` **get_delimiter_end_key** **(** :ref:`int<class_int>` delimiter_index **)** |const|

Gets the end key for a string or comment region index.

----

.. _class_CodeEdit_method_get_delimiter_end_position:

- :ref:`Vector2<class_Vector2>` **get_delimiter_end_position** **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column **)** |const|

If ``line`` ``column`` is in a string or comment, returns the end position of the region. If not or no end could be found, both :ref:`Vector2<class_Vector2>` values will be ``-1``.

----

.. _class_CodeEdit_method_get_delimiter_start_key:

- :ref:`String<class_String>` **get_delimiter_start_key** **(** :ref:`int<class_int>` delimiter_index **)** |const|

Gets the start key for a string or comment region index.

----

.. _class_CodeEdit_method_get_delimiter_start_position:

- :ref:`Vector2<class_Vector2>` **get_delimiter_start_position** **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column **)** |const|

If ``line`` ``column`` is in a string or comment, returns the start position of the region. If not or no start could be found, both :ref:`Vector2<class_Vector2>` values will be ``-1``.

----

.. _class_CodeEdit_method_get_executing_lines:

- :ref:`Array<class_Array>` **get_executing_lines** **(** **)** |const|

Gets all executing lines.

----

.. _class_CodeEdit_method_get_folded_lines:

- :ref:`int[]<class_int>` **get_folded_lines** **(** **)** |const|

Return all lines that are current folded.

----

.. _class_CodeEdit_method_get_text_for_code_completion:

- :ref:`String<class_String>` **get_text_for_code_completion** **(** **)** |const|

Returns the full text with char ``0xFFFF`` at the caret location.

----

.. _class_CodeEdit_method_get_text_for_symbol_lookup:

- :ref:`String<class_String>` **get_text_for_symbol_lookup** **(** **)**

Returns the full text with char ``0xFFFF`` at the cursor location.

----

.. _class_CodeEdit_method_has_auto_brace_completion_close_key:

- :ref:`bool<class_bool>` **has_auto_brace_completion_close_key** **(** :ref:`String<class_String>` close_key **)** |const|

Returns ``true`` if close key ``close_key`` exists.

----

.. _class_CodeEdit_method_has_auto_brace_completion_open_key:

- :ref:`bool<class_bool>` **has_auto_brace_completion_open_key** **(** :ref:`String<class_String>` open_key **)** |const|

Returns ``true`` if open key ``open_key`` exists.

----

.. _class_CodeEdit_method_has_comment_delimiter:

- :ref:`bool<class_bool>` **has_comment_delimiter** **(** :ref:`String<class_String>` start_key **)** |const|

Returns ``true`` if comment ``start_key`` exists.

----

.. _class_CodeEdit_method_has_string_delimiter:

- :ref:`bool<class_bool>` **has_string_delimiter** **(** :ref:`String<class_String>` start_key **)** |const|

Returns ``true`` if string ``start_key`` exists.

----

.. _class_CodeEdit_method_indent_lines:

- void **indent_lines** **(** **)**

Indents selected lines, or in the case of no selection the caret line by one.

----

.. _class_CodeEdit_method_is_in_comment:

- :ref:`int<class_int>` **is_in_comment** **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column=-1 **)** |const|

Return delimiter index if ``line`` ``column`` is in a comment. If ``column`` is not provided, will return delimiter index if the entire ``line`` is a comment. Otherwise ``-1``.

----

.. _class_CodeEdit_method_is_in_string:

- :ref:`int<class_int>` **is_in_string** **(** :ref:`int<class_int>` line, :ref:`int<class_int>` column=-1 **)** |const|

Return the delimiter index if ``line`` ``column`` is in a string. If ``column`` is not provided, will return the delimiter index if the entire ``line`` is a string. Otherwise ``-1``.

----

.. _class_CodeEdit_method_is_line_bookmarked:

- :ref:`bool<class_bool>` **is_line_bookmarked** **(** :ref:`int<class_int>` line **)** |const|

Returns whether the line at the specified index is bookmarked or not.

----

.. _class_CodeEdit_method_is_line_breakpointed:

- :ref:`bool<class_bool>` **is_line_breakpointed** **(** :ref:`int<class_int>` line **)** |const|

Returns whether the line at the specified index is breakpointed or not.

----

.. _class_CodeEdit_method_is_line_executing:

- :ref:`bool<class_bool>` **is_line_executing** **(** :ref:`int<class_int>` line **)** |const|

Returns whether the line at the specified index is marked as executing or not.

----

.. _class_CodeEdit_method_is_line_folded:

- :ref:`bool<class_bool>` **is_line_folded** **(** :ref:`int<class_int>` line **)** |const|

Returns whether the line at the specified index is folded or not.

----

.. _class_CodeEdit_method_remove_comment_delimiter:

- void **remove_comment_delimiter** **(** :ref:`String<class_String>` start_key **)**

Removes the comment delimiter with ``start_key``.

----

.. _class_CodeEdit_method_remove_string_delimiter:

- void **remove_string_delimiter** **(** :ref:`String<class_String>` start_key **)**

Removes the string delimiter with ``start_key``.

----

.. _class_CodeEdit_method_request_code_completion:

- void **request_code_completion** **(** :ref:`bool<class_bool>` force=false **)**

Emits :ref:`request_code_completion<class_CodeEdit_signal_request_code_completion>`, if ``force`` is true will bypass all checks. Otherwise will check that the caret is in a word or in front of a prefix. Will ignore the request if all current options are of type file path, node path or signal.

----

.. _class_CodeEdit_method_set_code_completion_selected_index:

- void **set_code_completion_selected_index** **(** :ref:`int<class_int>` index **)**

Sets the current selected completion option.

----

.. _class_CodeEdit_method_set_code_hint:

- void **set_code_hint** **(** :ref:`String<class_String>` code_hint **)**

Sets the code hint text. Pass an empty string to clear.

----

.. _class_CodeEdit_method_set_code_hint_draw_below:

- void **set_code_hint_draw_below** **(** :ref:`bool<class_bool>` draw_below **)**

Sets if the code hint should draw below the text.

----

.. _class_CodeEdit_method_set_line_as_bookmarked:

- void **set_line_as_bookmarked** **(** :ref:`int<class_int>` line, :ref:`bool<class_bool>` bookmarked **)**

Sets the line as bookmarked.

----

.. _class_CodeEdit_method_set_line_as_breakpoint:

- void **set_line_as_breakpoint** **(** :ref:`int<class_int>` line, :ref:`bool<class_bool>` breakpointed **)**

Sets the line as breakpointed.

----

.. _class_CodeEdit_method_set_line_as_executing:

- void **set_line_as_executing** **(** :ref:`int<class_int>` line, :ref:`bool<class_bool>` executing **)**

Sets the line as executing.

----

.. _class_CodeEdit_method_set_symbol_lookup_word_as_valid:

- void **set_symbol_lookup_word_as_valid** **(** :ref:`bool<class_bool>` valid **)**

Sets the symbol emitted by :ref:`symbol_validate<class_CodeEdit_signal_symbol_validate>` as a valid lookup.

----

.. _class_CodeEdit_method_toggle_foldable_line:

- void **toggle_foldable_line** **(** :ref:`int<class_int>` line **)**

Toggle the folding of the code block at the given line.

----

.. _class_CodeEdit_method_unfold_all_lines:

- void **unfold_all_lines** **(** **)**

Unfolds all lines, folded or not.

----

.. _class_CodeEdit_method_unfold_line:

- void **unfold_line** **(** :ref:`int<class_int>` line **)**

Unfolds all lines that were previously folded.

----

.. _class_CodeEdit_method_unindent_lines:

- void **unindent_lines** **(** **)**

Unindents selected lines, or in the case of no selection the caret line by one.

----

.. _class_CodeEdit_method_update_code_completion_options:

- void **update_code_completion_options** **(** :ref:`bool<class_bool>` force **)**

Submits all completion options added with :ref:`add_code_completion_option<class_CodeEdit_method_add_code_completion_option>`. Will try to force the autoccomplete menu to popup, if ``force`` is ``true``.

**Note:** This will replace all current candidates.

Theme Property Descriptions
---------------------------

.. _class_CodeEdit_theme_color_background_color:

- :ref:`Color<class_Color>` **background_color**

+-----------+-----------------------+
| *Default* | ``Color(0, 0, 0, 0)`` |
+-----------+-----------------------+

Sets the background :ref:`Color<class_Color>`.

----

.. _class_CodeEdit_theme_icon_bookmark:

- :ref:`Texture2D<class_Texture2D>` **bookmark**

Sets a custom :ref:`Texture2D<class_Texture2D>` to draw in the bookmark gutter for bookmarked lines.

----

.. _class_CodeEdit_theme_color_bookmark_color:

- :ref:`Color<class_Color>` **bookmark_color**

+-----------+------------------------------+
| *Default* | ``Color(0.5, 0.64, 1, 0.8)`` |
+-----------+------------------------------+

:ref:`Color<class_Color>` of the bookmark icon for bookmarked lines.

----

.. _class_CodeEdit_theme_color_brace_mismatch_color:

- :ref:`Color<class_Color>` **brace_mismatch_color**

+-----------+---------------------------+
| *Default* | ``Color(1, 0.2, 0.2, 1)`` |
+-----------+---------------------------+

:ref:`Color<class_Color>` of the text to highlight mismatched braces.

----

.. _class_CodeEdit_theme_icon_breakpoint:

- :ref:`Texture2D<class_Texture2D>` **breakpoint**

Sets a custom :ref:`Texture2D<class_Texture2D>` to draw in the breakpoint gutter for breakpointed lines.

----

.. _class_CodeEdit_theme_color_breakpoint_color:

- :ref:`Color<class_Color>` **breakpoint_color**

+-----------+------------------------------+
| *Default* | ``Color(0.9, 0.29, 0.3, 1)`` |
+-----------+------------------------------+

:ref:`Color<class_Color>` of the breakpoint icon for bookmarked lines.

----

.. _class_CodeEdit_theme_icon_can_fold:

- :ref:`Texture2D<class_Texture2D>` **can_fold**

Sets a custom :ref:`Texture2D<class_Texture2D>` to draw in the line folding gutter when a line can be folded.

----

.. _class_CodeEdit_theme_color_caret_background_color:

- :ref:`Color<class_Color>` **caret_background_color**

+-----------+-----------------------+
| *Default* | ``Color(0, 0, 0, 1)`` |
+-----------+-----------------------+

:ref:`Color<class_Color>` of the text behind the caret when block caret is enabled.

----

.. _class_CodeEdit_theme_color_caret_color:

- :ref:`Color<class_Color>` **caret_color**

+-----------+--------------------------------+
| *Default* | ``Color(0.88, 0.88, 0.88, 1)`` |
+-----------+--------------------------------+

:ref:`Color<class_Color>` of the caret.

----

.. _class_CodeEdit_theme_color_code_folding_color:

- :ref:`Color<class_Color>` **code_folding_color**

+-----------+-------------------------------+
| *Default* | ``Color(0.8, 0.8, 0.8, 0.8)`` |
+-----------+-------------------------------+

:ref:`Color<class_Color>` for all icons related to line folding.

----

.. _class_CodeEdit_theme_style_completion:

- :ref:`StyleBox<class_StyleBox>` **completion**

:ref:`StyleBox<class_StyleBox>` for the code completion popup.

----

.. _class_CodeEdit_theme_color_completion_background_color:

- :ref:`Color<class_Color>` **completion_background_color**

+-----------+-------------------------------+
| *Default* | ``Color(0.17, 0.16, 0.2, 1)`` |
+-----------+-------------------------------+

Sets the background :ref:`Color<class_Color>` for the code completion popup.

----

.. _class_CodeEdit_theme_color_completion_existing_color:

- :ref:`Color<class_Color>` **completion_existing_color**

+-----------+-----------------------------------+
| *Default* | ``Color(0.87, 0.87, 0.87, 0.13)`` |
+-----------+-----------------------------------+

Background highlight :ref:`Color<class_Color>` for matching text in code completion options.

----

.. _class_CodeEdit_theme_color_completion_font_color:

- :ref:`Color<class_Color>` **completion_font_color**

+-----------+--------------------------------+
| *Default* | ``Color(0.67, 0.67, 0.67, 1)`` |
+-----------+--------------------------------+

Font :ref:`Color<class_Color>` for the code completion popup.

----

.. _class_CodeEdit_theme_constant_completion_lines:

- :ref:`int<class_int>` **completion_lines**

+-----------+-------+
| *Default* | ``7`` |
+-----------+-------+

Max number of options to display in the code completion popup at any one time.

----

.. _class_CodeEdit_theme_constant_completion_max_width:

- :ref:`int<class_int>` **completion_max_width**

+-----------+--------+
| *Default* | ``50`` |
+-----------+--------+

Max width of options in the code completion popup. Options longer then this will be cut off.

----

.. _class_CodeEdit_theme_color_completion_scroll_color:

- :ref:`Color<class_Color>` **completion_scroll_color**

+-----------+-----------------------+
| *Default* | ``Color(1, 1, 1, 1)`` |
+-----------+-----------------------+

:ref:`Color<class_Color>` of the scrollbar in the code completion popup.

----

.. _class_CodeEdit_theme_constant_completion_scroll_width:

- :ref:`int<class_int>` **completion_scroll_width**

+-----------+-------+
| *Default* | ``3`` |
+-----------+-------+

Width of the scrollbar in the code completion popup.

----

.. _class_CodeEdit_theme_color_completion_selected_color:

- :ref:`Color<class_Color>` **completion_selected_color**

+-----------+--------------------------------+
| *Default* | ``Color(0.26, 0.26, 0.27, 1)`` |
+-----------+--------------------------------+

Background highlight :ref:`Color<class_Color>` for the current selected option item in the code completion popup.

----

.. _class_CodeEdit_theme_color_current_line_color:

- :ref:`Color<class_Color>` **current_line_color**

+-----------+----------------------------------+
| *Default* | ``Color(0.25, 0.25, 0.26, 0.8)`` |
+-----------+----------------------------------+

Background :ref:`Color<class_Color>` of the line containing the caret.

----

.. _class_CodeEdit_theme_icon_executing_line:

- :ref:`Texture2D<class_Texture2D>` **executing_line**

Icon to draw in the executing gutter for executing lines.

----

.. _class_CodeEdit_theme_color_executing_line_color:

- :ref:`Color<class_Color>` **executing_line_color**

+-----------+--------------------------------+
| *Default* | ``Color(0.98, 0.89, 0.27, 1)`` |
+-----------+--------------------------------+

:ref:`Color<class_Color>` of the executing icon for executing lines.

----

.. _class_CodeEdit_theme_style_focus:

- :ref:`StyleBox<class_StyleBox>` **focus**

Sets the :ref:`StyleBox<class_StyleBox>` when in focus.

----

.. _class_CodeEdit_theme_icon_folded:

- :ref:`Texture2D<class_Texture2D>` **folded**

Sets a custom :ref:`Texture2D<class_Texture2D>` to draw in the line folding gutter when a line is folded and can be unfolded.

----

.. _class_CodeEdit_theme_icon_folded_eol_icon:

- :ref:`Texture2D<class_Texture2D>` **folded_eol_icon**

Sets a custom :ref:`Texture2D<class_Texture2D>` to draw at the end of a folded line.

----

.. _class_CodeEdit_theme_font_font:

- :ref:`Font<class_Font>` **font**

Sets the default :ref:`Font<class_Font>`.

----

.. _class_CodeEdit_theme_color_font_color:

- :ref:`Color<class_Color>` **font_color**

+-----------+--------------------------------+
| *Default* | ``Color(0.88, 0.88, 0.88, 1)`` |
+-----------+--------------------------------+

Sets the font :ref:`Color<class_Color>`.

----

.. _class_CodeEdit_theme_color_font_outline_color:

- :ref:`Color<class_Color>` **font_outline_color**

+-----------+-----------------------+
| *Default* | ``Color(1, 1, 1, 1)`` |
+-----------+-----------------------+

The tint of text outline of the ``CodeEdit``.

----

.. _class_CodeEdit_theme_color_font_readonly_color:

- :ref:`Color<class_Color>` **font_readonly_color**

+-----------+----------------------------------+
| *Default* | ``Color(0.88, 0.88, 0.88, 0.5)`` |
+-----------+----------------------------------+

Sets the font :ref:`Color<class_Color>` when :ref:`TextEdit.editable<class_TextEdit_property_editable>` is disabled.

----

.. _class_CodeEdit_theme_color_font_selected_color:

- :ref:`Color<class_Color>` **font_selected_color**

+-----------+-----------------------+
| *Default* | ``Color(0, 0, 0, 1)`` |
+-----------+-----------------------+

Sets the :ref:`Color<class_Color>` of the selected text. :ref:`TextEdit.override_selected_font_color<class_TextEdit_property_override_selected_font_color>` has to be enabled.

----

.. _class_CodeEdit_theme_font_size_font_size:

- :ref:`int<class_int>` **font_size**

Sets default font size.

----

.. _class_CodeEdit_theme_color_line_length_guideline_color:

- :ref:`Color<class_Color>` **line_length_guideline_color**

+-----------+-------------------------------+
| *Default* | ``Color(0.3, 0.5, 0.8, 0.1)`` |
+-----------+-------------------------------+

:ref:`Color<class_Color>` of the main line length guideline, secondary guidelines will have 50% alpha applied.

----

.. _class_CodeEdit_theme_color_line_number_color:

- :ref:`Color<class_Color>` **line_number_color**

+-----------+----------------------------------+
| *Default* | ``Color(0.67, 0.67, 0.67, 0.4)`` |
+-----------+----------------------------------+

Sets the :ref:`Color<class_Color>` of line numbers.

----

.. _class_CodeEdit_theme_constant_line_spacing:

- :ref:`int<class_int>` **line_spacing**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

Sets the spacing between the lines.

----

.. _class_CodeEdit_theme_style_normal:

- :ref:`StyleBox<class_StyleBox>` **normal**

Sets the :ref:`StyleBox<class_StyleBox>`.

----

.. _class_CodeEdit_theme_constant_outline_size:

- :ref:`int<class_int>` **outline_size**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

The size of the text outline.

----

.. _class_CodeEdit_theme_style_read_only:

- :ref:`StyleBox<class_StyleBox>` **read_only**

Sets the :ref:`StyleBox<class_StyleBox>` when :ref:`TextEdit.editable<class_TextEdit_property_editable>` is disabled.

----

.. _class_CodeEdit_theme_color_search_result_border_color:

- :ref:`Color<class_Color>` **search_result_border_color**

+-----------+-------------------------------+
| *Default* | ``Color(0.3, 0.3, 0.3, 0.4)`` |
+-----------+-------------------------------+

:ref:`Color<class_Color>` of the border around text that matches the search query.

----

.. _class_CodeEdit_theme_color_search_result_color:

- :ref:`Color<class_Color>` **search_result_color**

+-----------+-----------------------------+
| *Default* | ``Color(0.3, 0.3, 0.3, 1)`` |
+-----------+-----------------------------+

:ref:`Color<class_Color>` behind the text that matches the search query.

----

.. _class_CodeEdit_theme_color_selection_color:

- :ref:`Color<class_Color>` **selection_color**

+-----------+--------------------------------+
| *Default* | ``Color(0.49, 0.49, 0.49, 1)`` |
+-----------+--------------------------------+

Sets the highlight :ref:`Color<class_Color>` of text selections.

----

.. _class_CodeEdit_theme_icon_space:

- :ref:`Texture2D<class_Texture2D>` **space**

Sets a custom :ref:`Texture2D<class_Texture2D>` for space text characters.

----

.. _class_CodeEdit_theme_icon_tab:

- :ref:`Texture2D<class_Texture2D>` **tab**

Sets a custom :ref:`Texture2D<class_Texture2D>` for tab text characters.

----

.. _class_CodeEdit_theme_color_word_highlighted_color:

- :ref:`Color<class_Color>` **word_highlighted_color**

+-----------+--------------------------------+
| *Default* | ``Color(0.8, 0.9, 0.9, 0.15)`` |
+-----------+--------------------------------+

Sets the highlight :ref:`Color<class_Color>` of multiple occurrences. :ref:`TextEdit.highlight_all_occurrences<class_TextEdit_property_highlight_all_occurrences>` has to be enabled.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
