:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CPUParticles3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CPUParticles3D:

CPUParticles3D
==============

**Inherits:** :ref:`GeometryInstance3D<class_GeometryInstance3D>` **<** :ref:`VisualInstance3D<class_VisualInstance3D>` **<** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

CPU-based 3D particle emitter.

Description
-----------

CPU-based 3D particle node used to create a variety of particle systems and effects.

See also :ref:`GPUParticles3D<class_GPUParticles3D>`, which provides the same functionality with hardware acceleration, but may not run on older devices.

Properties
----------

+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                   | :ref:`amount<class_CPUParticles3D_property_amount>`                                         | ``8``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`angle_curve<class_CPUParticles3D_property_angle_curve>`                               |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angle_max<class_CPUParticles3D_property_angle_max>`                                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angle_min<class_CPUParticles3D_property_angle_min>`                                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`angular_velocity_curve<class_CPUParticles3D_property_angular_velocity_curve>`         |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angular_velocity_max<class_CPUParticles3D_property_angular_velocity_max>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angular_velocity_min<class_CPUParticles3D_property_angular_velocity_min>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`anim_offset_curve<class_CPUParticles3D_property_anim_offset_curve>`                   |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_offset_max<class_CPUParticles3D_property_anim_offset_max>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_offset_min<class_CPUParticles3D_property_anim_offset_min>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`anim_speed_curve<class_CPUParticles3D_property_anim_speed_curve>`                     |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_speed_max<class_CPUParticles3D_property_anim_speed_max>`                         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_speed_min<class_CPUParticles3D_property_anim_speed_min>`                         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                               | :ref:`color<class_CPUParticles3D_property_color>`                                           | ``Color(1, 1, 1, 1)``   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Gradient<class_Gradient>`                         | :ref:`color_ramp<class_CPUParticles3D_property_color_ramp>`                                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`damping_curve<class_CPUParticles3D_property_damping_curve>`                           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`damping_max<class_CPUParticles3D_property_damping_max>`                               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`damping_min<class_CPUParticles3D_property_damping_min>`                               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                           | :ref:`direction<class_CPUParticles3D_property_direction>`                                   | ``Vector3(1, 0, 0)``    |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`DrawOrder<enum_CPUParticles3D_DrawOrder>`         | :ref:`draw_order<class_CPUParticles3D_property_draw_order>`                                 | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                           | :ref:`emission_box_extents<class_CPUParticles3D_property_emission_box_extents>`             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`PackedColorArray<class_PackedColorArray>`         | :ref:`emission_colors<class_CPUParticles3D_property_emission_colors>`                       | ``PackedColorArray()``  |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>`     | :ref:`emission_normals<class_CPUParticles3D_property_emission_normals>`                     |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>`     | :ref:`emission_points<class_CPUParticles3D_property_emission_points>`                       |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                           | :ref:`emission_ring_axis<class_CPUParticles3D_property_emission_ring_axis>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`emission_ring_height<class_CPUParticles3D_property_emission_ring_height>`             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`emission_ring_inner_radius<class_CPUParticles3D_property_emission_ring_inner_radius>` |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`emission_ring_radius<class_CPUParticles3D_property_emission_ring_radius>`             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`EmissionShape<enum_CPUParticles3D_EmissionShape>` | :ref:`emission_shape<class_CPUParticles3D_property_emission_shape>`                         | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`emission_sphere_radius<class_CPUParticles3D_property_emission_sphere_radius>`         |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`emitting<class_CPUParticles3D_property_emitting>`                                     | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`explosiveness<class_CPUParticles3D_property_explosiveness>`                           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                   | :ref:`fixed_fps<class_CPUParticles3D_property_fixed_fps>`                                   | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`flatness<class_CPUParticles3D_property_flatness>`                                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`fract_delta<class_CPUParticles3D_property_fract_delta>`                               | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                           | :ref:`gravity<class_CPUParticles3D_property_gravity>`                                       | ``Vector3(0, -9.8, 0)`` |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`hue_variation_curve<class_CPUParticles3D_property_hue_variation_curve>`               |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`hue_variation_max<class_CPUParticles3D_property_hue_variation_max>`                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`hue_variation_min<class_CPUParticles3D_property_hue_variation_min>`                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`initial_velocity_max<class_CPUParticles3D_property_initial_velocity_max>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`initial_velocity_min<class_CPUParticles3D_property_initial_velocity_min>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`lifetime<class_CPUParticles3D_property_lifetime>`                                     | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`lifetime_randomness<class_CPUParticles3D_property_lifetime_randomness>`               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`linear_accel_curve<class_CPUParticles3D_property_linear_accel_curve>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`linear_accel_max<class_CPUParticles3D_property_linear_accel_max>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`linear_accel_min<class_CPUParticles3D_property_linear_accel_min>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`local_coords<class_CPUParticles3D_property_local_coords>`                             | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Mesh<class_Mesh>`                                 | :ref:`mesh<class_CPUParticles3D_property_mesh>`                                             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`one_shot<class_CPUParticles3D_property_one_shot>`                                     | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`orbit_velocity_curve<class_CPUParticles3D_property_orbit_velocity_curve>`             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`orbit_velocity_max<class_CPUParticles3D_property_orbit_velocity_max>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`orbit_velocity_min<class_CPUParticles3D_property_orbit_velocity_min>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`particle_flag_align_y<class_CPUParticles3D_property_particle_flag_align_y>`           | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`particle_flag_disable_z<class_CPUParticles3D_property_particle_flag_disable_z>`       | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`particle_flag_rotate_y<class_CPUParticles3D_property_particle_flag_rotate_y>`         | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`preprocess<class_CPUParticles3D_property_preprocess>`                                 | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`radial_accel_curve<class_CPUParticles3D_property_radial_accel_curve>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`radial_accel_max<class_CPUParticles3D_property_radial_accel_max>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`radial_accel_min<class_CPUParticles3D_property_radial_accel_min>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`randomness<class_CPUParticles3D_property_randomness>`                                 | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`scale_amount_curve<class_CPUParticles3D_property_scale_amount_curve>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`scale_amount_max<class_CPUParticles3D_property_scale_amount_max>`                     | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`scale_amount_min<class_CPUParticles3D_property_scale_amount_min>`                     | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`scale_curve_x<class_CPUParticles3D_property_scale_curve_x>`                           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`scale_curve_y<class_CPUParticles3D_property_scale_curve_y>`                           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`scale_curve_z<class_CPUParticles3D_property_scale_curve_z>`                           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`speed_scale<class_CPUParticles3D_property_speed_scale>`                               | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`split_scale<class_CPUParticles3D_property_split_scale>`                               | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`spread<class_CPUParticles3D_property_spread>`                                         | ``45.0``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`tangential_accel_curve<class_CPUParticles3D_property_tangential_accel_curve>`         |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`tangential_accel_max<class_CPUParticles3D_property_tangential_accel_max>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`tangential_accel_min<class_CPUParticles3D_property_tangential_accel_min>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------------+-------------------------+

Methods
-------

+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`convert_from_particles<class_CPUParticles3D_method_convert_from_particles>` **(** :ref:`Node<class_Node>` particles **)**                                                           |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Curve<class_Curve>` | :ref:`get_param_curve<class_CPUParticles3D_method_get_param_curve>` **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param **)** |const|                                             |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_param_max<class_CPUParticles3D_method_get_param_max>` **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param **)** |const|                                                 |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_param_min<class_CPUParticles3D_method_get_param_min>` **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param **)** |const|                                                 |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`get_particle_flag<class_CPUParticles3D_method_get_particle_flag>` **(** :ref:`ParticleFlags<enum_CPUParticles3D_ParticleFlags>` particle_flag **)** |const|                         |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`restart<class_CPUParticles3D_method_restart>` **(** **)**                                                                                                                           |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**                    |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>` **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param, :ref:`float<class_float>` value **)**                        |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>` **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param, :ref:`float<class_float>` value **)**                        |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_particle_flag<class_CPUParticles3D_method_set_particle_flag>` **(** :ref:`ParticleFlags<enum_CPUParticles3D_ParticleFlags>` particle_flag, :ref:`bool<class_bool>` enable **)** |
+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_CPUParticles3D_DrawOrder:

.. _class_CPUParticles3D_constant_DRAW_ORDER_INDEX:

.. _class_CPUParticles3D_constant_DRAW_ORDER_LIFETIME:

.. _class_CPUParticles3D_constant_DRAW_ORDER_VIEW_DEPTH:

enum **DrawOrder**:

- **DRAW_ORDER_INDEX** = **0** --- Particles are drawn in the order emitted.

- **DRAW_ORDER_LIFETIME** = **1** --- Particles are drawn in order of remaining lifetime.

- **DRAW_ORDER_VIEW_DEPTH** = **2** --- Particles are drawn in order of depth.

----

.. _enum_CPUParticles3D_Parameter:

.. _class_CPUParticles3D_constant_PARAM_INITIAL_LINEAR_VELOCITY:

.. _class_CPUParticles3D_constant_PARAM_ANGULAR_VELOCITY:

.. _class_CPUParticles3D_constant_PARAM_ORBIT_VELOCITY:

.. _class_CPUParticles3D_constant_PARAM_LINEAR_ACCEL:

.. _class_CPUParticles3D_constant_PARAM_RADIAL_ACCEL:

.. _class_CPUParticles3D_constant_PARAM_TANGENTIAL_ACCEL:

.. _class_CPUParticles3D_constant_PARAM_DAMPING:

.. _class_CPUParticles3D_constant_PARAM_ANGLE:

.. _class_CPUParticles3D_constant_PARAM_SCALE:

.. _class_CPUParticles3D_constant_PARAM_HUE_VARIATION:

.. _class_CPUParticles3D_constant_PARAM_ANIM_SPEED:

.. _class_CPUParticles3D_constant_PARAM_ANIM_OFFSET:

.. _class_CPUParticles3D_constant_PARAM_MAX:

enum **Parameter**:

- **PARAM_INITIAL_LINEAR_VELOCITY** = **0** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set initial velocity properties.

- **PARAM_ANGULAR_VELOCITY** = **1** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set angular velocity properties.

- **PARAM_ORBIT_VELOCITY** = **2** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set orbital velocity properties.

- **PARAM_LINEAR_ACCEL** = **3** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set linear acceleration properties.

- **PARAM_RADIAL_ACCEL** = **4** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set radial acceleration properties.

- **PARAM_TANGENTIAL_ACCEL** = **5** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set tangential acceleration properties.

- **PARAM_DAMPING** = **6** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set damping properties.

- **PARAM_ANGLE** = **7** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set angle properties.

- **PARAM_SCALE** = **8** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set scale properties.

- **PARAM_HUE_VARIATION** = **9** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set hue variation properties.

- **PARAM_ANIM_SPEED** = **10** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set animation speed properties.

- **PARAM_ANIM_OFFSET** = **11** --- Use with :ref:`set_param_min<class_CPUParticles3D_method_set_param_min>`, :ref:`set_param_max<class_CPUParticles3D_method_set_param_max>`, and :ref:`set_param_curve<class_CPUParticles3D_method_set_param_curve>` to set animation offset properties.

- **PARAM_MAX** = **12** --- Represents the size of the :ref:`Parameter<enum_CPUParticles3D_Parameter>` enum.

----

.. _enum_CPUParticles3D_ParticleFlags:

.. _class_CPUParticles3D_constant_PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY:

.. _class_CPUParticles3D_constant_PARTICLE_FLAG_ROTATE_Y:

.. _class_CPUParticles3D_constant_PARTICLE_FLAG_DISABLE_Z:

.. _class_CPUParticles3D_constant_PARTICLE_FLAG_MAX:

enum **ParticleFlags**:

- **PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY** = **0** --- Use with :ref:`set_particle_flag<class_CPUParticles3D_method_set_particle_flag>` to set :ref:`particle_flag_align_y<class_CPUParticles3D_property_particle_flag_align_y>`.

- **PARTICLE_FLAG_ROTATE_Y** = **1** --- Use with :ref:`set_particle_flag<class_CPUParticles3D_method_set_particle_flag>` to set :ref:`particle_flag_rotate_y<class_CPUParticles3D_property_particle_flag_rotate_y>`.

- **PARTICLE_FLAG_DISABLE_Z** = **2** --- Use with :ref:`set_particle_flag<class_CPUParticles3D_method_set_particle_flag>` to set :ref:`particle_flag_disable_z<class_CPUParticles3D_property_particle_flag_disable_z>`.

- **PARTICLE_FLAG_MAX** = **3** --- Represents the size of the :ref:`ParticleFlags<enum_CPUParticles3D_ParticleFlags>` enum.

----

.. _enum_CPUParticles3D_EmissionShape:

.. _class_CPUParticles3D_constant_EMISSION_SHAPE_POINT:

.. _class_CPUParticles3D_constant_EMISSION_SHAPE_SPHERE:

.. _class_CPUParticles3D_constant_EMISSION_SHAPE_BOX:

.. _class_CPUParticles3D_constant_EMISSION_SHAPE_POINTS:

.. _class_CPUParticles3D_constant_EMISSION_SHAPE_DIRECTED_POINTS:

.. _class_CPUParticles3D_constant_EMISSION_SHAPE_RING:

.. _class_CPUParticles3D_constant_EMISSION_SHAPE_MAX:

enum **EmissionShape**:

- **EMISSION_SHAPE_POINT** = **0** --- All particles will be emitted from a single point.

- **EMISSION_SHAPE_SPHERE** = **1** --- Particles will be emitted in the volume of a sphere.

- **EMISSION_SHAPE_BOX** = **2** --- Particles will be emitted in the volume of a box.

- **EMISSION_SHAPE_POINTS** = **3** --- Particles will be emitted at a position chosen randomly among :ref:`emission_points<class_CPUParticles3D_property_emission_points>`. Particle color will be modulated by :ref:`emission_colors<class_CPUParticles3D_property_emission_colors>`.

- **EMISSION_SHAPE_DIRECTED_POINTS** = **4** --- Particles will be emitted at a position chosen randomly among :ref:`emission_points<class_CPUParticles3D_property_emission_points>`. Particle velocity and rotation will be set based on :ref:`emission_normals<class_CPUParticles3D_property_emission_normals>`. Particle color will be modulated by :ref:`emission_colors<class_CPUParticles3D_property_emission_colors>`.

- **EMISSION_SHAPE_RING** = **5** --- Particles will be emitted in a ring or cylinder.

- **EMISSION_SHAPE_MAX** = **6** --- Represents the size of the :ref:`EmissionShape<enum_CPUParticles3D_EmissionShape>` enum.

Property Descriptions
---------------------

.. _class_CPUParticles3D_property_amount:

- :ref:`int<class_int>` **amount**

+-----------+-------------------+
| *Default* | ``8``             |
+-----------+-------------------+
| *Setter*  | set_amount(value) |
+-----------+-------------------+
| *Getter*  | get_amount()      |
+-----------+-------------------+

Number of particles emitted in one emission cycle.

----

.. _class_CPUParticles3D_property_angle_curve:

- :ref:`Curve<class_Curve>` **angle_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's rotation will be animated along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_angle_max:

- :ref:`float<class_float>` **angle_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum angle.

----

.. _class_CPUParticles3D_property_angle_min:

- :ref:`float<class_float>` **angle_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum angle.

----

.. _class_CPUParticles3D_property_angular_velocity_curve:

- :ref:`Curve<class_Curve>` **angular_velocity_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's angular velocity will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_angular_velocity_max:

- :ref:`float<class_float>` **angular_velocity_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum angular velocity.

----

.. _class_CPUParticles3D_property_angular_velocity_min:

- :ref:`float<class_float>` **angular_velocity_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum angular velocity.

----

.. _class_CPUParticles3D_property_anim_offset_curve:

- :ref:`Curve<class_Curve>` **anim_offset_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's animation offset will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_anim_offset_max:

- :ref:`float<class_float>` **anim_offset_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum animation offset.

----

.. _class_CPUParticles3D_property_anim_offset_min:

- :ref:`float<class_float>` **anim_offset_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum animation offset.

----

.. _class_CPUParticles3D_property_anim_speed_curve:

- :ref:`Curve<class_Curve>` **anim_speed_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's animation speed will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_anim_speed_max:

- :ref:`float<class_float>` **anim_speed_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum particle animation speed.

----

.. _class_CPUParticles3D_property_anim_speed_min:

- :ref:`float<class_float>` **anim_speed_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum particle animation speed.

----

.. _class_CPUParticles3D_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-----------------------+
| *Default* | ``Color(1, 1, 1, 1)`` |
+-----------+-----------------------+
| *Setter*  | set_color(value)      |
+-----------+-----------------------+
| *Getter*  | get_color()           |
+-----------+-----------------------+

Each particle's initial color. To have particle display color in a :ref:`BaseMaterial3D<class_BaseMaterial3D>` make sure to set :ref:`BaseMaterial3D.vertex_color_use_as_albedo<class_BaseMaterial3D_property_vertex_color_use_as_albedo>` to ``true``.

----

.. _class_CPUParticles3D_property_color_ramp:

- :ref:`Gradient<class_Gradient>` **color_ramp**

+----------+-----------------------+
| *Setter* | set_color_ramp(value) |
+----------+-----------------------+
| *Getter* | get_color_ramp()      |
+----------+-----------------------+

Each particle's color will vary along this :ref:`GradientTexture<class_GradientTexture>` over its lifetime (multiplied with :ref:`color<class_CPUParticles3D_property_color>`).

----

.. _class_CPUParticles3D_property_damping_curve:

- :ref:`Curve<class_Curve>` **damping_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Damping will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_damping_max:

- :ref:`float<class_float>` **damping_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum damping.

----

.. _class_CPUParticles3D_property_damping_min:

- :ref:`float<class_float>` **damping_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum damping

----

.. _class_CPUParticles3D_property_direction:

- :ref:`Vector3<class_Vector3>` **direction**

+-----------+----------------------+
| *Default* | ``Vector3(1, 0, 0)`` |
+-----------+----------------------+
| *Setter*  | set_direction(value) |
+-----------+----------------------+
| *Getter*  | get_direction()      |
+-----------+----------------------+

Unit vector specifying the particles' emission direction.

----

.. _class_CPUParticles3D_property_draw_order:

- :ref:`DrawOrder<enum_CPUParticles3D_DrawOrder>` **draw_order**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_draw_order(value) |
+-----------+-----------------------+
| *Getter*  | get_draw_order()      |
+-----------+-----------------------+

Particle draw order. Uses :ref:`DrawOrder<enum_CPUParticles3D_DrawOrder>` values.

----

.. _class_CPUParticles3D_property_emission_box_extents:

- :ref:`Vector3<class_Vector3>` **emission_box_extents**

+----------+---------------------------------+
| *Setter* | set_emission_box_extents(value) |
+----------+---------------------------------+
| *Getter* | get_emission_box_extents()      |
+----------+---------------------------------+

The rectangle's extents if :ref:`emission_shape<class_CPUParticles3D_property_emission_shape>` is set to :ref:`EMISSION_SHAPE_BOX<class_CPUParticles3D_constant_EMISSION_SHAPE_BOX>`.

----

.. _class_CPUParticles3D_property_emission_colors:

- :ref:`PackedColorArray<class_PackedColorArray>` **emission_colors**

+-----------+----------------------------+
| *Default* | ``PackedColorArray()``     |
+-----------+----------------------------+
| *Setter*  | set_emission_colors(value) |
+-----------+----------------------------+
| *Getter*  | get_emission_colors()      |
+-----------+----------------------------+

Sets the :ref:`Color<class_Color>`\ s to modulate particles by when using :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles3D_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles3D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles3D_property_emission_normals:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **emission_normals**

+----------+-----------------------------+
| *Setter* | set_emission_normals(value) |
+----------+-----------------------------+
| *Getter* | get_emission_normals()      |
+----------+-----------------------------+

Sets the direction the particles will be emitted in when using :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles3D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles3D_property_emission_points:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **emission_points**

+----------+----------------------------+
| *Setter* | set_emission_points(value) |
+----------+----------------------------+
| *Getter* | get_emission_points()      |
+----------+----------------------------+

Sets the initial positions to spawn particles when using :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles3D_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles3D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles3D_property_emission_ring_axis:

- :ref:`Vector3<class_Vector3>` **emission_ring_axis**

+----------+-------------------------------+
| *Setter* | set_emission_ring_axis(value) |
+----------+-------------------------------+
| *Getter* | get_emission_ring_axis()      |
+----------+-------------------------------+

The axis of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_CPUParticles3D_constant_EMISSION_SHAPE_RING>`.

----

.. _class_CPUParticles3D_property_emission_ring_height:

- :ref:`float<class_float>` **emission_ring_height**

+----------+---------------------------------+
| *Setter* | set_emission_ring_height(value) |
+----------+---------------------------------+
| *Getter* | get_emission_ring_height()      |
+----------+---------------------------------+

The height of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_CPUParticles3D_constant_EMISSION_SHAPE_RING>`.

----

.. _class_CPUParticles3D_property_emission_ring_inner_radius:

- :ref:`float<class_float>` **emission_ring_inner_radius**

+----------+---------------------------------------+
| *Setter* | set_emission_ring_inner_radius(value) |
+----------+---------------------------------------+
| *Getter* | get_emission_ring_inner_radius()      |
+----------+---------------------------------------+

The inner radius of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_CPUParticles3D_constant_EMISSION_SHAPE_RING>`.

----

.. _class_CPUParticles3D_property_emission_ring_radius:

- :ref:`float<class_float>` **emission_ring_radius**

+----------+---------------------------------+
| *Setter* | set_emission_ring_radius(value) |
+----------+---------------------------------+
| *Getter* | get_emission_ring_radius()      |
+----------+---------------------------------+

The radius of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_CPUParticles3D_constant_EMISSION_SHAPE_RING>`.

----

.. _class_CPUParticles3D_property_emission_shape:

- :ref:`EmissionShape<enum_CPUParticles3D_EmissionShape>` **emission_shape**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_emission_shape(value) |
+-----------+---------------------------+
| *Getter*  | get_emission_shape()      |
+-----------+---------------------------+

Particles will be emitted inside this region. See :ref:`EmissionShape<enum_CPUParticles3D_EmissionShape>` for possible values.

----

.. _class_CPUParticles3D_property_emission_sphere_radius:

- :ref:`float<class_float>` **emission_sphere_radius**

+----------+-----------------------------------+
| *Setter* | set_emission_sphere_radius(value) |
+----------+-----------------------------------+
| *Getter* | get_emission_sphere_radius()      |
+----------+-----------------------------------+

The sphere's radius if :ref:`EmissionShape<enum_CPUParticles3D_EmissionShape>` is set to :ref:`EMISSION_SHAPE_SPHERE<class_CPUParticles3D_constant_EMISSION_SHAPE_SPHERE>`.

----

.. _class_CPUParticles3D_property_emitting:

- :ref:`bool<class_bool>` **emitting**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_emitting(value) |
+-----------+---------------------+
| *Getter*  | is_emitting()       |
+-----------+---------------------+

If ``true``, particles are being emitted.

----

.. _class_CPUParticles3D_property_explosiveness:

- :ref:`float<class_float>` **explosiveness**

+-----------+--------------------------------+
| *Default* | ``0.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_explosiveness_ratio(value) |
+-----------+--------------------------------+
| *Getter*  | get_explosiveness_ratio()      |
+-----------+--------------------------------+

How rapidly particles in an emission cycle are emitted. If greater than ``0``, there will be a gap in emissions before the next cycle begins.

----

.. _class_CPUParticles3D_property_fixed_fps:

- :ref:`int<class_int>` **fixed_fps**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_fixed_fps(value) |
+-----------+----------------------+
| *Getter*  | get_fixed_fps()      |
+-----------+----------------------+

The particle system's frame rate is fixed to a value. For instance, changing the value to 2 will make the particles render at 2 frames per second. Note this does not slow down the particle system itself.

----

.. _class_CPUParticles3D_property_flatness:

- :ref:`float<class_float>` **flatness**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_flatness(value) |
+-----------+---------------------+
| *Getter*  | get_flatness()      |
+-----------+---------------------+

Amount of :ref:`spread<class_CPUParticles3D_property_spread>` in Y/Z plane. A value of ``1`` restricts particles to X/Z plane.

----

.. _class_CPUParticles3D_property_fract_delta:

- :ref:`bool<class_bool>` **fract_delta**

+-----------+-----------------------------+
| *Default* | ``true``                    |
+-----------+-----------------------------+
| *Setter*  | set_fractional_delta(value) |
+-----------+-----------------------------+
| *Getter*  | get_fractional_delta()      |
+-----------+-----------------------------+

If ``true``, results in fractional delta calculation which has a smoother particles display effect.

----

.. _class_CPUParticles3D_property_gravity:

- :ref:`Vector3<class_Vector3>` **gravity**

+-----------+-------------------------+
| *Default* | ``Vector3(0, -9.8, 0)`` |
+-----------+-------------------------+
| *Setter*  | set_gravity(value)      |
+-----------+-------------------------+
| *Getter*  | get_gravity()           |
+-----------+-------------------------+

Gravity applied to every particle.

----

.. _class_CPUParticles3D_property_hue_variation_curve:

- :ref:`Curve<class_Curve>` **hue_variation_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's hue will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_hue_variation_max:

- :ref:`float<class_float>` **hue_variation_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum hue variation.

----

.. _class_CPUParticles3D_property_hue_variation_min:

- :ref:`float<class_float>` **hue_variation_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum hue variation.

----

.. _class_CPUParticles3D_property_initial_velocity_max:

- :ref:`float<class_float>` **initial_velocity_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum value of the initial velocity.

----

.. _class_CPUParticles3D_property_initial_velocity_min:

- :ref:`float<class_float>` **initial_velocity_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum value of the initial velocity.

----

.. _class_CPUParticles3D_property_lifetime:

- :ref:`float<class_float>` **lifetime**

+-----------+---------------------+
| *Default* | ``1.0``             |
+-----------+---------------------+
| *Setter*  | set_lifetime(value) |
+-----------+---------------------+
| *Getter*  | get_lifetime()      |
+-----------+---------------------+

Amount of time each particle will exist.

----

.. _class_CPUParticles3D_property_lifetime_randomness:

- :ref:`float<class_float>` **lifetime_randomness**

+-----------+--------------------------------+
| *Default* | ``0.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_lifetime_randomness(value) |
+-----------+--------------------------------+
| *Getter*  | get_lifetime_randomness()      |
+-----------+--------------------------------+

Particle lifetime randomness ratio.

----

.. _class_CPUParticles3D_property_linear_accel_curve:

- :ref:`Curve<class_Curve>` **linear_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's linear acceleration will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_linear_accel_max:

- :ref:`float<class_float>` **linear_accel_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum linear acceleration.

----

.. _class_CPUParticles3D_property_linear_accel_min:

- :ref:`float<class_float>` **linear_accel_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum linear acceleration.

----

.. _class_CPUParticles3D_property_local_coords:

- :ref:`bool<class_bool>` **local_coords**

+-----------+----------------------------------+
| *Default* | ``true``                         |
+-----------+----------------------------------+
| *Setter*  | set_use_local_coordinates(value) |
+-----------+----------------------------------+
| *Getter*  | get_use_local_coordinates()      |
+-----------+----------------------------------+

If ``true``, particles use the parent node's coordinate space. If ``false``, they use global coordinates.

----

.. _class_CPUParticles3D_property_mesh:

- :ref:`Mesh<class_Mesh>` **mesh**

+----------+-----------------+
| *Setter* | set_mesh(value) |
+----------+-----------------+
| *Getter* | get_mesh()      |
+----------+-----------------+

The :ref:`Mesh<class_Mesh>` used for each particle. If ``null``, particles will be spheres.

----

.. _class_CPUParticles3D_property_one_shot:

- :ref:`bool<class_bool>` **one_shot**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_one_shot(value) |
+-----------+---------------------+
| *Getter*  | get_one_shot()      |
+-----------+---------------------+

If ``true``, only one emission cycle occurs. If set ``true`` during a cycle, emission will stop at the cycle's end.

----

.. _class_CPUParticles3D_property_orbit_velocity_curve:

- :ref:`Curve<class_Curve>` **orbit_velocity_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's orbital velocity will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_orbit_velocity_max:

- :ref:`float<class_float>` **orbit_velocity_max**

+----------+----------------------+
| *Setter* | set_param_max(value) |
+----------+----------------------+
| *Getter* | get_param_max()      |
+----------+----------------------+

Maximum orbit velocity.

----

.. _class_CPUParticles3D_property_orbit_velocity_min:

- :ref:`float<class_float>` **orbit_velocity_min**

+----------+----------------------+
| *Setter* | set_param_min(value) |
+----------+----------------------+
| *Getter* | get_param_min()      |
+----------+----------------------+

Minimum orbit velocity.

----

.. _class_CPUParticles3D_property_particle_flag_align_y:

- :ref:`bool<class_bool>` **particle_flag_align_y**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_particle_flag(value) |
+-----------+--------------------------+
| *Getter*  | get_particle_flag()      |
+-----------+--------------------------+

Align Y axis of particle with the direction of its velocity.

----

.. _class_CPUParticles3D_property_particle_flag_disable_z:

- :ref:`bool<class_bool>` **particle_flag_disable_z**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_particle_flag(value) |
+-----------+--------------------------+
| *Getter*  | get_particle_flag()      |
+-----------+--------------------------+

If ``true``, particles will not move on the Z axis.

----

.. _class_CPUParticles3D_property_particle_flag_rotate_y:

- :ref:`bool<class_bool>` **particle_flag_rotate_y**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_particle_flag(value) |
+-----------+--------------------------+
| *Getter*  | get_particle_flag()      |
+-----------+--------------------------+

If ``true``, particles rotate around Y axis by :ref:`angle_min<class_CPUParticles3D_property_angle_min>`.

----

.. _class_CPUParticles3D_property_preprocess:

- :ref:`float<class_float>` **preprocess**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_pre_process_time(value) |
+-----------+-----------------------------+
| *Getter*  | get_pre_process_time()      |
+-----------+-----------------------------+

Particle system starts as if it had already run for this many seconds.

----

.. _class_CPUParticles3D_property_radial_accel_curve:

- :ref:`Curve<class_Curve>` **radial_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's radial acceleration will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_radial_accel_max:

- :ref:`float<class_float>` **radial_accel_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum radial acceleration.

----

.. _class_CPUParticles3D_property_radial_accel_min:

- :ref:`float<class_float>` **radial_accel_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum radial acceleration.

----

.. _class_CPUParticles3D_property_randomness:

- :ref:`float<class_float>` **randomness**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_randomness_ratio(value) |
+-----------+-----------------------------+
| *Getter*  | get_randomness_ratio()      |
+-----------+-----------------------------+

Emission lifetime randomness ratio.

----

.. _class_CPUParticles3D_property_scale_amount_curve:

- :ref:`Curve<class_Curve>` **scale_amount_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's scale will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_scale_amount_max:

- :ref:`float<class_float>` **scale_amount_max**

+-----------+----------------------+
| *Default* | ``1.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum scale.

----

.. _class_CPUParticles3D_property_scale_amount_min:

- :ref:`float<class_float>` **scale_amount_min**

+-----------+----------------------+
| *Default* | ``1.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum scale.

----

.. _class_CPUParticles3D_property_scale_curve_x:

- :ref:`Curve<class_Curve>` **scale_curve_x**

+----------+--------------------------+
| *Setter* | set_scale_curve_x(value) |
+----------+--------------------------+
| *Getter* | get_scale_curve_x()      |
+----------+--------------------------+

Curve for the scale over life, along the x axis.

----

.. _class_CPUParticles3D_property_scale_curve_y:

- :ref:`Curve<class_Curve>` **scale_curve_y**

+----------+--------------------------+
| *Setter* | set_scale_curve_y(value) |
+----------+--------------------------+
| *Getter* | get_scale_curve_y()      |
+----------+--------------------------+

Curve for the scale over life, along the y axis.

----

.. _class_CPUParticles3D_property_scale_curve_z:

- :ref:`Curve<class_Curve>` **scale_curve_z**

+----------+--------------------------+
| *Setter* | set_scale_curve_z(value) |
+----------+--------------------------+
| *Getter* | get_scale_curve_z()      |
+----------+--------------------------+

Curve for the scale over life, along the z axis.

----

.. _class_CPUParticles3D_property_speed_scale:

- :ref:`float<class_float>` **speed_scale**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_speed_scale(value) |
+-----------+------------------------+
| *Getter*  | get_speed_scale()      |
+-----------+------------------------+

Particle system's running speed scaling ratio. A value of ``0`` can be used to pause the particles.

----

.. _class_CPUParticles3D_property_split_scale:

- :ref:`bool<class_bool>` **split_scale**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_split_scale(value) |
+-----------+------------------------+
| *Getter*  | get_split_scale()      |
+-----------+------------------------+

If set to true, three different scale curves can be specified, one per scale axis.

----

.. _class_CPUParticles3D_property_spread:

- :ref:`float<class_float>` **spread**

+-----------+-------------------+
| *Default* | ``45.0``          |
+-----------+-------------------+
| *Setter*  | set_spread(value) |
+-----------+-------------------+
| *Getter*  | get_spread()      |
+-----------+-------------------+

Each particle's initial direction range from ``+spread`` to ``-spread`` degrees. Applied to X/Z plane and Y/Z planes.

----

.. _class_CPUParticles3D_property_tangential_accel_curve:

- :ref:`Curve<class_Curve>` **tangential_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's tangential acceleration will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles3D_property_tangential_accel_max:

- :ref:`float<class_float>` **tangential_accel_max**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_max(value) |
+-----------+----------------------+
| *Getter*  | get_param_max()      |
+-----------+----------------------+

Maximum tangent acceleration.

----

.. _class_CPUParticles3D_property_tangential_accel_min:

- :ref:`float<class_float>` **tangential_accel_min**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_param_min(value) |
+-----------+----------------------+
| *Getter*  | get_param_min()      |
+-----------+----------------------+

Minimum tangent acceleration.

Method Descriptions
-------------------

.. _class_CPUParticles3D_method_convert_from_particles:

- void **convert_from_particles** **(** :ref:`Node<class_Node>` particles **)**

Sets this node's properties to match a given :ref:`GPUParticles3D<class_GPUParticles3D>` node with an assigned :ref:`ParticlesMaterial<class_ParticlesMaterial>`.

----

.. _class_CPUParticles3D_method_get_param_curve:

- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param **)** |const|

Returns the :ref:`Curve<class_Curve>` of the parameter specified by :ref:`Parameter<enum_CPUParticles3D_Parameter>`.

----

.. _class_CPUParticles3D_method_get_param_max:

- :ref:`float<class_float>` **get_param_max** **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param **)** |const|

----

.. _class_CPUParticles3D_method_get_param_min:

- :ref:`float<class_float>` **get_param_min** **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param **)** |const|

----

.. _class_CPUParticles3D_method_get_particle_flag:

- :ref:`bool<class_bool>` **get_particle_flag** **(** :ref:`ParticleFlags<enum_CPUParticles3D_ParticleFlags>` particle_flag **)** |const|

Returns the enabled state of the given particle flag (see :ref:`ParticleFlags<enum_CPUParticles3D_ParticleFlags>` for options).

----

.. _class_CPUParticles3D_method_restart:

- void **restart** **(** **)**

Restarts the particle emitter.

----

.. _class_CPUParticles3D_method_set_param_curve:

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**

Sets the :ref:`Curve<class_Curve>` of the parameter specified by :ref:`Parameter<enum_CPUParticles3D_Parameter>`.

----

.. _class_CPUParticles3D_method_set_param_max:

- void **set_param_max** **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param, :ref:`float<class_float>` value **)**

Sets the maximum value for the given parameter

----

.. _class_CPUParticles3D_method_set_param_min:

- void **set_param_min** **(** :ref:`Parameter<enum_CPUParticles3D_Parameter>` param, :ref:`float<class_float>` value **)**

Sets the minimum value for the given parameter

----

.. _class_CPUParticles3D_method_set_particle_flag:

- void **set_particle_flag** **(** :ref:`ParticleFlags<enum_CPUParticles3D_ParticleFlags>` particle_flag, :ref:`bool<class_bool>` enable **)**

Enables or disables the given particle flag (see :ref:`ParticleFlags<enum_CPUParticles3D_ParticleFlags>` for options).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
