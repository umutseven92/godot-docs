:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the PackedInt32Array.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_PackedInt32Array:

PackedInt32Array
================

A packed :ref:`Array<class_Array>` of 32-bit integers.

Description
-----------

An :ref:`Array<class_Array>` specifically designed to hold 32-bit integer values. Packs data tightly, so it saves memory for large array sizes.

**Note:** This type stores signed 32-bit integers, which means it can take values in the interval ``[-2^31, 2^31 - 1]``, i.e. ``[-2147483648, 2147483647]``. Exceeding those bounds will wrap around. In comparison, :ref:`int<class_int>` uses signed 64-bit integers which can hold much larger values. If you need to pack 64-bit integers tightly, see :ref:`PackedInt64Array<class_PackedInt64Array>`.

Methods
-------

+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedInt32Array<class_PackedInt32Array>` | :ref:`PackedInt32Array<class_PackedInt32Array_method_PackedInt32Array>` **(** **)** |constructor|                                                      |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedInt32Array<class_PackedInt32Array>` | :ref:`PackedInt32Array<class_PackedInt32Array_method_PackedInt32Array>` **(** :ref:`PackedInt32Array<class_PackedInt32Array>` from **)** |constructor| |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedInt32Array<class_PackedInt32Array>` | :ref:`PackedInt32Array<class_PackedInt32Array_method_PackedInt32Array>` **(** :ref:`Array<class_Array>` from **)** |constructor|                       |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`append<class_PackedInt32Array_method_append>` **(** :ref:`int<class_int>` value **)**                                                            |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`append_array<class_PackedInt32Array_method_append_array>` **(** :ref:`PackedInt32Array<class_PackedInt32Array>` array **)**                      |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`bsearch<class_PackedInt32Array_method_bsearch>` **(** :ref:`int<class_int>` value, :ref:`bool<class_bool>` before=true **)**                     |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedInt32Array<class_PackedInt32Array>` | :ref:`duplicate<class_PackedInt32Array_method_duplicate>` **(** **)**                                                                                  |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`fill<class_PackedInt32Array_method_fill>` **(** :ref:`int<class_int>` value **)**                                                                |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`has<class_PackedInt32Array_method_has>` **(** :ref:`int<class_int>` value **)** |const|                                                          |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`insert<class_PackedInt32Array_method_insert>` **(** :ref:`int<class_int>` at_index, :ref:`int<class_int>` value **)**                            |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`is_empty<class_PackedInt32Array_method_is_empty>` **(** **)** |const|                                                                            |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | **operator !=** **(** **)** |operator|                                                                                                                 |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | **operator !=** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` right **)** |operator|                                                           |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedInt32Array<class_PackedInt32Array>` | **operator +** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` right **)** |operator|                                                            |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | **operator ==** **(** **)** |operator|                                                                                                                 |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | **operator ==** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` right **)** |operator|                                                           |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | **operator []** **(** :ref:`int<class_int>` index **)** |operator|                                                                                     |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`push_back<class_PackedInt32Array_method_push_back>` **(** :ref:`int<class_int>` value **)**                                                      |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`remove<class_PackedInt32Array_method_remove>` **(** :ref:`int<class_int>` index **)**                                                            |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`resize<class_PackedInt32Array_method_resize>` **(** :ref:`int<class_int>` new_size **)**                                                         |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`reverse<class_PackedInt32Array_method_reverse>` **(** **)**                                                                                      |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`set<class_PackedInt32Array_method_set>` **(** :ref:`int<class_int>` index, :ref:`int<class_int>` value **)**                                     |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`size<class_PackedInt32Array_method_size>` **(** **)** |const|                                                                                    |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`sort<class_PackedInt32Array_method_sort>` **(** **)**                                                                                            |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedInt32Array<class_PackedInt32Array>` | :ref:`subarray<class_PackedInt32Array_method_subarray>` **(** :ref:`int<class_int>` from, :ref:`int<class_int>` to **)** |const|                       |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedByteArray<class_PackedByteArray>`   | :ref:`to_byte_array<class_PackedInt32Array_method_to_byte_array>` **(** **)** |const|                                                                  |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+

Method Descriptions
-------------------

.. _class_PackedInt32Array_method_PackedInt32Array:

- :ref:`PackedInt32Array<class_PackedInt32Array>` **PackedInt32Array** **(** **)** |constructor|

Constructs an empty ``PackedInt32Array``.

----

- :ref:`PackedInt32Array<class_PackedInt32Array>` **PackedInt32Array** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` from **)** |constructor|

Constructs a ``PackedInt32Array`` as a copy of the given ``PackedInt32Array``.

----

- :ref:`PackedInt32Array<class_PackedInt32Array>` **PackedInt32Array** **(** :ref:`Array<class_Array>` from **)** |constructor|

Constructs a new ``PackedInt32Array``. Optionally, you can pass in a generic :ref:`Array<class_Array>` that will be converted.

----

.. _class_PackedInt32Array_method_append:

- :ref:`bool<class_bool>` **append** **(** :ref:`int<class_int>` value **)**

Appends an element at the end of the array (alias of :ref:`push_back<class_PackedInt32Array_method_push_back>`).

----

.. _class_PackedInt32Array_method_append_array:

- void **append_array** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` array **)**

Appends a ``PackedInt32Array`` at the end of this array.

----

.. _class_PackedInt32Array_method_bsearch:

- :ref:`int<class_int>` **bsearch** **(** :ref:`int<class_int>` value, :ref:`bool<class_bool>` before=true **)**

Finds the index of an existing value (or the insertion index that maintains sorting order, if the value is not yet present in the array) using binary search. Optionally, a ``before`` specifier can be passed. If ``false``, the returned index comes after all existing entries of the value in the array.

**Note:** Calling :ref:`bsearch<class_PackedInt32Array_method_bsearch>` on an unsorted array results in unexpected behavior.

----

.. _class_PackedInt32Array_method_duplicate:

- :ref:`PackedInt32Array<class_PackedInt32Array>` **duplicate** **(** **)**

Creates a copy of the array, and returns it.

----

.. _class_PackedInt32Array_method_fill:

- void **fill** **(** :ref:`int<class_int>` value **)**

Assigns the given value to all elements in the array. This can typically be used together with :ref:`resize<class_PackedInt32Array_method_resize>` to create an array with a given size and initialized elements.

----

.. _class_PackedInt32Array_method_has:

- :ref:`bool<class_bool>` **has** **(** :ref:`int<class_int>` value **)** |const|

Returns ``true`` if the array contains ``value``.

----

.. _class_PackedInt32Array_method_insert:

- :ref:`int<class_int>` **insert** **(** :ref:`int<class_int>` at_index, :ref:`int<class_int>` value **)**

Inserts a new integer at a given position in the array. The position must be valid, or at the end of the array (``idx == size()``).

----

.. _class_PackedInt32Array_method_is_empty:

- :ref:`bool<class_bool>` **is_empty** **(** **)** |const|

Returns ``true`` if the array is empty.

----

.. _class_PackedInt32Array_method_operator !=:

- :ref:`bool<class_bool>` **operator !=** **(** **)** |operator|

----

- :ref:`bool<class_bool>` **operator !=** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` right **)** |operator|

----

.. _class_PackedInt32Array_method_operator +:

- :ref:`PackedInt32Array<class_PackedInt32Array>` **operator +** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` right **)** |operator|

----

.. _class_PackedInt32Array_method_operator ==:

- :ref:`bool<class_bool>` **operator ==** **(** **)** |operator|

----

- :ref:`bool<class_bool>` **operator ==** **(** :ref:`PackedInt32Array<class_PackedInt32Array>` right **)** |operator|

----

.. _class_PackedInt32Array_method_operator []:

- :ref:`int<class_int>` **operator []** **(** :ref:`int<class_int>` index **)** |operator|

----

.. _class_PackedInt32Array_method_push_back:

- :ref:`bool<class_bool>` **push_back** **(** :ref:`int<class_int>` value **)**

Appends a value to the array.

----

.. _class_PackedInt32Array_method_remove:

- void **remove** **(** :ref:`int<class_int>` index **)**

Removes an element from the array by index.

----

.. _class_PackedInt32Array_method_resize:

- :ref:`int<class_int>` **resize** **(** :ref:`int<class_int>` new_size **)**

Sets the size of the array. If the array is grown, reserves elements at the end of the array. If the array is shrunk, truncates the array to the new size.

----

.. _class_PackedInt32Array_method_reverse:

- void **reverse** **(** **)**

Reverses the order of the elements in the array.

----

.. _class_PackedInt32Array_method_set:

- void **set** **(** :ref:`int<class_int>` index, :ref:`int<class_int>` value **)**

Changes the integer at the given index.

----

.. _class_PackedInt32Array_method_size:

- :ref:`int<class_int>` **size** **(** **)** |const|

Returns the array size.

----

.. _class_PackedInt32Array_method_sort:

- void **sort** **(** **)**

Sorts the elements of the array in ascending order.

----

.. _class_PackedInt32Array_method_subarray:

- :ref:`PackedInt32Array<class_PackedInt32Array>` **subarray** **(** :ref:`int<class_int>` from, :ref:`int<class_int>` to **)** |const|

----

.. _class_PackedInt32Array_method_to_byte_array:

- :ref:`PackedByteArray<class_PackedByteArray>` **to_byte_array** **(** **)** |const|

Returns a copy of the data converted to a :ref:`PackedByteArray<class_PackedByteArray>`, where each element have been encoded as 4 bytes.

The size of the new array will be ``int32_array.size() * 4``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
