:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TextLine.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextLine:

TextLine
========

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Holds a line of text.

Description
-----------

Abstraction over :ref:`TextServer<class_TextServer>` for handling single line of text.

Properties
----------

+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`HAlign<enum_@GlobalScope_HAlign>`               | :ref:`align<class_TextLine_property_align>`                                 | ``0``     |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`Direction<enum_TextServer_Direction>`           | :ref:`direction<class_TextLine_property_direction>`                         | ``0``     |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`int<class_int>`                                 | :ref:`flags<class_TextLine_property_flags>`                                 | ``3``     |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`Orientation<enum_TextServer_Orientation>`       | :ref:`orientation<class_TextLine_property_orientation>`                     | ``0``     |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                               | :ref:`preserve_control<class_TextLine_property_preserve_control>`           | ``false`` |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                               | :ref:`preserve_invalid<class_TextLine_property_preserve_invalid>`           | ``true``  |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`OverrunBehavior<enum_TextLine_OverrunBehavior>` | :ref:`text_overrun_behavior<class_TextLine_property_text_overrun_behavior>` | ``3``     |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                             | :ref:`width<class_TextLine_property_width>`                                 | ``-1.0``  |
+-------------------------------------------------------+-----------------------------------------------------------------------------+-----------+

Methods
-------

+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`add_object<class_TextLine_method_add_object>` **(** :ref:`Variant<class_Variant>` key, :ref:`Vector2<class_Vector2>` size, :ref:`InlineAlign<enum_@GlobalScope_InlineAlign>` inline_align=5, :ref:`int<class_int>` length=1 **)**                         |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`add_string<class_TextLine_method_add_string>` **(** :ref:`String<class_String>` text, :ref:`Font<class_Font>` fonts, :ref:`int<class_int>` size, :ref:`Dictionary<class_Dictionary>` opentype_features={ }, :ref:`String<class_String>` language="" **)** |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear<class_TextLine_method_clear>` **(** **)**                                                                                                                                                                                                           |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`draw<class_TextLine_method_draw>` **(** :ref:`RID<class_RID>` canvas, :ref:`Vector2<class_Vector2>` pos, :ref:`Color<class_Color>` color=Color(1, 1, 1, 1) **)** |const|                                                                                  |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`draw_outline<class_TextLine_method_draw_outline>` **(** :ref:`RID<class_RID>` canvas, :ref:`Vector2<class_Vector2>` pos, :ref:`int<class_int>` outline_size=1, :ref:`Color<class_Color>` color=Color(1, 1, 1, 1) **)** |const|                            |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_line_ascent<class_TextLine_method_get_line_ascent>` **(** **)** |const|                                                                                                                                                                               |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_line_descent<class_TextLine_method_get_line_descent>` **(** **)** |const|                                                                                                                                                                             |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_line_underline_position<class_TextLine_method_get_line_underline_position>` **(** **)** |const|                                                                                                                                                       |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_line_underline_thickness<class_TextLine_method_get_line_underline_thickness>` **(** **)** |const|                                                                                                                                                     |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_line_width<class_TextLine_method_get_line_width>` **(** **)** |const|                                                                                                                                                                                 |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`get_object_rect<class_TextLine_method_get_object_rect>` **(** :ref:`Variant<class_Variant>` key **)** |const|                                                                                                                                             |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_objects<class_TextLine_method_get_objects>` **(** **)** |const|                                                                                                                                                                                       |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`         | :ref:`get_rid<class_TextLine_method_get_rid>` **(** **)** |const|                                                                                                                                                                                               |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_size<class_TextLine_method_get_size>` **(** **)** |const|                                                                                                                                                                                             |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`hit_test<class_TextLine_method_hit_test>` **(** :ref:`float<class_float>` coords **)** |const|                                                                                                                                                            |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`resize_object<class_TextLine_method_resize_object>` **(** :ref:`Variant<class_Variant>` key, :ref:`Vector2<class_Vector2>` size, :ref:`InlineAlign<enum_@GlobalScope_InlineAlign>` inline_align=5 **)**                                                   |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_bidi_override<class_TextLine_method_set_bidi_override>` **(** :ref:`Array<class_Array>` override **)**                                                                                                                                                |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`tab_align<class_TextLine_method_tab_align>` **(** :ref:`PackedFloat32Array<class_PackedFloat32Array>` tab_stops **)**                                                                                                                                     |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_TextLine_OverrunBehavior:

.. _class_TextLine_constant_OVERRUN_NO_TRIMMING:

.. _class_TextLine_constant_OVERRUN_TRIM_CHAR:

.. _class_TextLine_constant_OVERRUN_TRIM_WORD:

.. _class_TextLine_constant_OVERRUN_TRIM_ELLIPSIS:

.. _class_TextLine_constant_OVERRUN_TRIM_WORD_ELLIPSIS:

enum **OverrunBehavior**:

- **OVERRUN_NO_TRIMMING** = **0** --- No text trimming is performed.

- **OVERRUN_TRIM_CHAR** = **1** --- Trims the text per character.

- **OVERRUN_TRIM_WORD** = **2** --- Trims the text per word.

- **OVERRUN_TRIM_ELLIPSIS** = **3** --- Trims the text per character and adds an ellipsis to indicate that parts are hidden.

- **OVERRUN_TRIM_WORD_ELLIPSIS** = **4** --- Trims the text per word and adds an ellipsis to indicate that parts are hidden.

Property Descriptions
---------------------

.. _class_TextLine_property_align:

- :ref:`HAlign<enum_@GlobalScope_HAlign>` **align**

+-----------+------------------+
| *Default* | ``0``            |
+-----------+------------------+
| *Setter*  | set_align(value) |
+-----------+------------------+
| *Getter*  | get_align()      |
+-----------+------------------+

Text horizontal alignment.

----

.. _class_TextLine_property_direction:

- :ref:`Direction<enum_TextServer_Direction>` **direction**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_direction(value) |
+-----------+----------------------+
| *Getter*  | get_direction()      |
+-----------+----------------------+

Text writing direction.

----

.. _class_TextLine_property_flags:

- :ref:`int<class_int>` **flags**

+-----------+------------------+
| *Default* | ``3``            |
+-----------+------------------+
| *Setter*  | set_flags(value) |
+-----------+------------------+
| *Getter*  | get_flags()      |
+-----------+------------------+

Line Alignment rules. For more info see :ref:`TextServer<class_TextServer>`.

----

.. _class_TextLine_property_orientation:

- :ref:`Orientation<enum_TextServer_Orientation>` **orientation**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_orientation(value) |
+-----------+------------------------+
| *Getter*  | get_orientation()      |
+-----------+------------------------+

Text orientation.

----

.. _class_TextLine_property_preserve_control:

- :ref:`bool<class_bool>` **preserve_control**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_preserve_control(value) |
+-----------+-----------------------------+
| *Getter*  | get_preserve_control()      |
+-----------+-----------------------------+

If set to ``true`` text will display control characters.

----

.. _class_TextLine_property_preserve_invalid:

- :ref:`bool<class_bool>` **preserve_invalid**

+-----------+-----------------------------+
| *Default* | ``true``                    |
+-----------+-----------------------------+
| *Setter*  | set_preserve_invalid(value) |
+-----------+-----------------------------+
| *Getter*  | get_preserve_invalid()      |
+-----------+-----------------------------+

If set to ``true`` text will display invalid characters.

----

.. _class_TextLine_property_text_overrun_behavior:

- :ref:`OverrunBehavior<enum_TextLine_OverrunBehavior>` **text_overrun_behavior**

+-----------+----------------------------------+
| *Default* | ``3``                            |
+-----------+----------------------------------+
| *Setter*  | set_text_overrun_behavior(value) |
+-----------+----------------------------------+
| *Getter*  | get_text_overrun_behavior()      |
+-----------+----------------------------------+

Sets the clipping behavior when the text exceeds the text line's set width. See :ref:`OverrunBehavior<enum_TextLine_OverrunBehavior>` for a description of all modes.

----

.. _class_TextLine_property_width:

- :ref:`float<class_float>` **width**

+-----------+------------------+
| *Default* | ``-1.0``         |
+-----------+------------------+
| *Setter*  | set_width(value) |
+-----------+------------------+
| *Getter*  | get_width()      |
+-----------+------------------+

Text line width.

Method Descriptions
-------------------

.. _class_TextLine_method_add_object:

- :ref:`bool<class_bool>` **add_object** **(** :ref:`Variant<class_Variant>` key, :ref:`Vector2<class_Vector2>` size, :ref:`InlineAlign<enum_@GlobalScope_InlineAlign>` inline_align=5, :ref:`int<class_int>` length=1 **)**

Adds inline object to the text buffer, ``key`` must be unique. In the text, object is represented as ``length`` object replacement characters.

----

.. _class_TextLine_method_add_string:

- :ref:`bool<class_bool>` **add_string** **(** :ref:`String<class_String>` text, :ref:`Font<class_Font>` fonts, :ref:`int<class_int>` size, :ref:`Dictionary<class_Dictionary>` opentype_features={ }, :ref:`String<class_String>` language="" **)**

Adds text span and font to draw it.

----

.. _class_TextLine_method_clear:

- void **clear** **(** **)**

Clears text line (removes text and inline objects).

----

.. _class_TextLine_method_draw:

- void **draw** **(** :ref:`RID<class_RID>` canvas, :ref:`Vector2<class_Vector2>` pos, :ref:`Color<class_Color>` color=Color(1, 1, 1, 1) **)** |const|

Draw text into a canvas item at a given position, with ``color``. ``pos`` specifies the top left corner of the bounding box.

----

.. _class_TextLine_method_draw_outline:

- void **draw_outline** **(** :ref:`RID<class_RID>` canvas, :ref:`Vector2<class_Vector2>` pos, :ref:`int<class_int>` outline_size=1, :ref:`Color<class_Color>` color=Color(1, 1, 1, 1) **)** |const|

Draw text into a canvas item at a given position, with ``color``. ``pos`` specifies the top left corner of the bounding box.

----

.. _class_TextLine_method_get_line_ascent:

- :ref:`float<class_float>` **get_line_ascent** **(** **)** |const|

Returns the text ascent (number of pixels above the baseline for horizontal layout or to the left of baseline for vertical).

----

.. _class_TextLine_method_get_line_descent:

- :ref:`float<class_float>` **get_line_descent** **(** **)** |const|

Returns the text descent (number of pixels below the baseline for horizontal layout or to the right of baseline for vertical).

----

.. _class_TextLine_method_get_line_underline_position:

- :ref:`float<class_float>` **get_line_underline_position** **(** **)** |const|

Returns pixel offset of the underline below the baseline.

----

.. _class_TextLine_method_get_line_underline_thickness:

- :ref:`float<class_float>` **get_line_underline_thickness** **(** **)** |const|

Returns thickness of the underline.

----

.. _class_TextLine_method_get_line_width:

- :ref:`float<class_float>` **get_line_width** **(** **)** |const|

Returns width (for horizontal layout) or height (for vertical) of the text.

----

.. _class_TextLine_method_get_object_rect:

- :ref:`Rect2<class_Rect2>` **get_object_rect** **(** :ref:`Variant<class_Variant>` key **)** |const|

Returns bounding rectangle of the inline object.

----

.. _class_TextLine_method_get_objects:

- :ref:`Array<class_Array>` **get_objects** **(** **)** |const|

Returns array of inline objects.

----

.. _class_TextLine_method_get_rid:

- :ref:`RID<class_RID>` **get_rid** **(** **)** |const|

Returns TextServer buffer RID.

----

.. _class_TextLine_method_get_size:

- :ref:`Vector2<class_Vector2>` **get_size** **(** **)** |const|

Returns size of the bounding box of the text.

----

.. _class_TextLine_method_hit_test:

- :ref:`int<class_int>` **hit_test** **(** :ref:`float<class_float>` coords **)** |const|

Returns caret character offset at the specified pixel offset at the baseline. This function always returns a valid position.

----

.. _class_TextLine_method_resize_object:

- :ref:`bool<class_bool>` **resize_object** **(** :ref:`Variant<class_Variant>` key, :ref:`Vector2<class_Vector2>` size, :ref:`InlineAlign<enum_@GlobalScope_InlineAlign>` inline_align=5 **)**

Sets new size and alignment of embedded object.

----

.. _class_TextLine_method_set_bidi_override:

- void **set_bidi_override** **(** :ref:`Array<class_Array>` override **)**

Overrides BiDi for the structured text.

Override ranges should cover full source text without overlaps. BiDi algorithm will be used on each range separately.

----

.. _class_TextLine_method_tab_align:

- void **tab_align** **(** :ref:`PackedFloat32Array<class_PackedFloat32Array>` tab_stops **)**

Aligns text to the given tab-stops.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
