:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisibleOnScreenNotifier3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisibleOnScreenNotifier3D:

VisibleOnScreenNotifier3D
=========================

**Inherits:** :ref:`VisualInstance3D<class_VisualInstance3D>` **<** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`VisibleOnScreenEnabler3D<class_VisibleOnScreenEnabler3D>`

Detects approximately when the node is visible on screen.

Description
-----------

The VisibleOnScreenNotifier3D detects when it is visible on the screen. It also notifies when its bounding rectangle enters or exits the screen or a :ref:`Camera3D<class_Camera3D>`'s view.

If you want nodes to be disabled automatically when they exit the screen, use :ref:`VisibleOnScreenEnabler3D<class_VisibleOnScreenEnabler3D>` instead.

**Note:** VisibleOnScreenNotifier3D uses an approximate heuristic for performance reasons. It doesn't take walls and other occlusion into account. The heuristic is an implementation detail and may change in future versions. If you need precise visibility checking, use another method such as adding an :ref:`Area3D<class_Area3D>` node as a child of a :ref:`Camera3D<class_Camera3D>` node and/or :ref:`Vector3.dot<class_Vector3_method_dot>`.

Properties
----------

+-------------------------+------------------------------------------------------------+-------------------------------+
| :ref:`AABB<class_AABB>` | :ref:`aabb<class_VisibleOnScreenNotifier3D_property_aabb>` | ``AABB(-1, -1, -1, 2, 2, 2)`` |
+-------------------------+------------------------------------------------------------+-------------------------------+

Methods
-------

+-------------------------+----------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_on_screen<class_VisibleOnScreenNotifier3D_method_is_on_screen>` **(** **)** |const| |
+-------------------------+----------------------------------------------------------------------------------------------+

Signals
-------

.. _class_VisibleOnScreenNotifier3D_signal_screen_entered:

- **screen_entered** **(** **)**

Emitted when the VisibleOnScreenNotifier3D enters the screen.

----

.. _class_VisibleOnScreenNotifier3D_signal_screen_exited:

- **screen_exited** **(** **)**

Emitted when the VisibleOnScreenNotifier3D exits the screen.

Property Descriptions
---------------------

.. _class_VisibleOnScreenNotifier3D_property_aabb:

- :ref:`AABB<class_AABB>` **aabb**

+-----------+-------------------------------+
| *Default* | ``AABB(-1, -1, -1, 2, 2, 2)`` |
+-----------+-------------------------------+
| *Setter*  | set_aabb(value)               |
+-----------+-------------------------------+
| *Getter*  | get_aabb()                    |
+-----------+-------------------------------+

The VisibleOnScreenNotifier3D's bounding box.

Method Descriptions
-------------------

.. _class_VisibleOnScreenNotifier3D_method_is_on_screen:

- :ref:`bool<class_bool>` **is_on_screen** **(** **)** |const|

If ``true``, the bounding box is on the screen.

**Note:** It takes one frame for the node's visibility to be assessed once added to the scene tree, so this method will return ``false`` right after it is instantiated, even if it will be on screen in the draw pass.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
