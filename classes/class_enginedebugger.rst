:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the EngineDebugger.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_EngineDebugger:

EngineDebugger
==============

**Inherits:** :ref:`Object<class_Object>`

Exposes the internal debugger.

Description
-----------

``EngineDebugger`` handles the communication between the editor and the running game. It is active in the running game. Messages can be sent/received through it. It also manages the profilers.

Methods
-------

+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`has_capture<class_EngineDebugger_method_has_capture>` **(** :ref:`StringName<class_StringName>` name **)**                                                                                                                                |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`has_profiler<class_EngineDebugger_method_has_profiler>` **(** :ref:`StringName<class_StringName>` name **)**                                                                                                                              |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_active<class_EngineDebugger_method_is_active>` **(** **)**                                                                                                                                                                             |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_profiling<class_EngineDebugger_method_is_profiling>` **(** :ref:`StringName<class_StringName>` name **)**                                                                                                                              |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`profiler_add_frame_data<class_EngineDebugger_method_profiler_add_frame_data>` **(** :ref:`StringName<class_StringName>` name, :ref:`Array<class_Array>` data **)**                                                                        |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`profiler_enable<class_EngineDebugger_method_profiler_enable>` **(** :ref:`StringName<class_StringName>` name, :ref:`bool<class_bool>` enable, :ref:`Array<class_Array>` arguments=[] **)**                                                |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`register_message_capture<class_EngineDebugger_method_register_message_capture>` **(** :ref:`StringName<class_StringName>` name, :ref:`Callable<class_Callable>` callable **)**                                                            |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`register_profiler<class_EngineDebugger_method_register_profiler>` **(** :ref:`StringName<class_StringName>` name, :ref:`Callable<class_Callable>` toggle, :ref:`Callable<class_Callable>` add, :ref:`Callable<class_Callable>` tick **)** |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`send_message<class_EngineDebugger_method_send_message>` **(** :ref:`String<class_String>` message, :ref:`Array<class_Array>` data **)**                                                                                                   |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`unregister_message_capture<class_EngineDebugger_method_unregister_message_capture>` **(** :ref:`StringName<class_StringName>` name **)**                                                                                                  |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`unregister_profiler<class_EngineDebugger_method_unregister_profiler>` **(** :ref:`StringName<class_StringName>` name **)**                                                                                                                |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Method Descriptions
-------------------

.. _class_EngineDebugger_method_has_capture:

- :ref:`bool<class_bool>` **has_capture** **(** :ref:`StringName<class_StringName>` name **)**

Returns ``true`` if a capture with the given name is present otherwise ``false``.

----

.. _class_EngineDebugger_method_has_profiler:

- :ref:`bool<class_bool>` **has_profiler** **(** :ref:`StringName<class_StringName>` name **)**

Returns ``true`` if a profiler with the given name is present otherwise ``false``.

----

.. _class_EngineDebugger_method_is_active:

- :ref:`bool<class_bool>` **is_active** **(** **)**

Returns ``true`` if the debugger is active otherwise ``false``.

----

.. _class_EngineDebugger_method_is_profiling:

- :ref:`bool<class_bool>` **is_profiling** **(** :ref:`StringName<class_StringName>` name **)**

Returns ``true`` if a profiler with the given name is present and active otherwise ``false``.

----

.. _class_EngineDebugger_method_profiler_add_frame_data:

- void **profiler_add_frame_data** **(** :ref:`StringName<class_StringName>` name, :ref:`Array<class_Array>` data **)**

Calls the ``add`` callable of the profiler with given ``name`` and ``data``.

----

.. _class_EngineDebugger_method_profiler_enable:

- void **profiler_enable** **(** :ref:`StringName<class_StringName>` name, :ref:`bool<class_bool>` enable, :ref:`Array<class_Array>` arguments=[] **)**

Calls the ``toggle`` callable of the profiler with given ``name`` and ``arguments``. Enables/Disables the same profiler depending on ``enable`` argument.

----

.. _class_EngineDebugger_method_register_message_capture:

- void **register_message_capture** **(** :ref:`StringName<class_StringName>` name, :ref:`Callable<class_Callable>` callable **)**

Registers a message capture with given ``name``. If ``name`` is "my_message" then messages starting with "my_message:" will be called with the given callable.

Callable must accept a message string and a data array as argument. If the message and data are valid then callable must return ``true`` otherwise ``false``.

----

.. _class_EngineDebugger_method_register_profiler:

- void **register_profiler** **(** :ref:`StringName<class_StringName>` name, :ref:`Callable<class_Callable>` toggle, :ref:`Callable<class_Callable>` add, :ref:`Callable<class_Callable>` tick **)**

Registers a profiler with the given ``name``.

``toggle`` callable is called when the profiler is enabled/disabled. It must take an argument array as an argument.

``add`` callable is called when data is added to profiler using :ref:`profiler_add_frame_data<class_EngineDebugger_method_profiler_add_frame_data>`. It must take a data array as argument.

``tick`` callable is called at every active profiler iteration. It must take frame time, idle time, physics time, and physics idle time as arguments.

----

.. _class_EngineDebugger_method_send_message:

- void **send_message** **(** :ref:`String<class_String>` message, :ref:`Array<class_Array>` data **)**

Sends a message with given ``message`` and ``data`` array.

----

.. _class_EngineDebugger_method_unregister_message_capture:

- void **unregister_message_capture** **(** :ref:`StringName<class_StringName>` name **)**

Unregisters the message capture with given ``name``.

----

.. _class_EngineDebugger_method_unregister_profiler:

- void **unregister_profiler** **(** :ref:`StringName<class_StringName>` name **)**

Unregisters a profiler with given ``name``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
