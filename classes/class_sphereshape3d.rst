:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SphereShape3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SphereShape3D:

SphereShape3D
=============

**Inherits:** :ref:`Shape3D<class_Shape3D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Sphere shape for 3D collisions.

Description
-----------

Sphere shape for 3D collisions, which can be set into a :ref:`PhysicsBody3D<class_PhysicsBody3D>` or :ref:`Area3D<class_Area3D>`. This shape is useful for modeling sphere-like 3D objects.

Tutorials
---------

- `3D Physics Tests Demo <https://godotengine.org/asset-library/asset/675>`__

Properties
----------

+---------------------------+----------------------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`radius<class_SphereShape3D_property_radius>` | ``1.0`` |
+---------------------------+----------------------------------------------------+---------+

Property Descriptions
---------------------

.. _class_SphereShape3D_property_radius:

- :ref:`float<class_float>` **radius**

+-----------+-------------------+
| *Default* | ``1.0``           |
+-----------+-------------------+
| *Setter*  | set_radius(value) |
+-----------+-------------------+
| *Getter*  | get_radius()      |
+-----------+-------------------+

The sphere's radius. The shape's diameter is double the radius.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
