:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SkeletonModification3DStackHolder.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SkeletonModification3DStackHolder:

SkeletonModification3DStackHolder
=================================

**Inherits:** :ref:`SkeletonModification3D<class_SkeletonModification3D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

A modification that holds and executes a :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>`.

Description
-----------

This :ref:`SkeletonModification3D<class_SkeletonModification3D>` holds a reference to a :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>`, allowing you to use multiple modification stacks on a single :ref:`Skeleton3D<class_Skeleton3D>`.

**Note:** The modifications in the held :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>` will only be executed if their execution mode matches the execution mode of the SkeletonModification3DStackHolder.

Methods
-------

+-----------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>` | :ref:`get_held_modification_stack<class_SkeletonModification3DStackHolder_method_get_held_modification_stack>` **(** **)** |const|                                                                                       |
+-----------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                                  | :ref:`set_held_modification_stack<class_SkeletonModification3DStackHolder_method_set_held_modification_stack>` **(** :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>` held_modification_stack **)** |
+-----------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Method Descriptions
-------------------

.. _class_SkeletonModification3DStackHolder_method_get_held_modification_stack:

- :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>` **get_held_modification_stack** **(** **)** |const|

Returns the :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>` that this modification is holding.

----

.. _class_SkeletonModification3DStackHolder_method_set_held_modification_stack:

- void **set_held_modification_stack** **(** :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>` held_modification_stack **)**

Sets the :ref:`SkeletonModificationStack3D<class_SkeletonModificationStack3D>` that this modification is holding. This modification stack will then be executed when this modification is executed.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
