:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RectangleShape2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RectangleShape2D:

RectangleShape2D
================

**Inherits:** :ref:`Shape2D<class_Shape2D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Rectangle shape for 2D collisions.

Description
-----------

Rectangle shape for 2D collisions. This shape is useful for modeling box-like 2D objects.

Tutorials
---------

- `2D Pong Demo <https://godotengine.org/asset-library/asset/121>`__

- `2D Kinematic Character Demo <https://godotengine.org/asset-library/asset/113>`__

Properties
----------

+-------------------------------+---------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`size<class_RectangleShape2D_property_size>` | ``Vector2(20, 20)`` |
+-------------------------------+---------------------------------------------------+---------------------+

Property Descriptions
---------------------

.. _class_RectangleShape2D_property_size:

- :ref:`Vector2<class_Vector2>` **size**

+-----------+---------------------+
| *Default* | ``Vector2(20, 20)`` |
+-----------+---------------------+
| *Setter*  | set_size(value)     |
+-----------+---------------------+
| *Getter*  | get_size()          |
+-----------+---------------------+

The rectangle's width and height.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
