:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualShaderNodeUniform.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualShaderNodeUniform:

VisualShaderNodeUniform
=======================

**Inherits:** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`VisualShaderNodeBooleanUniform<class_VisualShaderNodeBooleanUniform>`, :ref:`VisualShaderNodeColorUniform<class_VisualShaderNodeColorUniform>`, :ref:`VisualShaderNodeFloatUniform<class_VisualShaderNodeFloatUniform>`, :ref:`VisualShaderNodeIntUniform<class_VisualShaderNodeIntUniform>`, :ref:`VisualShaderNodeTextureUniform<class_VisualShaderNodeTextureUniform>`, :ref:`VisualShaderNodeTransformUniform<class_VisualShaderNodeTransformUniform>`, :ref:`VisualShaderNodeVec3Uniform<class_VisualShaderNodeVec3Uniform>`

A base type for the uniforms within the visual shader graph.

Description
-----------

A uniform represents a variable in the shader which is set externally, i.e. from the :ref:`ShaderMaterial<class_ShaderMaterial>`. Uniforms are exposed as properties in the :ref:`ShaderMaterial<class_ShaderMaterial>` and can be assigned from the inspector or from a script.

Properties
----------

+----------------------------------------------------------+--------------------------------------------------------------------------+--------+
| :ref:`Qualifier<enum_VisualShaderNodeUniform_Qualifier>` | :ref:`qualifier<class_VisualShaderNodeUniform_property_qualifier>`       | ``0``  |
+----------------------------------------------------------+--------------------------------------------------------------------------+--------+
| :ref:`String<class_String>`                              | :ref:`uniform_name<class_VisualShaderNodeUniform_property_uniform_name>` | ``""`` |
+----------------------------------------------------------+--------------------------------------------------------------------------+--------+

Enumerations
------------

.. _enum_VisualShaderNodeUniform_Qualifier:

.. _class_VisualShaderNodeUniform_constant_QUAL_NONE:

.. _class_VisualShaderNodeUniform_constant_QUAL_GLOBAL:

.. _class_VisualShaderNodeUniform_constant_QUAL_INSTANCE:

.. _class_VisualShaderNodeUniform_constant_QUAL_MAX:

enum **Qualifier**:

- **QUAL_NONE** = **0**

- **QUAL_GLOBAL** = **1**

- **QUAL_INSTANCE** = **2**

- **QUAL_MAX** = **3** --- Represents the size of the :ref:`Qualifier<enum_VisualShaderNodeUniform_Qualifier>` enum.

Property Descriptions
---------------------

.. _class_VisualShaderNodeUniform_property_qualifier:

- :ref:`Qualifier<enum_VisualShaderNodeUniform_Qualifier>` **qualifier**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_qualifier(value) |
+-----------+----------------------+
| *Getter*  | get_qualifier()      |
+-----------+----------------------+

----

.. _class_VisualShaderNodeUniform_property_uniform_name:

- :ref:`String<class_String>` **uniform_name**

+-----------+-------------------------+
| *Default* | ``""``                  |
+-----------+-------------------------+
| *Setter*  | set_uniform_name(value) |
+-----------+-------------------------+
| *Getter*  | get_uniform_name()      |
+-----------+-------------------------+

Name of the uniform, by which it can be accessed through the :ref:`ShaderMaterial<class_ShaderMaterial>` properties.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
