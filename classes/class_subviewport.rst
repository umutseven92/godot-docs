:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SubViewport.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SubViewport:

SubViewport
===========

**Inherits:** :ref:`Viewport<class_Viewport>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Creates a sub-view into the screen.

Tutorials
---------

- :doc:`../tutorials/2d/2d_transforms`

- :doc:`../tutorials/viewports/index`

- `GUI in 3D Demo <https://godotengine.org/asset-library/asset/127>`__

- `3D in 2D Demo <https://godotengine.org/asset-library/asset/128>`__

- `2D in 3D Demo <https://godotengine.org/asset-library/asset/129>`__

- `Screen Capture Demo <https://godotengine.org/asset-library/asset/130>`__

- `Dynamic Split Screen Demo <https://godotengine.org/asset-library/asset/541>`__

- `3D Viewport Scaling Demo <https://godotengine.org/asset-library/asset/586>`__

Properties
----------

+------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
| :ref:`ClearMode<enum_SubViewport_ClearMode>`   | :ref:`render_target_clear_mode<class_SubViewport_property_render_target_clear_mode>`   | ``0``                  |
+------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
| :ref:`UpdateMode<enum_SubViewport_UpdateMode>` | :ref:`render_target_update_mode<class_SubViewport_property_render_target_update_mode>` | ``2``                  |
+------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
| :ref:`Vector2i<class_Vector2i>`                | :ref:`size<class_SubViewport_property_size>`                                           | ``Vector2i(512, 512)`` |
+------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
| :ref:`Vector2i<class_Vector2i>`                | :ref:`size_2d_override<class_SubViewport_property_size_2d_override>`                   | ``Vector2i(0, 0)``     |
+------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
| :ref:`bool<class_bool>`                        | :ref:`size_2d_override_stretch<class_SubViewport_property_size_2d_override_stretch>`   | ``false``              |
+------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+

Enumerations
------------

.. _enum_SubViewport_ClearMode:

.. _class_SubViewport_constant_CLEAR_MODE_ALWAYS:

.. _class_SubViewport_constant_CLEAR_MODE_NEVER:

.. _class_SubViewport_constant_CLEAR_MODE_ONCE:

enum **ClearMode**:

- **CLEAR_MODE_ALWAYS** = **0** --- Always clear the render target before drawing.

- **CLEAR_MODE_NEVER** = **1** --- Never clear the render target.

- **CLEAR_MODE_ONCE** = **2** --- Clear the render target on the next frame, then switch to :ref:`CLEAR_MODE_NEVER<class_SubViewport_constant_CLEAR_MODE_NEVER>`.

----

.. _enum_SubViewport_UpdateMode:

.. _class_SubViewport_constant_UPDATE_DISABLED:

.. _class_SubViewport_constant_UPDATE_ONCE:

.. _class_SubViewport_constant_UPDATE_WHEN_VISIBLE:

.. _class_SubViewport_constant_UPDATE_WHEN_PARENT_VISIBLE:

.. _class_SubViewport_constant_UPDATE_ALWAYS:

enum **UpdateMode**:

- **UPDATE_DISABLED** = **0** --- Do not update the render target.

- **UPDATE_ONCE** = **1** --- Update the render target once, then switch to :ref:`UPDATE_DISABLED<class_SubViewport_constant_UPDATE_DISABLED>`.

- **UPDATE_WHEN_VISIBLE** = **2** --- Update the render target only when it is visible. This is the default value.

- **UPDATE_WHEN_PARENT_VISIBLE** = **3** --- Update the render target only when its parent is visible.

- **UPDATE_ALWAYS** = **4** --- Always update the render target.

Property Descriptions
---------------------

.. _class_SubViewport_property_render_target_clear_mode:

- :ref:`ClearMode<enum_SubViewport_ClearMode>` **render_target_clear_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_clear_mode(value) |
+-----------+-----------------------+
| *Getter*  | get_clear_mode()      |
+-----------+-----------------------+

The clear mode when the sub-viewport is used as a render target.

**Note:** This property is intended for 2D usage.

----

.. _class_SubViewport_property_render_target_update_mode:

- :ref:`UpdateMode<enum_SubViewport_UpdateMode>` **render_target_update_mode**

+-----------+------------------------+
| *Default* | ``2``                  |
+-----------+------------------------+
| *Setter*  | set_update_mode(value) |
+-----------+------------------------+
| *Getter*  | get_update_mode()      |
+-----------+------------------------+

The update mode when the sub-viewport is used as a render target.

----

.. _class_SubViewport_property_size:

- :ref:`Vector2i<class_Vector2i>` **size**

+-----------+------------------------+
| *Default* | ``Vector2i(512, 512)`` |
+-----------+------------------------+
| *Setter*  | set_size(value)        |
+-----------+------------------------+
| *Getter*  | get_size()             |
+-----------+------------------------+

The width and height of the sub-viewport.

----

.. _class_SubViewport_property_size_2d_override:

- :ref:`Vector2i<class_Vector2i>` **size_2d_override**

+-----------+-----------------------------+
| *Default* | ``Vector2i(0, 0)``          |
+-----------+-----------------------------+
| *Setter*  | set_size_2d_override(value) |
+-----------+-----------------------------+
| *Getter*  | get_size_2d_override()      |
+-----------+-----------------------------+

The 2D size override of the sub-viewport. If either the width or height is ``0``, the override is disabled.

----

.. _class_SubViewport_property_size_2d_override_stretch:

- :ref:`bool<class_bool>` **size_2d_override_stretch**

+-----------+---------------------------------------+
| *Default* | ``false``                             |
+-----------+---------------------------------------+
| *Setter*  | set_size_2d_override_stretch(value)   |
+-----------+---------------------------------------+
| *Getter*  | is_size_2d_override_stretch_enabled() |
+-----------+---------------------------------------+

If ``true``, the 2D size override affects stretch as well.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
